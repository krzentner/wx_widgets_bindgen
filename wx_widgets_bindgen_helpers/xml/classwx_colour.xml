<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classwx_colour" kind="class" language="C++" prot="public">
    <compoundname>wxColour</compoundname>
    <basecompoundref refid="classwx_object" prot="public" virt="non-virtual">wxObject</basecompoundref>
    <includes local="no">wx/colour.h</includes>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classwx_colour_1ac7d46c0479a74b63e67beba9c3f629c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxColour::SetRGB</definition>
        <argsstring>(wxUint32 colRGB)</argsstring>
        <name>SetRGB</name>
        <param>
          <type><ref refid="defs_8h_1afdb12e5345c3fae4b537e813df9f02a3" kindref="member">wxUint32</ref></type>
          <declname>colRGB</declname>
        </param>
        <briefdescription>
<para>Sets the RGB or RGBA colour values from a single 32 bit value. </para>        </briefdescription>
        <detaileddescription>
<para>The arguments <emphasis>colRGB</emphasis> and <emphasis>colRGBA</emphasis> should be of the form 0x00BBGGRR and 0xAABBGGRR respectively where <computeroutput>0xRR</computeroutput>, <computeroutput>0xGG</computeroutput>, <computeroutput>0xBB</computeroutput> and <computeroutput>0xAA</computeroutput> are the values of the red, blue, green and alpha components.</para><para>Notice the right-to-left order of components!</para><para><simplesect kind="see"><para><ref refid="classwx_colour_1a90494a5b8c725e3f61a69d2a8ed1acd6" kindref="member">GetRGB()</ref>, <ref refid="classwx_colour_1a4fa82e86015fad4d50a1404bfb192857" kindref="member">GetRGBA()</ref></para></simplesect>
<simplesect kind="since"><para>2.9.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/colour.h" line="139" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_colour_1a940633aa9d78da10bf86cf6848364579" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxColour::SetRGBA</definition>
        <argsstring>(wxUint32 colRGBA)</argsstring>
        <name>SetRGBA</name>
        <param>
          <type><ref refid="defs_8h_1afdb12e5345c3fae4b537e813df9f02a3" kindref="member">wxUint32</ref></type>
          <declname>colRGBA</declname>
        </param>
        <briefdescription>
<para>Sets the RGB or RGBA colour values from a single 32 bit value. </para>        </briefdescription>
        <detaileddescription>
<para>The arguments <emphasis>colRGB</emphasis> and <emphasis>colRGBA</emphasis> should be of the form 0x00BBGGRR and 0xAABBGGRR respectively where <computeroutput>0xRR</computeroutput>, <computeroutput>0xGG</computeroutput>, <computeroutput>0xBB</computeroutput> and <computeroutput>0xAA</computeroutput> are the values of the red, blue, green and alpha components.</para><para>Notice the right-to-left order of components!</para><para><simplesect kind="see"><para><ref refid="classwx_colour_1a90494a5b8c725e3f61a69d2a8ed1acd6" kindref="member">GetRGB()</ref>, <ref refid="classwx_colour_1a4fa82e86015fad4d50a1404bfb192857" kindref="member">GetRGBA()</ref></para></simplesect>
<simplesect kind="since"><para>2.9.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/colour.h" line="140" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classwx_colour_1a90494a5b8c725e3f61a69d2a8ed1acd6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="defs_8h_1afdb12e5345c3fae4b537e813df9f02a3" kindref="member">wxUint32</ref></type>
        <definition>wxUint32 wxColour::GetRGB</definition>
        <argsstring>() const</argsstring>
        <name>GetRGB</name>
        <briefdescription>
<para>Gets the RGB or RGBA colour values as a single 32 bit value. </para>        </briefdescription>
        <detaileddescription>
<para>The returned value is of the same form as expected by <ref refid="classwx_colour_1ac7d46c0479a74b63e67beba9c3f629c9" kindref="member">SetRGB()</ref> and <ref refid="classwx_colour_1a940633aa9d78da10bf86cf6848364579" kindref="member">SetRGBA()</ref>.</para><para>Notice that <ref refid="classwx_colour_1a90494a5b8c725e3f61a69d2a8ed1acd6" kindref="member">GetRGB()</ref> returns the value with 0 as its highest byte independently of the value actually returned by <ref refid="classwx_colour_1a592932fee1ad3d7c74b9c9014a775605" kindref="member">Alpha()</ref>. So for a fully opaque colour, the return value of <ref refid="classwx_colour_1a4fa82e86015fad4d50a1404bfb192857" kindref="member">GetRGBA()</ref> is <computeroutput>0xFFBBGGRR</computeroutput> while that of <ref refid="classwx_colour_1a90494a5b8c725e3f61a69d2a8ed1acd6" kindref="member">GetRGB()</ref> is <computeroutput>0x00BBGGRR</computeroutput>.</para><para><simplesect kind="since"><para>2.9.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/colour.h" line="157" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_colour_1a4fa82e86015fad4d50a1404bfb192857" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="defs_8h_1afdb12e5345c3fae4b537e813df9f02a3" kindref="member">wxUint32</ref></type>
        <definition>wxUint32 wxColour::GetRGBA</definition>
        <argsstring>() const</argsstring>
        <name>GetRGBA</name>
        <briefdescription>
<para>Gets the RGB or RGBA colour values as a single 32 bit value. </para>        </briefdescription>
        <detaileddescription>
<para>The returned value is of the same form as expected by <ref refid="classwx_colour_1ac7d46c0479a74b63e67beba9c3f629c9" kindref="member">SetRGB()</ref> and <ref refid="classwx_colour_1a940633aa9d78da10bf86cf6848364579" kindref="member">SetRGBA()</ref>.</para><para>Notice that <ref refid="classwx_colour_1a90494a5b8c725e3f61a69d2a8ed1acd6" kindref="member">GetRGB()</ref> returns the value with 0 as its highest byte independently of the value actually returned by <ref refid="classwx_colour_1a592932fee1ad3d7c74b9c9014a775605" kindref="member">Alpha()</ref>. So for a fully opaque colour, the return value of <ref refid="classwx_colour_1a4fa82e86015fad4d50a1404bfb192857" kindref="member">GetRGBA()</ref> is <computeroutput>0xFFBBGGRR</computeroutput> while that of <ref refid="classwx_colour_1a90494a5b8c725e3f61a69d2a8ed1acd6" kindref="member">GetRGB()</ref> is <computeroutput>0x00BBGGRR</computeroutput>.</para><para><simplesect kind="since"><para>2.9.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/colour.h" line="158" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classwx_colour_1a362d7d0a873b770d6623d4cd547868a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxColour::Set</definition>
        <argsstring>(unsigned char red, unsigned char green, unsigned char blue, unsigned char alpha=wxALPHA_OPAQUE)</argsstring>
        <name>Set</name>
        <param>
          <type>unsigned char</type>
          <declname>red</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>green</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>blue</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>alpha</declname>
          <defval><ref refid="colour_8h_1ae1306fc09217b01cfec7bfb46eed0d66" kindref="member">wxALPHA_OPAQUE</ref></defval>
        </param>
        <briefdescription>
<para>Sets the RGB intensity values using the given values (first overload), extracting them from the packed long (second overload), using the given string (third overload). </para>        </briefdescription>
        <detaileddescription>
<para>When using third form, <ref refid="classwx_colour_1a362d7d0a873b770d6623d4cd547868a0" kindref="member">Set()</ref> accepts: colour names (those listed in <ref refid="classwx_colour_database" kindref="compound">wxColourDatabase</ref>), the CSS-like <computeroutput>&quot;rgb(r,g,b)&quot;</computeroutput> or <computeroutput>&quot;rgba(r,g,b,a)&quot;</computeroutput> syntax (case insensitive) and the HTML-like syntax: <computeroutput>&quot;#&quot;</computeroutput> followed by 6 hexadecimal digits for red, green, blue components.</para><para>Returns true if the conversion was successful, false otherwise.</para><para><simplesect kind="since"><para>2.7.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/colour.h" line="200" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_colour_1aeb9a24555fadb810c68d1c072a977fb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxColour::Set</definition>
        <argsstring>(unsigned long RGB)</argsstring>
        <name>Set</name>
        <param>
          <type>unsigned long</type>
          <declname>RGB</declname>
        </param>
        <briefdescription>
<para>Sets the RGB intensity values using the given values (first overload), extracting them from the packed long (second overload), using the given string (third overload). </para>        </briefdescription>
        <detaileddescription>
<para>When using third form, <ref refid="classwx_colour_1a362d7d0a873b770d6623d4cd547868a0" kindref="member">Set()</ref> accepts: colour names (those listed in <ref refid="classwx_colour_database" kindref="compound">wxColourDatabase</ref>), the CSS-like <computeroutput>&quot;rgb(r,g,b)&quot;</computeroutput> or <computeroutput>&quot;rgba(r,g,b,a)&quot;</computeroutput> syntax (case insensitive) and the HTML-like syntax: <computeroutput>&quot;#&quot;</computeroutput> followed by 6 hexadecimal digits for red, green, blue components.</para><para>Returns true if the conversion was successful, false otherwise.</para><para><simplesect kind="since"><para>2.7.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/colour.h" line="203" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_colour_1a08e9f56265647b8b5e1349b76eb728e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxColour::Set</definition>
        <argsstring>(const wxString &amp;str)</argsstring>
        <name>Set</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Sets the RGB intensity values using the given values (first overload), extracting them from the packed long (second overload), using the given string (third overload). </para>        </briefdescription>
        <detaileddescription>
<para>When using third form, <ref refid="classwx_colour_1a362d7d0a873b770d6623d4cd547868a0" kindref="member">Set()</ref> accepts: colour names (those listed in <ref refid="classwx_colour_database" kindref="compound">wxColourDatabase</ref>), the CSS-like <computeroutput>&quot;rgb(r,g,b)&quot;</computeroutput> or <computeroutput>&quot;rgba(r,g,b,a)&quot;</computeroutput> syntax (case insensitive) and the HTML-like syntax: <computeroutput>&quot;#&quot;</computeroutput> followed by 6 hexadecimal digits for red, green, blue components.</para><para>Returns true if the conversion was successful, false otherwise.</para><para><simplesect kind="since"><para>2.7.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/colour.h" line="204" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_colour_1aac96e7922132d672a1f83d59ecf07343" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxColour::wxColour</definition>
        <argsstring>()</argsstring>
        <name>wxColour</name>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/colour.h" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_colour_1a1ae10cc5b32d6000c23eaf29b9947c48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxColour::wxColour</definition>
        <argsstring>(unsigned char red, unsigned char green, unsigned char blue, unsigned char alpha=wxALPHA_OPAQUE)</argsstring>
        <name>wxColour</name>
        <param>
          <type>unsigned char</type>
          <declname>red</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>green</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>blue</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>alpha</declname>
          <defval><ref refid="colour_8h_1ae1306fc09217b01cfec7bfb46eed0d66" kindref="member">wxALPHA_OPAQUE</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>red</parametername>
</parameternamelist>
<parameterdescription>
<para>The red value. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>green</parametername>
</parameternamelist>
<parameterdescription>
<para>The green value. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>blue</parametername>
</parameternamelist>
<parameterdescription>
<para>The blue value. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>alpha</parametername>
</parameternamelist>
<parameterdescription>
<para>The alpha value. Alpha values range from 0 (wxALPHA_TRANSPARENT) to 255 (wxALPHA_OPAQUE). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/colour.h" line="75" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_colour_1ae114ff88fe3a07477d111baa01c1b325" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxColour::wxColour</definition>
        <argsstring>(const wxString &amp;colourName)</argsstring>
        <name>wxColour</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>colourName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>colourName</parametername>
</parameternamelist>
<parameterdescription>
<para>The colour name. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/colour.h" line="82" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_colour_1a118c5ebc8a4f787887ccfa8f28c19ef8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxColour::wxColour</definition>
        <argsstring>(unsigned long colRGB)</argsstring>
        <name>wxColour</name>
        <param>
          <type>unsigned long</type>
          <declname>colRGB</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>colRGB</parametername>
</parameternamelist>
<parameterdescription>
<para>A packed RGB value. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/colour.h" line="88" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_colour_1a0fbc51432a57424a0538d0932af6bf78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxColour::wxColour</definition>
        <argsstring>(const wxColour &amp;colour)</argsstring>
        <name>wxColour</name>
        <param>
          <type>const <ref refid="classwx_colour" kindref="compound">wxColour</ref> &amp;</type>
          <declname>colour</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/colour.h" line="93" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_colour_1a592932fee1ad3d7c74b9c9014a775605" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>unsigned char</type>
        <definition>virtual unsigned char wxColour::Alpha</definition>
        <argsstring>() const</argsstring>
        <name>Alpha</name>
        <briefdescription>
<para>Returns the alpha value, on platforms where alpha is not yet supported, this always returns wxALPHA_OPAQUE. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/colour.h" line="99" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_colour_1a82c6afaa0feeb0f964ee33267e41e87c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>unsigned char</type>
        <definition>virtual unsigned char wxColour::Blue</definition>
        <argsstring>() const</argsstring>
        <name>Blue</name>
        <briefdescription>
<para>Returns the blue intensity. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/colour.h" line="104" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_colour_1a7fb83960cea726dc4a37560b03f4bed3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>virtual wxString wxColour::GetAsString</definition>
        <argsstring>(long flags=wxC2S_NAME|wxC2S_CSS_SYNTAX) const</argsstring>
        <name>GetAsString</name>
        <param>
          <type>long</type>
          <declname>flags</declname>
          <defval><ref refid="colour_8h_1a61dadd085c1777f559549e05962b2c9ea11f9e43cf157a8d4b49c87c957807bea" kindref="member">wxC2S_NAME</ref>|<ref refid="colour_8h_1a61dadd085c1777f559549e05962b2c9eab47c838efa2889a17a00d8e2713db292" kindref="member">wxC2S_CSS_SYNTAX</ref></defval>
        </param>
        <briefdescription>
<para>Converts this colour to a <ref refid="classwx_string" kindref="compound">wxString</ref> using the given flags. </para>        </briefdescription>
        <detaileddescription>
<para>The supported flags are <computeroutput>wxC2S_NAME</computeroutput>, to obtain the colour name (e.g. <ref refid="classwx_colour" kindref="compound">wxColour(255,0,0)</ref> == &quot;red&quot;), <computeroutput>wxC2S_CSS_SYNTAX</computeroutput>, to obtain the colour in the &quot;rgb(r,g,b)&quot; or &quot;rgba(r,g,b,a)&quot; syntax (e.g. <ref refid="classwx_colour" kindref="compound">wxColour(255,0,0,85)</ref> == &quot;rgba(255,0,0,0.333)&quot;), and <computeroutput>wxC2S_HTML_SYNTAX</computeroutput>, to obtain the colour as &quot;#&quot; followed by 6 hexadecimal digits (e.g. <ref refid="classwx_colour" kindref="compound">wxColour(255,0,0)</ref> == &quot;#FF0000&quot;).</para><para>This function never fails and always returns a non-empty string but asserts if the colour has alpha channel (i.e. is non opaque) but <computeroutput>wxC2S_CSS_SYNTAX</computeroutput> (which is the only one supporting alpha) is not specified in flags.</para><para><simplesect kind="since"><para>2.7.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/colour.h" line="123" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_colour_1a597cf50e61a6fd16dfb86e0809e4dbdc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="defs_8h_1adc7fafddfefae454021d2e0660c96487" kindref="member">wxIntPtr</ref></type>
        <definition>wxIntPtr wxColour::GetPixel</definition>
        <argsstring>() const</argsstring>
        <name>GetPixel</name>
        <briefdescription>
<para>Returns a pixel value which is platform-dependent. </para>        </briefdescription>
        <detaileddescription>
<para>On Windows, a COLORREF is returned. On X, an allocated pixel value is returned. If the pixel is invalid (on X, unallocated), <computeroutput>-1</computeroutput> is returned. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/colour.h" line="167" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_colour_1a77f551868c82c8368dc2d16a902664f4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>unsigned char</type>
        <definition>virtual unsigned char wxColour::Green</definition>
        <argsstring>() const</argsstring>
        <name>Green</name>
        <briefdescription>
<para>Returns the green intensity. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/colour.h" line="172" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_colour_1a90921aeb085612b86fffb1507dbca461" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxColour::IsOk</definition>
        <argsstring>() const</argsstring>
        <name>IsOk</name>
        <briefdescription>
<para>Returns true if the colour object is valid (the colour has been initialised with RGB values). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/colour.h" line="178" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_colour_1ab54b6ea1bd4f71a599b6b6bc6ee27eaa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>unsigned char</type>
        <definition>virtual unsigned char wxColour::Red</definition>
        <argsstring>() const</argsstring>
        <name>Red</name>
        <briefdescription>
<para>Returns the red intensity. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/colour.h" line="183" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_colour_1a51b00aab940a72402cf55615d41dc394" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxColour::operator!=</definition>
        <argsstring>(const wxColour &amp;colour) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classwx_colour" kindref="compound">wxColour</ref> &amp;</type>
          <declname>colour</declname>
        </param>
        <briefdescription>
<para>Tests the inequality of two colours by comparing individual red, green, blue colours and alpha values. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/colour.h" line="211" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_colour_1a3626b79f7c04fb3877a7a69ba4b7086f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_colour" kindref="compound">wxColour</ref> &amp;</type>
        <definition>wxColour&amp; wxColour::operator=</definition>
        <argsstring>(const wxColour &amp;colour)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classwx_colour" kindref="compound">wxColour</ref> &amp;</type>
          <declname>colour</declname>
        </param>
        <briefdescription>
<para>Assignment operator, using a colour name to be found in the colour database. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classwx_colour_database" kindref="compound">wxColourDatabase</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/colour.h" line="218" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_colour_1a4654345d417971d8179ea802578eb47b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxColour::operator==</definition>
        <argsstring>(const wxColour &amp;colour) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classwx_colour" kindref="compound">wxColour</ref> &amp;</type>
          <declname>colour</declname>
        </param>
        <briefdescription>
<para>Tests the equality of two colours by comparing individual red, green, blue colours and alpha values. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/colour.h" line="224" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_colour_1afcaf1a9e713d058ab624cef834557bb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_colour" kindref="compound">wxColour</ref> &amp;</type>
        <definition>wxColour&amp; wxColour::MakeDisabled</definition>
        <argsstring>(unsigned char brightness=255)</argsstring>
        <name>MakeDisabled</name>
        <param>
          <type>unsigned char</type>
          <declname>brightness</declname>
          <defval>255</defval>
        </param>
        <briefdescription>
<para>Make a disabled version of this colour. </para>        </briefdescription>
        <detaileddescription>
<para>This method modifies the object in place and returns the object itself.</para><para><simplesect kind="since"><para>2.9.5 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/colour.h" line="245" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_colour_1a61388288c2865b661933e393e641fe7c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_colour" kindref="compound">wxColour</ref></type>
        <definition>wxColour wxColour::ChangeLightness</definition>
        <argsstring>(int ialpha) const</argsstring>
        <name>ChangeLightness</name>
        <param>
          <type>int</type>
          <declname>ialpha</declname>
        </param>
        <briefdescription>
<para><ref refid="classwx_colour" kindref="compound">wxColour</ref> wrapper for ChangeLightness(r,g,b,ialpha). </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>2.9.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/colour.h" line="281" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classwx_colour_1a0ba8c496e7553e34643e53e70de57760" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void wxColour::MakeMono</definition>
        <argsstring>(unsigned char *r, unsigned char *g, unsigned char *b, bool on)</argsstring>
        <name>MakeMono</name>
        <param>
          <type>unsigned char *</type>
          <declname>r</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>g</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>on</declname>
        </param>
        <briefdescription>
<para>Assign 0 or 255 to rgb out parameters. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>2.9.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/colour.h" line="230" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_colour_1afc71a8208268eb8fa682e43524478c69" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void wxColour::MakeDisabled</definition>
        <argsstring>(unsigned char *r, unsigned char *g, unsigned char *b, unsigned char brightness=255)</argsstring>
        <name>MakeDisabled</name>
        <param>
          <type>unsigned char *</type>
          <declname>r</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>g</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>brightness</declname>
          <defval>255</defval>
        </param>
        <briefdescription>
<para>Create a disabled (dimmed) colour from (in/out) rgb parameters. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>2.9.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/colour.h" line="236" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_colour_1a45e74c88fdab10e07164abe02c1b011a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void wxColour::MakeGrey</definition>
        <argsstring>(unsigned char *r, unsigned char *g, unsigned char *b)</argsstring>
        <name>MakeGrey</name>
        <param>
          <type>unsigned char *</type>
          <declname>r</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>g</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Create a grey colour from (in/out) rgb parameters using integer arithmetic. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>2.9.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/colour.h" line="251" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_colour_1a9020f882bba4f92bb68fcc7fd6d7cff4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void wxColour::MakeGrey</definition>
        <argsstring>(unsigned char *r, unsigned char *g, unsigned char *b, double weight_r, double weight_g, double weight_b)</argsstring>
        <name>MakeGrey</name>
        <param>
          <type>unsigned char *</type>
          <declname>r</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>g</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>double</type>
          <declname>weight_r</declname>
        </param>
        <param>
          <type>double</type>
          <declname>weight_g</declname>
        </param>
        <param>
          <type>double</type>
          <declname>weight_b</declname>
        </param>
        <briefdescription>
<para>Create a grey colour from (in/out) rgb parameters using floating point arithmetic. </para>        </briefdescription>
        <detaileddescription>
<para>Defaults to using the standard ITU-T BT.601 when converting to YUV, where every pixel equals (R * <emphasis>weight_r</emphasis>) + (G * <emphasis>weight_g</emphasis>) + (B * <emphasis>weight_b</emphasis>). <simplesect kind="since"><para>2.9.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/colour.h" line="259" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_colour_1a9674d4508549c1fbc983e5582fd86bed" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned char</type>
        <definition>static unsigned char wxColour::AlphaBlend</definition>
        <argsstring>(unsigned char fg, unsigned char bg, double alpha)</argsstring>
        <name>AlphaBlend</name>
        <param>
          <type>unsigned char</type>
          <declname>fg</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>bg</declname>
        </param>
        <param>
          <type>double</type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
<para>Blend colour, taking alpha into account. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>2.9.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/colour.h" line="266" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_colour_1af225e6fafd00001ac3612aaf26fe5501" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void wxColour::ChangeLightness</definition>
        <argsstring>(unsigned char *r, unsigned char *g, unsigned char *b, int ialpha)</argsstring>
        <name>ChangeLightness</name>
        <param>
          <type>unsigned char *</type>
          <declname>r</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>g</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ialpha</declname>
        </param>
        <briefdescription>
<para><ref refid="classwx_colour_1af225e6fafd00001ac3612aaf26fe5501" kindref="member">ChangeLightness()</ref> is a utility function that simply darkens or lightens a color, based on the specified percentage ialpha of 0 would be completely black, 200 completely white an ialpha of 100 returns the same colour. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>2.9.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/colour.h" line="275" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A colour is an object representing a combination of Red, Green, and Blue (RGB) intensity values, and is used to determine drawing colours. </para>    </briefdescription>
    <detaileddescription>
<para>See the entry for <ref refid="classwx_colour_database" kindref="compound">wxColourDatabase</ref> for how a pointer to a predefined, named colour may be returned instead of creating a new colour.</para><para>Valid RGB values are in the range 0 to 255.</para><para>You can retrieve the current system colour settings with <ref refid="classwx_system_settings" kindref="compound">wxSystemSettings</ref>.</para><para><heading level="2"></heading>
</para><para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxcore" kindref="member">wxCore</ref> &lt;&gt;&lt; =&apos;&apos;&gt;:&lt;/&gt;&amp;;&amp;;&lt; =&apos;&apos;&gt;\ &lt;/&gt;&lt;/&gt;</para><para>Predefined objects/pointers:<itemizedlist>
<listitem><para><ref refid="colour_8h_1a882fc9395ce82080f0c2c91ca04731d6" kindref="member">wxNullColour</ref> - An empty, invalid colour.</para></listitem><listitem><para><ref refid="colour_8h_1abf2d471367e1ee194d88bc3e814a7d11" kindref="member">wxTransparentColour</ref> - Valid but fully transparent colour (new in 2.9.1).</para></listitem><listitem><para><ref refid="colour_8h_1a28c9e9208c4907063eb9869ff2332776" kindref="member">wxBLACK</ref></para></listitem><listitem><para><ref refid="colour_8h_1a6682c822c66afb0c9bec02469b40e58a" kindref="member">wxBLUE</ref></para></listitem><listitem><para><ref refid="colour_8h_1ab5873717d157d334f20e0a0b02d8ffa1" kindref="member">wxCYAN</ref></para></listitem><listitem><para><ref refid="colour_8h_1a98125a3b5ab1f7bc8dbc7a62e329f142" kindref="member">wxGREEN</ref></para></listitem><listitem><para><ref refid="colour_8h_1ab826607ad843990349914e1457a6425a" kindref="member">wxYELLOW</ref></para></listitem><listitem><para><ref refid="colour_8h_1a76762d1254986a92025f54e7683c3441" kindref="member">wxLIGHT_GREY</ref></para></listitem><listitem><para><ref refid="colour_8h_1a69785ac6d0c5ed3fb4d2053693390e2a" kindref="member">wxRED</ref></para></listitem><listitem><para><ref refid="colour_8h_1a3b00973fd189d6ddd42d74046bd45694" kindref="member">wxWHITE</ref></para></listitem></itemizedlist>
</para><para><simplesect kind="see"><para><ref refid="classwx_colour_database" kindref="compound">wxColourDatabase</ref>, <ref refid="classwx_pen" kindref="compound">wxPen</ref>, <ref refid="classwx_brush" kindref="compound">wxBrush</ref>, <ref refid="classwx_colour_dialog" kindref="compound">wxColourDialog</ref>, <ref refid="classwx_system_settings" kindref="compound">wxSystemSettings</ref> </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="873">
        <label>wxObject</label>
        <link refid="classwx_object"/>
      </node>
      <node id="872">
        <label>wxColour</label>
        <link refid="classwx_colour"/>
        <childnode refid="873" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="875">
        <label>wxObject</label>
        <link refid="classwx_object"/>
        <childnode refid="876" relation="usage">
          <edgelabel>m_refData</edgelabel>
        </childnode>
      </node>
      <node id="874">
        <label>wxColour</label>
        <link refid="classwx_colour"/>
        <childnode refid="875" relation="public-inheritance">
        </childnode>
      </node>
      <node id="876">
        <label>wxObjectRefData</label>
        <link refid="classwx_object_ref_data"/>
      </node>
    </collaborationgraph>
    <location file="interface/wx/colour.h" line="56" column="1" bodyfile="interface/wx/colour.h" bodystart="55" bodyend="282"/>
    <listofallmembers>
      <member refid="classwx_object_1a60204063f3cc3aa2fa1c7ff5bda9eb13" prot="protected" virt="non-virtual"><scope>wxColour</scope><name>AllocExclusive</name></member>
      <member refid="classwx_colour_1a592932fee1ad3d7c74b9c9014a775605" prot="public" virt="virtual"><scope>wxColour</scope><name>Alpha</name></member>
      <member refid="classwx_colour_1a9674d4508549c1fbc983e5582fd86bed" prot="public" virt="non-virtual"><scope>wxColour</scope><name>AlphaBlend</name></member>
      <member refid="classwx_colour_1a82c6afaa0feeb0f964ee33267e41e87c" prot="public" virt="virtual"><scope>wxColour</scope><name>Blue</name></member>
      <member refid="classwx_colour_1af225e6fafd00001ac3612aaf26fe5501" prot="public" virt="non-virtual"><scope>wxColour</scope><name>ChangeLightness</name></member>
      <member refid="classwx_colour_1a61388288c2865b661933e393e641fe7c" prot="public" virt="non-virtual"><scope>wxColour</scope><name>ChangeLightness</name></member>
      <member refid="classwx_object_1a436fc8fe68cf8a31000296d9cd3d2427" prot="protected" virt="virtual"><scope>wxColour</scope><name>CloneRefData</name></member>
      <member refid="classwx_object_1a3f4f497c65cef611e121c41f21dd5ccc" prot="protected" virt="virtual"><scope>wxColour</scope><name>CreateRefData</name></member>
      <member refid="classwx_colour_1a7fb83960cea726dc4a37560b03f4bed3" prot="public" virt="virtual"><scope>wxColour</scope><name>GetAsString</name></member>
      <member refid="classwx_object_1ae6d365f2556b26767ced8410c5e839d0" prot="public" virt="virtual"><scope>wxColour</scope><name>GetClassInfo</name></member>
      <member refid="classwx_colour_1a597cf50e61a6fd16dfb86e0809e4dbdc" prot="public" virt="non-virtual"><scope>wxColour</scope><name>GetPixel</name></member>
      <member refid="classwx_object_1af3c6c76a775864832f1536d3c0de3a2b" prot="public" virt="non-virtual"><scope>wxColour</scope><name>GetRefData</name></member>
      <member refid="classwx_colour_1a90494a5b8c725e3f61a69d2a8ed1acd6" prot="public" virt="non-virtual"><scope>wxColour</scope><name>GetRGB</name></member>
      <member refid="classwx_colour_1a4fa82e86015fad4d50a1404bfb192857" prot="public" virt="non-virtual"><scope>wxColour</scope><name>GetRGBA</name></member>
      <member refid="classwx_colour_1a77f551868c82c8368dc2d16a902664f4" prot="public" virt="virtual"><scope>wxColour</scope><name>Green</name></member>
      <member refid="classwx_object_1a3c7115ef4132dcee0c4fc34e84d7fced" prot="public" virt="non-virtual"><scope>wxColour</scope><name>IsKindOf</name></member>
      <member refid="classwx_colour_1a90921aeb085612b86fffb1507dbca461" prot="public" virt="virtual"><scope>wxColour</scope><name>IsOk</name></member>
      <member refid="classwx_object_1a059373c494c2369d7db2a556efef8ecf" prot="public" virt="non-virtual"><scope>wxColour</scope><name>IsSameAs</name></member>
      <member refid="classwx_object_1a9e31954530a0abd54982effc443ed2b8" prot="protected" virt="non-virtual"><scope>wxColour</scope><name>m_refData</name></member>
      <member refid="classwx_colour_1afc71a8208268eb8fa682e43524478c69" prot="public" virt="non-virtual"><scope>wxColour</scope><name>MakeDisabled</name></member>
      <member refid="classwx_colour_1afcaf1a9e713d058ab624cef834557bb6" prot="public" virt="non-virtual"><scope>wxColour</scope><name>MakeDisabled</name></member>
      <member refid="classwx_colour_1a45e74c88fdab10e07164abe02c1b011a" prot="public" virt="non-virtual"><scope>wxColour</scope><name>MakeGrey</name></member>
      <member refid="classwx_colour_1a9020f882bba4f92bb68fcc7fd6d7cff4" prot="public" virt="non-virtual"><scope>wxColour</scope><name>MakeGrey</name></member>
      <member refid="classwx_colour_1a0ba8c496e7553e34643e53e70de57760" prot="public" virt="non-virtual"><scope>wxColour</scope><name>MakeMono</name></member>
      <member refid="classwx_object_1a07b8f34f5afc5743195c5fed052f55d3" prot="public" virt="non-virtual"><scope>wxColour</scope><name>operator delete</name></member>
      <member refid="classwx_object_1a96fa423a1dbc212c8227a5d83825971f" prot="public" virt="non-virtual"><scope>wxColour</scope><name>operator new</name></member>
      <member refid="classwx_colour_1a51b00aab940a72402cf55615d41dc394" prot="public" virt="non-virtual"><scope>wxColour</scope><name>operator!=</name></member>
      <member refid="classwx_colour_1a3626b79f7c04fb3877a7a69ba4b7086f" prot="public" virt="non-virtual"><scope>wxColour</scope><name>operator=</name></member>
      <member refid="classwx_colour_1a4654345d417971d8179ea802578eb47b" prot="public" virt="non-virtual"><scope>wxColour</scope><name>operator==</name></member>
      <member refid="classwx_colour_1ab54b6ea1bd4f71a599b6b6bc6ee27eaa" prot="public" virt="virtual"><scope>wxColour</scope><name>Red</name></member>
      <member refid="classwx_object_1a2f6f1aa51fe9fc2b1415ca4211a90e9e" prot="public" virt="non-virtual"><scope>wxColour</scope><name>Ref</name></member>
      <member refid="classwx_colour_1a362d7d0a873b770d6623d4cd547868a0" prot="public" virt="non-virtual"><scope>wxColour</scope><name>Set</name></member>
      <member refid="classwx_colour_1aeb9a24555fadb810c68d1c072a977fb3" prot="public" virt="non-virtual"><scope>wxColour</scope><name>Set</name></member>
      <member refid="classwx_colour_1a08e9f56265647b8b5e1349b76eb728e3" prot="public" virt="non-virtual"><scope>wxColour</scope><name>Set</name></member>
      <member refid="classwx_object_1afab780710f2adc1bb33310e27590140b" prot="public" virt="non-virtual"><scope>wxColour</scope><name>SetRefData</name></member>
      <member refid="classwx_colour_1ac7d46c0479a74b63e67beba9c3f629c9" prot="public" virt="non-virtual"><scope>wxColour</scope><name>SetRGB</name></member>
      <member refid="classwx_colour_1a940633aa9d78da10bf86cf6848364579" prot="public" virt="non-virtual"><scope>wxColour</scope><name>SetRGBA</name></member>
      <member refid="classwx_object_1af51efc6b1ae632fc7f0cd7ebbce9fa36" prot="public" virt="non-virtual"><scope>wxColour</scope><name>UnRef</name></member>
      <member refid="classwx_object_1a74b40e42d19a4b9e9bec0b57d62a5725" prot="public" virt="non-virtual"><scope>wxColour</scope><name>UnShare</name></member>
      <member refid="classwx_colour_1aac96e7922132d672a1f83d59ecf07343" prot="public" virt="non-virtual"><scope>wxColour</scope><name>wxColour</name></member>
      <member refid="classwx_colour_1a1ae10cc5b32d6000c23eaf29b9947c48" prot="public" virt="non-virtual"><scope>wxColour</scope><name>wxColour</name></member>
      <member refid="classwx_colour_1ae114ff88fe3a07477d111baa01c1b325" prot="public" virt="non-virtual"><scope>wxColour</scope><name>wxColour</name></member>
      <member refid="classwx_colour_1a118c5ebc8a4f787887ccfa8f28c19ef8" prot="public" virt="non-virtual"><scope>wxColour</scope><name>wxColour</name></member>
      <member refid="classwx_colour_1a0fbc51432a57424a0538d0932af6bf78" prot="public" virt="non-virtual"><scope>wxColour</scope><name>wxColour</name></member>
      <member refid="classwx_object_1acaa378363a28af421ab56ad7b46eadf0" prot="public" virt="non-virtual"><scope>wxColour</scope><name>wxObject</name></member>
      <member refid="classwx_object_1a4721b4dc9b7aff0f30904ba2ea3954cf" prot="public" virt="non-virtual"><scope>wxColour</scope><name>wxObject</name></member>
      <member refid="classwx_object_1a2a51aa8bfbab47ca2f051bcf84b3f35b" prot="public" virt="virtual"><scope>wxColour</scope><name>~wxObject</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
