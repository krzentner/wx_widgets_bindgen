<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classwx_archive_output_stream" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>wxArchiveOutputStream</compoundname>
    <basecompoundref refid="classwx_filter_output_stream" prot="public" virt="non-virtual">wxFilterOutputStream</basecompoundref>
    <derivedcompoundref refid="classwx_tar_output_stream" prot="public" virt="non-virtual">wxTarOutputStream</derivedcompoundref>
    <derivedcompoundref refid="classwx_zip_output_stream" prot="public" virt="non-virtual">wxZipOutputStream</derivedcompoundref>
    <includes local="no">wx/archive.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_archive_output_stream_1a398e15a6c9b1799e64672b4320053376" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual wxArchiveOutputStream::~wxArchiveOutputStream</definition>
        <argsstring>()</argsstring>
        <name>~wxArchiveOutputStream</name>
        <briefdescription>
<para>Calls <ref refid="classwx_archive_output_stream_1a2d6ec4ddefa626a2400985c676bfbfea" kindref="member">Close()</ref> if it has not already been called. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/archive.h" line="77" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_archive_output_stream_1a2d6ec4ddefa626a2400985c676bfbfea" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxArchiveOutputStream::Close</definition>
        <argsstring>()</argsstring>
        <name>Close</name>
        <reimplements refid="classwx_output_stream_1a1c306ce99990d525921f8f6ae8432083">Close</reimplements>
        <reimplementedby refid="classwx_tar_output_stream_1a28f6073ef5557fb488b1a7142d0ba882">Close</reimplementedby>
        <reimplementedby refid="classwx_zip_output_stream_1a8c1c85831fa28ddca211200fd315ad04">Close</reimplementedby>
        <briefdescription>
<para>Closes the archive, returning true if it was successfully written. </para>        </briefdescription>
        <detaileddescription>
<para>Called by the destructor if not called explicitly.</para><para><simplesect kind="see"><para><ref refid="classwx_output_stream_1a1c306ce99990d525921f8f6ae8432083" kindref="member">wxOutputStream::Close()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/archive.h" line="85" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_archive_output_stream_1a497dca3a3860f375c58488f78e0a75ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool wxArchiveOutputStream::CloseEntry</definition>
        <argsstring>()=0</argsstring>
        <name>CloseEntry</name>
        <reimplementedby refid="classwx_tar_output_stream_1a4d4e378698566f70790534d259688349">CloseEntry</reimplementedby>
        <reimplementedby refid="classwx_zip_output_stream_1aa8c78bdb0eba298b9a3648756b3562bd">CloseEntry</reimplementedby>
        <briefdescription>
<para>Close the current entry. </para>        </briefdescription>
        <detaileddescription>
<para>It is called implicitly whenever another new entry is created with <ref refid="classwx_archive_output_stream_1acf19a29865cca24282fd163a20a4b137" kindref="member">CopyEntry()</ref> or <ref refid="classwx_archive_output_stream_1a4a5dd11b0dbd57b78a94315c9e841ceb" kindref="member">PutNextEntry()</ref>, or when the archive is closed. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/archive.h" line="92" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_archive_output_stream_1a043827f9c01ef7bb4bfebf7b9be8ee55" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool wxArchiveOutputStream::CopyArchiveMetaData</definition>
        <argsstring>(wxArchiveInputStream &amp;stream)=0</argsstring>
        <name>CopyArchiveMetaData</name>
        <param>
          <type><ref refid="classwx_archive_input_stream" kindref="compound">wxArchiveInputStream</ref> &amp;</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
<para>Some archive formats have additional meta-data that applies to the archive as a whole. </para>        </briefdescription>
        <detaileddescription>
<para>For example in the case of zip there is a comment, which is stored at the end of the zip file. <ref refid="classwx_archive_output_stream_1a043827f9c01ef7bb4bfebf7b9be8ee55" kindref="member">CopyArchiveMetaData()</ref> can be used to transfer such information when writing a modified copy of an archive.</para><para>Since the position of the meta-data can vary between the various archive formats, it is best to call <ref refid="classwx_archive_output_stream_1a043827f9c01ef7bb4bfebf7b9be8ee55" kindref="member">CopyArchiveMetaData()</ref> before transferring the entries. The <ref refid="classwx_archive_output_stream" kindref="compound">wxArchiveOutputStream</ref> will then hold on to the meta-data and write it at the correct point in the output file.</para><para>When the input archive is being read from a non-seekable stream, the meta-data may not be available when <ref refid="classwx_archive_output_stream_1a043827f9c01ef7bb4bfebf7b9be8ee55" kindref="member">CopyArchiveMetaData()</ref> is called, in which case the two streams set up a link and transfer the data when it becomes available. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/archive.h" line="111" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_archive_output_stream_1acf19a29865cca24282fd163a20a4b137" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool wxArchiveOutputStream::CopyEntry</definition>
        <argsstring>(wxArchiveEntry *entry, wxArchiveInputStream &amp;stream)=0</argsstring>
        <name>CopyEntry</name>
        <param>
          <type><ref refid="classwx_archive_entry" kindref="compound">wxArchiveEntry</ref> *</type>
          <declname>entry</declname>
        </param>
        <param>
          <type><ref refid="classwx_archive_input_stream" kindref="compound">wxArchiveInputStream</ref> &amp;</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
<para>Takes ownership of <emphasis>entry</emphasis> and uses it to create a new entry in the archive. </para>        </briefdescription>
        <detaileddescription>
<para><emphasis>entry</emphasis> is then opened in the input stream <emphasis>stream</emphasis> and its contents copied to this stream.</para><para>For archive types which compress entry data, <ref refid="classwx_archive_output_stream_1acf19a29865cca24282fd163a20a4b137" kindref="member">CopyEntry()</ref> is likely to be much more efficient than transferring the data using Read() and <ref refid="classwx_output_stream_1a22154f02408431ffe8b1590407c3b011" kindref="member">Write()</ref> since it will copy them without decompressing and recompressing them.</para><para><emphasis>entry</emphasis> must be from the same archive file that <emphasis>stream</emphasis> is accessing. For non-seekable streams, <emphasis>entry</emphasis> must also be the last thing read from <emphasis>stream</emphasis>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/archive.h" line="126" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_archive_output_stream_1ab27a35cd63e39dd9cccfc1b5566478f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool wxArchiveOutputStream::PutNextDirEntry</definition>
        <argsstring>(const wxString &amp;name, const wxDateTime &amp;dt=wxDateTime::Now())=0</argsstring>
        <name>PutNextDirEntry</name>
        <reimplementedby refid="classwx_tar_output_stream_1a98ea36fbcd08c6c7ae82eaafdd5eb789">PutNextDirEntry</reimplementedby>
        <reimplementedby refid="classwx_zip_output_stream_1a8b92bb0f3837e79f8a289c9cecde7d3d">PutNextDirEntry</reimplementedby>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_date_time" kindref="compound">wxDateTime</ref> &amp;</type>
          <declname>dt</declname>
          <defval><ref refid="classwx_date_time_1a6e6c37a0414bb4831e2cc03b37f498a2" kindref="member">wxDateTime::Now</ref>()</defval>
        </param>
        <briefdescription>
<para>Create a new directory entry (see <ref refid="classwx_archive_entry_1a548d3b6f4aeba699dc0d1ec1c21b7ce2" kindref="member">wxArchiveEntry::IsDir</ref>) with the given name and timestamp. </para>        </briefdescription>
        <detaileddescription>
<para><ref refid="classwx_archive_output_stream_1a4a5dd11b0dbd57b78a94315c9e841ceb" kindref="member">PutNextEntry()</ref> can also be used to create directory entries, by supplying a name with a trailing path separator. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/archive.h" line="136" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_archive_output_stream_1a4a5dd11b0dbd57b78a94315c9e841ceb" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool wxArchiveOutputStream::PutNextEntry</definition>
        <argsstring>(wxArchiveEntry *entry)=0</argsstring>
        <name>PutNextEntry</name>
        <param>
          <type><ref refid="classwx_archive_entry" kindref="compound">wxArchiveEntry</ref> *</type>
          <declname>entry</declname>
        </param>
        <briefdescription>
<para>Takes ownership of entry and uses it to create a new entry in the archive. </para>        </briefdescription>
        <detaileddescription>
<para>The entry&apos;s data can then be written by writing to this <ref refid="classwx_archive_output_stream" kindref="compound">wxArchiveOutputStream</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/archive.h" line="143" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_archive_output_stream_1ae10bb31a9edecd54b739d4504734bc46" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool wxArchiveOutputStream::PutNextEntry</definition>
        <argsstring>(const wxString &amp;name, const wxDateTime &amp;dt=wxDateTime::Now(), wxFileOffset size=wxInvalidOffset)=0</argsstring>
        <name>PutNextEntry</name>
        <reimplementedby refid="classwx_tar_output_stream_1a088d0f85e66a41388866edfa9512d7ee">PutNextEntry</reimplementedby>
        <reimplementedby refid="classwx_zip_output_stream_1a4190f1b14a18d059689406951de42442">PutNextEntry</reimplementedby>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_date_time" kindref="compound">wxDateTime</ref> &amp;</type>
          <declname>dt</declname>
          <defval><ref refid="classwx_date_time_1a6e6c37a0414bb4831e2cc03b37f498a2" kindref="member">wxDateTime::Now</ref>()</defval>
        </param>
        <param>
          <type><ref refid="group__group__funcmacro__file_1ga69d831b3febabc149c67b716c8e22de5" kindref="member">wxFileOffset</ref></type>
          <declname>size</declname>
          <defval><ref refid="group__group__funcmacro__file_1gab184c7199d93541d22ae42e515cbbcb7" kindref="member">wxInvalidOffset</ref></defval>
        </param>
        <briefdescription>
<para>Create a new entry with the given name, timestamp and size. </para>        </briefdescription>
        <detaileddescription>
<para>The entry&apos;s data can then be written by writing to this <ref refid="classwx_archive_output_stream" kindref="compound">wxArchiveOutputStream</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/archive.h" line="149" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This is an abstract base class which serves as a common interface to archive output streams such as <ref refid="classwx_zip_output_stream" kindref="compound">wxZipOutputStream</ref>. </para>    </briefdescription>
    <detaileddescription>
<para><ref refid="classwx_archive_output_stream_1a4a5dd11b0dbd57b78a94315c9e841ceb" kindref="member">wxArchiveOutputStream::PutNextEntry</ref> is used to create a new entry in the output archive, then the entry&apos;s data is written to the <ref refid="classwx_archive_output_stream" kindref="compound">wxArchiveOutputStream</ref>. Another call to <ref refid="classwx_archive_output_stream_1a4a5dd11b0dbd57b78a94315c9e841ceb" kindref="member">PutNextEntry()</ref> closes the current entry and begins the next.</para><para><heading level="2"></heading>
</para><para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxbase" kindref="member">wxBase</ref> &lt;&gt;&lt; =&apos;&apos;&gt;:&lt;/&gt;&amp;;&amp;;&lt; =&apos;&apos;&gt;\ , \ &lt;/&gt;&lt;/&gt;</para><para><simplesect kind="see"><para><ref refid="overview_archive" kindref="compound">Archive Formats</ref>, <ref refid="classwx_archive_entry" kindref="compound">wxArchiveEntry</ref>, <ref refid="classwx_archive_input_stream" kindref="compound">wxArchiveInputStream</ref> </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="176">
        <label>wxZipOutputStream</label>
        <link refid="classwx_zip_output_stream"/>
        <childnode refid="171" relation="public-inheritance">
        </childnode>
      </node>
      <node id="174">
        <label>wxStreamBase</label>
        <link refid="classwx_stream_base"/>
      </node>
      <node id="175">
        <label>wxTarOutputStream</label>
        <link refid="classwx_tar_output_stream"/>
        <childnode refid="171" relation="public-inheritance">
        </childnode>
      </node>
      <node id="172">
        <label>wxFilterOutputStream</label>
        <link refid="classwx_filter_output_stream"/>
        <childnode refid="173" relation="public-inheritance">
        </childnode>
      </node>
      <node id="173">
        <label>wxOutputStream</label>
        <link refid="classwx_output_stream"/>
        <childnode refid="174" relation="public-inheritance">
        </childnode>
      </node>
      <node id="171">
        <label>wxArchiveOutputStream</label>
        <link refid="classwx_archive_output_stream"/>
        <childnode refid="172" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="180">
        <label>wxStreamBase</label>
        <link refid="classwx_stream_base"/>
      </node>
      <node id="178">
        <label>wxFilterOutputStream</label>
        <link refid="classwx_filter_output_stream"/>
        <childnode refid="179" relation="public-inheritance">
        </childnode>
      </node>
      <node id="179">
        <label>wxOutputStream</label>
        <link refid="classwx_output_stream"/>
        <childnode refid="180" relation="public-inheritance">
        </childnode>
      </node>
      <node id="177">
        <label>wxArchiveOutputStream</label>
        <link refid="classwx_archive_output_stream"/>
        <childnode refid="178" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="interface/wx/archive.h" line="72" column="1" bodyfile="interface/wx/archive.h" bodystart="71" bodyend="152"/>
    <listofallmembers>
      <member refid="classwx_archive_output_stream_1a2d6ec4ddefa626a2400985c676bfbfea" prot="public" virt="virtual"><scope>wxArchiveOutputStream</scope><name>Close</name></member>
      <member refid="classwx_archive_output_stream_1a497dca3a3860f375c58488f78e0a75ad" prot="public" virt="pure-virtual"><scope>wxArchiveOutputStream</scope><name>CloseEntry</name></member>
      <member refid="classwx_archive_output_stream_1a043827f9c01ef7bb4bfebf7b9be8ee55" prot="public" virt="pure-virtual"><scope>wxArchiveOutputStream</scope><name>CopyArchiveMetaData</name></member>
      <member refid="classwx_archive_output_stream_1acf19a29865cca24282fd163a20a4b137" prot="public" virt="pure-virtual"><scope>wxArchiveOutputStream</scope><name>CopyEntry</name></member>
      <member refid="classwx_stream_base_1a33440c8ea3f8df382adecd7d188a1662" prot="public" virt="non-virtual"><scope>wxArchiveOutputStream</scope><name>GetLastError</name></member>
      <member refid="classwx_stream_base_1a052d67c85f63873fabb45ecd108ea615" prot="public" virt="virtual"><scope>wxArchiveOutputStream</scope><name>GetLength</name></member>
      <member refid="classwx_stream_base_1aae8094702c3aee35c38e3e06e052479c" prot="public" virt="virtual"><scope>wxArchiveOutputStream</scope><name>GetSize</name></member>
      <member refid="classwx_stream_base_1ad33abd694469e858fc3bbb0163a7fc4b" prot="public" virt="virtual"><scope>wxArchiveOutputStream</scope><name>IsOk</name></member>
      <member refid="classwx_stream_base_1a927368a32e940a11b96dbfb617d9afda" prot="public" virt="virtual"><scope>wxArchiveOutputStream</scope><name>IsSeekable</name></member>
      <member refid="classwx_output_stream_1ac21c598e20937355e538fdf2e2926164" prot="public" virt="virtual"><scope>wxArchiveOutputStream</scope><name>LastWrite</name></member>
      <member refid="classwx_stream_base_1ae38e82c374f82d39993909f0a5d3017e" prot="protected" virt="virtual"><scope>wxArchiveOutputStream</scope><name>OnSysSeek</name></member>
      <member refid="classwx_stream_base_1a7131a1f866ea911e90bb85bc1937d29b" prot="protected" virt="virtual"><scope>wxArchiveOutputStream</scope><name>OnSysTell</name></member>
      <member refid="classwx_output_stream_1a41773bceb97b1981cbc3d69c596df929" prot="protected" virt="non-virtual"><scope>wxArchiveOutputStream</scope><name>OnSysWrite</name></member>
      <member refid="classwx_stream_base_1a2559b4fcfc7f7173259d703b39cb0d33" prot="public" virt="non-virtual"><scope>wxArchiveOutputStream</scope><name>operator!</name></member>
      <member refid="classwx_output_stream_1a526dbd35592b0280659cf96c0a77e804" prot="public" virt="non-virtual"><scope>wxArchiveOutputStream</scope><name>PutC</name></member>
      <member refid="classwx_archive_output_stream_1ab27a35cd63e39dd9cccfc1b5566478f5" prot="public" virt="pure-virtual"><scope>wxArchiveOutputStream</scope><name>PutNextDirEntry</name></member>
      <member refid="classwx_archive_output_stream_1a4a5dd11b0dbd57b78a94315c9e841ceb" prot="public" virt="pure-virtual"><scope>wxArchiveOutputStream</scope><name>PutNextEntry</name></member>
      <member refid="classwx_archive_output_stream_1ae10bb31a9edecd54b739d4504734bc46" prot="public" virt="pure-virtual"><scope>wxArchiveOutputStream</scope><name>PutNextEntry</name></member>
      <member refid="classwx_stream_base_1a52353ac42f72538b2022a84f416e5fe2" prot="public" virt="non-virtual"><scope>wxArchiveOutputStream</scope><name>Reset</name></member>
      <member refid="classwx_output_stream_1ac898dd36e44e5f4785a6658f470e9752" prot="public" virt="virtual"><scope>wxArchiveOutputStream</scope><name>SeekO</name></member>
      <member refid="classwx_output_stream_1a468208f94273630dcbdb0c692645e42c" prot="public" virt="virtual"><scope>wxArchiveOutputStream</scope><name>TellO</name></member>
      <member refid="classwx_output_stream_1a22154f02408431ffe8b1590407c3b011" prot="public" virt="virtual"><scope>wxArchiveOutputStream</scope><name>Write</name></member>
      <member refid="classwx_output_stream_1aacced095d3e9b19b4f6264d94c85cf8f" prot="public" virt="non-virtual"><scope>wxArchiveOutputStream</scope><name>Write</name></member>
      <member refid="classwx_output_stream_1aa82aca41108fba5cebbba951c84431f0" prot="public" virt="non-virtual"><scope>wxArchiveOutputStream</scope><name>WriteAll</name></member>
      <member refid="classwx_filter_output_stream_1af602ad1b7673a587430733f4cfb493d0" prot="public" virt="non-virtual"><scope>wxArchiveOutputStream</scope><name>wxFilterOutputStream</name></member>
      <member refid="classwx_filter_output_stream_1a0358028d12b8dde1ef969efd1703908e" prot="public" virt="non-virtual"><scope>wxArchiveOutputStream</scope><name>wxFilterOutputStream</name></member>
      <member refid="classwx_output_stream_1ab2391df744df6ec2d4e4e3f561c51118" prot="public" virt="non-virtual"><scope>wxArchiveOutputStream</scope><name>wxOutputStream</name></member>
      <member refid="classwx_stream_base_1a2bdb01f1ccd34d551d3cfc848054bf1e" prot="public" virt="non-virtual"><scope>wxArchiveOutputStream</scope><name>wxStreamBase</name></member>
      <member refid="classwx_archive_output_stream_1a398e15a6c9b1799e64672b4320053376" prot="public" virt="virtual"><scope>wxArchiveOutputStream</scope><name>~wxArchiveOutputStream</name></member>
      <member refid="classwx_output_stream_1aadf4d69a6ab7430e99ecb8d02feecfd3" prot="public" virt="virtual"><scope>wxArchiveOutputStream</scope><name>~wxOutputStream</name></member>
      <member refid="classwx_stream_base_1aebba32b4da79c60933fa997735a8bfe5" prot="public" virt="virtual"><scope>wxArchiveOutputStream</scope><name>~wxStreamBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
