<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classwx_tree_ctrl" kind="class" language="C++" prot="public">
    <compoundname>wxTreeCtrl</compoundname>
    <basecompoundref refid="classwx_control" prot="public" virt="non-virtual">wxControl</basecompoundref>
    <includes local="no">wx/treectrl.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_tree_ctrl_1ac4a07aa9c3ef92d6663ace3c20aa1576" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxTreeCtrl::wxTreeCtrl</definition>
        <argsstring>()</argsstring>
        <name>wxTreeCtrl</name>
        <briefdescription>
<para>Default Constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="171" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1a298f48e824d12a43539a018e2cc06999" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxTreeCtrl::wxTreeCtrl</definition>
        <argsstring>(wxWindow *parent, wxWindowID id=wxID_ANY, const wxPoint &amp;pos=wxDefaultPosition, const wxSize &amp;size=wxDefaultSize, long style=wxTR_DEFAULT_STYLE, const wxValidator &amp;validator=wxDefaultValidator, const wxString &amp;name=wxTreeCtrlNameStr)</argsstring>
        <name>wxTreeCtrl</name>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>parent</declname>
        </param>
        <param>
          <type><ref refid="windowid_8h_1ae8091432cc2cb2485d45f2302fb51133" kindref="member">wxWindowID</ref></type>
          <declname>id</declname>
          <defval><ref refid="defs_8h_1ac66d0a09761e7d86b2ac0b2e0c6a8cbba1f375b01ea03a713bbb7e32a36a2589c" kindref="member">wxID_ANY</ref></defval>
        </param>
        <param>
          <type>const <ref refid="classwx_point" kindref="compound">wxPoint</ref> &amp;</type>
          <declname>pos</declname>
          <defval><ref refid="gdicmn_8h_1af5a90c753eaf3d3e3e5068a19ec3c1d0" kindref="member">wxDefaultPosition</ref></defval>
        </param>
        <param>
          <type>const <ref refid="classwx_size" kindref="compound">wxSize</ref> &amp;</type>
          <declname>size</declname>
          <defval><ref refid="gdicmn_8h_1a33a012cdb075e9f78c93f63bec2dc27b" kindref="member">wxDefaultSize</ref></defval>
        </param>
        <param>
          <type>long</type>
          <declname>style</declname>
          <defval><ref refid="treebase_8h_1aa07d994fd4002ad64f4d3eb90c87b080" kindref="member">wxTR_DEFAULT_STYLE</ref></defval>
        </param>
        <param>
          <type>const <ref refid="classwx_validator" kindref="compound">wxValidator</ref> &amp;</type>
          <declname>validator</declname>
          <defval><ref refid="validate_8h_1af1e90d8aa1824fd2ce4024ef7e40703c" kindref="member">wxDefaultValidator</ref></defval>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>name</declname>
          <defval>wxTreeCtrlNameStr</defval>
        </param>
        <briefdescription>
<para>Constructor, creating and showing a tree control. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parent</parametername>
</parameternamelist>
<parameterdescription>
<para>Parent window. Must not be NULL. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>Window identifier. The value <computeroutput>wxID_ANY</computeroutput> indicates a default value. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>Window position. If <ref refid="gdicmn_8h_1af5a90c753eaf3d3e3e5068a19ec3c1d0" kindref="member">wxDefaultPosition</ref> is specified then a default position is chosen. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Window size. If <ref refid="gdicmn_8h_1a33a012cdb075e9f78c93f63bec2dc27b" kindref="member">wxDefaultSize</ref> is specified then the window is sized appropriately. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>style</parametername>
</parameternamelist>
<parameterdescription>
<para>Window style. See <ref refid="classwx_tree_ctrl" kindref="compound">wxTreeCtrl</ref>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>validator</parametername>
</parameternamelist>
<parameterdescription>
<para>Window validator. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Window name.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classwx_tree_ctrl_1adf40716643252f78e72fcb95dbd347ae" kindref="member">Create()</ref>, <ref refid="classwx_validator" kindref="compound">wxValidator</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="195" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1aade1a015a27126fe19d21942740ee4bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual wxTreeCtrl::~wxTreeCtrl</definition>
        <argsstring>()</argsstring>
        <name>~wxTreeCtrl</name>
        <briefdescription>
<para>Destructor, destroying the tree control. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="206" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1a1fa4eecee7fca8ea6d69903be8e6c285" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_tree_item_id" kindref="compound">wxTreeItemId</ref></type>
        <definition>virtual wxTreeItemId wxTreeCtrl::AddRoot</definition>
        <argsstring>(const wxString &amp;text, int image=-1, int selImage=-1, wxTreeItemData *data=NULL)</argsstring>
        <name>AddRoot</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>text</declname>
        </param>
        <param>
          <type>int</type>
          <declname>image</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>int</type>
          <declname>selImage</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type><ref refid="classwx_tree_item_data" kindref="compound">wxTreeItemData</ref> *</type>
          <declname>data</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Adds the root node to the tree, returning the new item. </para>        </briefdescription>
        <detaileddescription>
<para>The <emphasis>image</emphasis> and <emphasis>selImage</emphasis> parameters are an index within the normal image list specifying the image to use for unselected and selected items, respectively. If <emphasis>image</emphasis> -1 and <emphasis>selImage</emphasis> is -1, the same image is used for both selected and unselected items. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="216" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1a0a798a2a06f21bcb5bef2c4b4b7cc3a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_tree_item_id" kindref="compound">wxTreeItemId</ref></type>
        <definition>wxTreeItemId wxTreeCtrl::AppendItem</definition>
        <argsstring>(const wxTreeItemId &amp;parent, const wxString &amp;text, int image=-1, int selImage=-1, wxTreeItemData *data=NULL)</argsstring>
        <name>AppendItem</name>
        <param>
          <type>const <ref refid="classwx_tree_item_id" kindref="compound">wxTreeItemId</ref> &amp;</type>
          <declname>parent</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>text</declname>
        </param>
        <param>
          <type>int</type>
          <declname>image</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>int</type>
          <declname>selImage</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type><ref refid="classwx_tree_item_data" kindref="compound">wxTreeItemData</ref> *</type>
          <declname>data</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Appends an item to the end of the branch identified by <emphasis>parent</emphasis>, return a new item id. </para>        </briefdescription>
        <detaileddescription>
<para>The <emphasis>image</emphasis> and <emphasis>selImage</emphasis> parameters are an index within the normal image list specifying the image to use for unselected and selected items, respectively. If <emphasis>image</emphasis> &gt; -1 and <emphasis>selImage</emphasis> is -1, the same image is used for both selected and unselected items. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="229" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1a2a24d50d475f0c487a9162f477f6e69e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTreeCtrl::AssignButtonsImageList</definition>
        <argsstring>(wxImageList *imageList)</argsstring>
        <name>AssignButtonsImageList</name>
        <param>
          <type><ref refid="classwx_image_list" kindref="compound">wxImageList</ref> *</type>
          <declname>imageList</declname>
        </param>
        <briefdescription>
<para>Sets the buttons image list. </para>        </briefdescription>
        <detaileddescription>
<para>The button images assigned with this method will be automatically deleted by <ref refid="classwx_tree_ctrl" kindref="compound">wxTreeCtrl</ref> as appropriate (i.e. it takes ownership of the list).</para><para>Setting or assigning the button image list enables the display of image buttons. Once enabled, the only way to disable the display of button images is to set the button image list to NULL.</para><para>This function is only available in the generic version.</para><para><simplesect kind="see"><para><ref refid="classwx_tree_ctrl_1aa8ce6bdc82a7966d1cba0fdf5a79f6d0" kindref="member">SetButtonsImageList()</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="248" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1a29e4021e0f110909a17517b476dfb58b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTreeCtrl::AssignImageList</definition>
        <argsstring>(wxImageList *imageList)</argsstring>
        <name>AssignImageList</name>
        <param>
          <type><ref refid="classwx_image_list" kindref="compound">wxImageList</ref> *</type>
          <declname>imageList</declname>
        </param>
        <briefdescription>
<para>Sets the normal image list. </para>        </briefdescription>
        <detaileddescription>
<para>The image list assigned with this method will be automatically deleted by <ref refid="classwx_tree_ctrl" kindref="compound">wxTreeCtrl</ref> as appropriate (i.e. it takes ownership of the list).</para><para><simplesect kind="see"><para><ref refid="classwx_tree_ctrl_1a8bc83d1a7145d681fa512e6b43cede45" kindref="member">SetImageList()</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="257" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1a6f42485bcb6ff7445862b08b78f01f33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTreeCtrl::AssignStateImageList</definition>
        <argsstring>(wxImageList *imageList)</argsstring>
        <name>AssignStateImageList</name>
        <param>
          <type><ref refid="classwx_image_list" kindref="compound">wxImageList</ref> *</type>
          <declname>imageList</declname>
        </param>
        <briefdescription>
<para>Sets the state image list. </para>        </briefdescription>
        <detaileddescription>
<para>Image list assigned with this method will be automatically deleted by <ref refid="classwx_tree_ctrl" kindref="compound">wxTreeCtrl</ref> as appropriate (i.e. it takes ownership of the list).</para><para><simplesect kind="see"><para><ref refid="classwx_tree_ctrl_1aabb789a3eaa97608659e50afbd7a46ff" kindref="member">SetStateImageList()</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="266" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1a6be5e621a37cd9a82e68eed0a083c211" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxTreeCtrl::Collapse</definition>
        <argsstring>(const wxTreeItemId &amp;item)</argsstring>
        <name>Collapse</name>
        <param>
          <type>const <ref refid="classwx_tree_item_id" kindref="compound">wxTreeItemId</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Collapses the given item. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="271" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1a954bf5a6b748ac7b7b60ee18156467db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTreeCtrl::CollapseAll</definition>
        <argsstring>()</argsstring>
        <name>CollapseAll</name>
        <briefdescription>
<para>Collapses the root item. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classwx_tree_ctrl_1a8767f4e10e5fb007a77701e27d3927e3" kindref="member">ExpandAll()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="278" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1aeef3170b6bb0fc53b79351183bd595d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTreeCtrl::CollapseAllChildren</definition>
        <argsstring>(const wxTreeItemId &amp;item)</argsstring>
        <name>CollapseAllChildren</name>
        <param>
          <type>const <ref refid="classwx_tree_item_id" kindref="compound">wxTreeItemId</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Collapses this item and all of its children, recursively. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classwx_tree_ctrl_1a41b109ce1f196c2ed77a7f1c3dc3e7ff" kindref="member">ExpandAllChildren()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="285" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1a15b56333132fbcdb6ade6590adf0ad1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxTreeCtrl::CollapseAndReset</definition>
        <argsstring>(const wxTreeItemId &amp;item)</argsstring>
        <name>CollapseAndReset</name>
        <param>
          <type>const <ref refid="classwx_tree_item_id" kindref="compound">wxTreeItemId</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Collapses the given item and removes all children. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="290" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1adf40716643252f78e72fcb95dbd347ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTreeCtrl::Create</definition>
        <argsstring>(wxWindow *parent, wxWindowID id=wxID_ANY, const wxPoint &amp;pos=wxDefaultPosition, const wxSize &amp;size=wxDefaultSize, long style=wxTR_DEFAULT_STYLE, const wxValidator &amp;validator=wxDefaultValidator, const wxString &amp;name=wxTreeCtrlNameStr)</argsstring>
        <name>Create</name>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>parent</declname>
        </param>
        <param>
          <type><ref refid="windowid_8h_1ae8091432cc2cb2485d45f2302fb51133" kindref="member">wxWindowID</ref></type>
          <declname>id</declname>
          <defval><ref refid="defs_8h_1ac66d0a09761e7d86b2ac0b2e0c6a8cbba1f375b01ea03a713bbb7e32a36a2589c" kindref="member">wxID_ANY</ref></defval>
        </param>
        <param>
          <type>const <ref refid="classwx_point" kindref="compound">wxPoint</ref> &amp;</type>
          <declname>pos</declname>
          <defval><ref refid="gdicmn_8h_1af5a90c753eaf3d3e3e5068a19ec3c1d0" kindref="member">wxDefaultPosition</ref></defval>
        </param>
        <param>
          <type>const <ref refid="classwx_size" kindref="compound">wxSize</ref> &amp;</type>
          <declname>size</declname>
          <defval><ref refid="gdicmn_8h_1a33a012cdb075e9f78c93f63bec2dc27b" kindref="member">wxDefaultSize</ref></defval>
        </param>
        <param>
          <type>long</type>
          <declname>style</declname>
          <defval><ref refid="treebase_8h_1aa07d994fd4002ad64f4d3eb90c87b080" kindref="member">wxTR_DEFAULT_STYLE</ref></defval>
        </param>
        <param>
          <type>const <ref refid="classwx_validator" kindref="compound">wxValidator</ref> &amp;</type>
          <declname>validator</declname>
          <defval><ref refid="validate_8h_1af1e90d8aa1824fd2ce4024ef7e40703c" kindref="member">wxDefaultValidator</ref></defval>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>name</declname>
          <defval>wxTreeCtrlNameStr</defval>
        </param>
        <briefdescription>
<para>Creates the tree control. </para>        </briefdescription>
        <detaileddescription>
<para>See <ref refid="classwx_tree_ctrl_1ac4a07aa9c3ef92d6663ace3c20aa1576" kindref="member">wxTreeCtrl::wxTreeCtrl()</ref> for further details. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="296" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1a53a2292e2b7b6c13ba3e2d542d8bc1d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxTreeCtrl::Delete</definition>
        <argsstring>(const wxTreeItemId &amp;item)</argsstring>
        <name>Delete</name>
        <param>
          <type>const <ref refid="classwx_tree_item_id" kindref="compound">wxTreeItemId</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Deletes the specified item. </para>        </briefdescription>
        <detaileddescription>
<para>A <computeroutput>EVT_TREE_DELETE_ITEM</computeroutput> event will be generated.</para><para>This function may cause a subsequent call to <ref refid="classwx_tree_ctrl_1ac8b1a72cd624b3e93228af4242488856" kindref="member">GetNextChild()</ref> to fail. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="309" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1a76de2019d0fcc73f4c302dff5d392c66" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxTreeCtrl::DeleteAllItems</definition>
        <argsstring>()</argsstring>
        <name>DeleteAllItems</name>
        <briefdescription>
<para>Deletes all items in the control. </para>        </briefdescription>
        <detaileddescription>
<para>Note that this may not generate <computeroutput>EVT_TREE_DELETE_ITEM</computeroutput> events under some Windows versions although normally such event is generated for each removed item. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="316" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1a56b91fbfa520892a23b546432c4428b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxTreeCtrl::DeleteChildren</definition>
        <argsstring>(const wxTreeItemId &amp;item)</argsstring>
        <name>DeleteChildren</name>
        <param>
          <type>const <ref refid="classwx_tree_item_id" kindref="compound">wxTreeItemId</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Deletes all children of the given item (but not the item itself). </para>        </briefdescription>
        <detaileddescription>
<para>Note that this will <bold>not</bold> generate any events unlike <ref refid="classwx_tree_ctrl_1a53a2292e2b7b6c13ba3e2d542d8bc1d2" kindref="member">Delete()</ref> method.</para><para>If you have called <ref refid="classwx_tree_ctrl_1a26211b6424ab2b4108311a2b733eb7e5" kindref="member">SetItemHasChildren()</ref>, you may need to call it again since <ref refid="classwx_tree_ctrl_1a56b91fbfa520892a23b546432c4428b6" kindref="member">DeleteChildren()</ref> does not automatically clear the setting. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="325" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1a08d88a76e02f59001766bc90e20016b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_text_ctrl" kindref="compound">wxTextCtrl</ref> *</type>
        <definition>virtual wxTextCtrl* wxTreeCtrl::EditLabel</definition>
        <argsstring>(const wxTreeItemId &amp;item, wxClassInfo *textCtrlClass=wxCLASSINFO(wxTextCtrl))</argsstring>
        <name>EditLabel</name>
        <param>
          <type>const <ref refid="classwx_tree_item_id" kindref="compound">wxTreeItemId</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <param>
          <type><ref refid="classwx_class_info" kindref="compound">wxClassInfo</ref> *</type>
          <declname>textCtrlClass</declname>
          <defval><ref refid="group__group__funcmacro__rtti_1gacee897a7d4e704e1aa53568220f2396e" kindref="member">wxCLASSINFO</ref>(<ref refid="classwx_text_ctrl" kindref="compound">wxTextCtrl</ref>)</defval>
        </param>
        <briefdescription>
<para>Starts editing the label of the given <emphasis>item</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>This function generates a <computeroutput>EVT_TREE_BEGIN_LABEL_EDIT</computeroutput> event which can be vetoed so that no text control will appear for in-place editing.</para><para>If the user changed the label (i.e. s/he does not press ESC or leave the text control without changes, a <computeroutput>EVT_TREE_END_LABEL_EDIT</computeroutput> event will be sent which can be vetoed as well.</para><para><simplesect kind="see"><para><ref refid="classwx_tree_ctrl_1a548331161e0b9f620a4663d84ec642b2" kindref="member">EndEditLabel()</ref>, <ref refid="classwx_tree_event" kindref="compound">wxTreeEvent</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="338" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1ac6e1b3f9c7fa6dcbd001b4807ec6cff2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTreeCtrl::EnableBellOnNoMatch</definition>
        <argsstring>(bool on=true)</argsstring>
        <name>EnableBellOnNoMatch</name>
        <param>
          <type>bool</type>
          <declname>on</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Enable or disable a beep if there is no match for the currently entered text when searching for the item from keyboard. </para>        </briefdescription>
        <detaileddescription>
<para>The default is to not beep in this case except in wxMSW where the beep is always generated by the native control and cannot be disabled, i.e. calls to this function do nothing there.</para><para><simplesect kind="since"><para>2.9.5 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="351" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1a548331161e0b9f620a4663d84ec642b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxTreeCtrl::EndEditLabel</definition>
        <argsstring>(const wxTreeItemId &amp;item, bool discardChanges=false)</argsstring>
        <name>EndEditLabel</name>
        <param>
          <type>const <ref refid="classwx_tree_item_id" kindref="compound">wxTreeItemId</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>discardChanges</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Ends label editing. </para>        </briefdescription>
        <detaileddescription>
<para>If <emphasis>cancelEdit</emphasis> is true, the edit will be cancelled.</para><para><simplesect kind="note"><para>This function is currently supported under Windows only.</para></simplesect>
<simplesect kind="see"><para><ref refid="classwx_tree_ctrl_1a08d88a76e02f59001766bc90e20016b7" kindref="member">EditLabel()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="362" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1a6440663f2dcf7652635ec7347d023f83" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxTreeCtrl::EnsureVisible</definition>
        <argsstring>(const wxTreeItemId &amp;item)</argsstring>
        <name>EnsureVisible</name>
        <param>
          <type>const <ref refid="classwx_tree_item_id" kindref="compound">wxTreeItemId</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Scrolls and/or expands items to ensure that the given item is visible. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="367" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1a36e5c8826d223336df5b807700f4bded" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxTreeCtrl::Expand</definition>
        <argsstring>(const wxTreeItemId &amp;item)</argsstring>
        <name>Expand</name>
        <param>
          <type>const <ref refid="classwx_tree_item_id" kindref="compound">wxTreeItemId</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Expands the given item. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="372" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1a8767f4e10e5fb007a77701e27d3927e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTreeCtrl::ExpandAll</definition>
        <argsstring>()</argsstring>
        <name>ExpandAll</name>
        <briefdescription>
<para>Expands all items in the tree. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="377" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1a41b109ce1f196c2ed77a7f1c3dc3e7ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTreeCtrl::ExpandAllChildren</definition>
        <argsstring>(const wxTreeItemId &amp;item)</argsstring>
        <name>ExpandAllChildren</name>
        <param>
          <type>const <ref refid="classwx_tree_item_id" kindref="compound">wxTreeItemId</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Expands the given item and all its children recursively. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="382" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1af4419b412f1791c5ef2388a0f52b9f13" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxTreeCtrl::GetBoundingRect</definition>
        <argsstring>(const wxTreeItemId &amp;item, wxRect &amp;rect, bool textOnly=false) const</argsstring>
        <name>GetBoundingRect</name>
        <param>
          <type>const <ref refid="classwx_tree_item_id" kindref="compound">wxTreeItemId</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <param>
          <type><ref refid="classwx_rect" kindref="compound">wxRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>textOnly</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Retrieves the rectangle bounding the <emphasis>item</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>If <emphasis>textOnly</emphasis> is true, only the rectangle around the item&apos;s label will be returned, otherwise the item&apos;s image is also taken into account.</para><para>The return value is true if the rectangle was successfully retrieved or <computeroutput></computeroutput> false if it was not (in this case <emphasis>rect</emphasis> is not changed) <ndash/> for example, if the item is currently invisible.</para><para>Notice that the rectangle coordinates are logical, not physical ones. So, for example, the x coordinate may be negative if the tree has a horizontal scrollbar and its position is not 0.</para><para><bold>wxPerl Note:</bold> In wxPerl this method only takes the <emphasis>item</emphasis> and <emphasis>textOnly</emphasis> parameters and returns a <computeroutput>Wx::Rect</computeroutput> (or <computeroutput>undef</computeroutput>). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="402" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1a737d84319645601722c16217f1e07b5f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_image_list" kindref="compound">wxImageList</ref> *</type>
        <definition>wxImageList* wxTreeCtrl::GetButtonsImageList</definition>
        <argsstring>() const</argsstring>
        <name>GetButtonsImageList</name>
        <briefdescription>
<para>Returns the buttons image list (from which application-defined button images are taken). </para>        </briefdescription>
        <detaileddescription>
<para>This function is only available in the generic version. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="411" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1a696bd8930cfabfd60cbbd89ef0e5732b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>size_t</type>
        <definition>virtual size_t wxTreeCtrl::GetChildrenCount</definition>
        <argsstring>(const wxTreeItemId &amp;item, bool recursively=true) const</argsstring>
        <name>GetChildrenCount</name>
        <param>
          <type>const <ref refid="classwx_tree_item_id" kindref="compound">wxTreeItemId</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>recursively</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Returns the number of items in the branch. </para>        </briefdescription>
        <detaileddescription>
<para>If <emphasis>recursively</emphasis> is true, returns the total number of descendants, otherwise only one level of children is counted. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="418" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1a0e8464d26adaa134598397eee2015e82" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>unsigned int</type>
        <definition>virtual unsigned int wxTreeCtrl::GetCount</definition>
        <argsstring>() const</argsstring>
        <name>GetCount</name>
        <briefdescription>
<para>Returns the number of items in the control. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="424" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1a3e032a0e1ceec8b56bee6eaceb71004a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_text_ctrl" kindref="compound">wxTextCtrl</ref> *</type>
        <definition>virtual wxTextCtrl* wxTreeCtrl::GetEditControl</definition>
        <argsstring>() const</argsstring>
        <name>GetEditControl</name>
        <briefdescription>
<para>Returns the edit control being currently used to edit a label. </para>        </briefdescription>
        <detaileddescription>
<para>Returns NULL if no label is being edited.</para><para><simplesect kind="note"><para>This is currently only implemented for wxMSW. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="432" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1a30546111962c66cc761b3ec717738e8a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_tree_item_id" kindref="compound">wxTreeItemId</ref></type>
        <definition>virtual wxTreeItemId wxTreeCtrl::GetFirstChild</definition>
        <argsstring>(const wxTreeItemId &amp;item, wxTreeItemIdValue &amp;cookie) const</argsstring>
        <name>GetFirstChild</name>
        <param>
          <type>const <ref refid="classwx_tree_item_id" kindref="compound">wxTreeItemId</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <param>
          <type>wxTreeItemIdValue &amp;</type>
          <declname>cookie</declname>
        </param>
        <briefdescription>
<para>Returns the first child; call <ref refid="classwx_tree_ctrl_1ac8b1a72cd624b3e93228af4242488856" kindref="member">GetNextChild()</ref> for the next child. </para>        </briefdescription>
        <detaileddescription>
<para>For this enumeration function you must pass in a &apos;cookie&apos; parameter which is opaque for the application but is necessary for the library to make these functions reentrant (i.e. allow more than one enumeration on one and the same object simultaneously). The cookie passed to <ref refid="classwx_tree_ctrl_1a30546111962c66cc761b3ec717738e8a" kindref="member">GetFirstChild()</ref> and <ref refid="classwx_tree_ctrl_1ac8b1a72cd624b3e93228af4242488856" kindref="member">GetNextChild()</ref> should be the same variable.</para><para>Returns an invalid tree item (i.e. <ref refid="classwx_tree_item_id_1a56c80ce39762069bf2194bcf4bb7e941" kindref="member">wxTreeItemId::IsOk()</ref> returns false) if there are no further children.</para><para><bold>wxPerl Note:</bold> In wxPerl this method only takes the <emphasis>item</emphasis> parameter, and returns a 2-element list (item, cookie).</para><para><simplesect kind="see"><para><ref refid="classwx_tree_ctrl_1ac8b1a72cd624b3e93228af4242488856" kindref="member">GetNextChild()</ref>, <ref refid="classwx_tree_ctrl_1a05e302a9ff2af6ef7ae1ef18f2624194" kindref="member">GetNextSibling()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="453" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1a5f9168352fcb511c803c7bd158997300" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_tree_item_id" kindref="compound">wxTreeItemId</ref></type>
        <definition>virtual wxTreeItemId wxTreeCtrl::GetFirstVisibleItem</definition>
        <argsstring>() const</argsstring>
        <name>GetFirstVisibleItem</name>
        <briefdescription>
<para>Returns the first visible item. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="459" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1ab65e39216b3e02e4e94345391ca8eba8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_tree_item_id" kindref="compound">wxTreeItemId</ref></type>
        <definition>virtual wxTreeItemId wxTreeCtrl::GetFocusedItem</definition>
        <argsstring>() const</argsstring>
        <name>GetFocusedItem</name>
        <briefdescription>
<para>Returns the item last clicked or otherwise selected. </para>        </briefdescription>
        <detaileddescription>
<para>Unlike <ref refid="classwx_tree_ctrl_1a70a03f43aed60956d1fd63d2eb72ae2e" kindref="member">GetSelection()</ref>, it can be used whether or not the control has the <computeroutput>wxTR_MULTIPLE</computeroutput> style.</para><para><simplesect kind="since"><para>2.9.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="468" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1a37114ccd8ab49b27991ccba2b786672a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxTreeCtrl::ClearFocusedItem</definition>
        <argsstring>()</argsstring>
        <name>ClearFocusedItem</name>
        <briefdescription>
<para>Clears the currently focused item. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>2.9.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="476" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1a37890d9d52a21c58342560906b658f1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxTreeCtrl::SetFocusedItem</definition>
        <argsstring>(const wxTreeItemId &amp;item)</argsstring>
        <name>SetFocusedItem</name>
        <param>
          <type>const <ref refid="classwx_tree_item_id" kindref="compound">wxTreeItemId</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Sets the currently focused item. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>item</parametername>
</parameternamelist>
<parameterdescription>
<para>The item to make the current one. It must be valid. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>2.9.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="485" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1a958be0c36e2f30683bb8066c0540dcdc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_image_list" kindref="compound">wxImageList</ref> *</type>
        <definition>wxImageList* wxTreeCtrl::GetImageList</definition>
        <argsstring>() const</argsstring>
        <name>GetImageList</name>
        <briefdescription>
<para>Returns the normal image list. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="491" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1a450408747bde58d6cb6f2f18832be747" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>unsigned int</type>
        <definition>virtual unsigned int wxTreeCtrl::GetIndent</definition>
        <argsstring>() const</argsstring>
        <name>GetIndent</name>
        <briefdescription>
<para>Returns the current tree control indentation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="496" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1a0d9004aa9a61e38f4802b26e135a7380" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_colour" kindref="compound">wxColour</ref></type>
        <definition>virtual wxColour wxTreeCtrl::GetItemBackgroundColour</definition>
        <argsstring>(const wxTreeItemId &amp;item) const</argsstring>
        <name>GetItemBackgroundColour</name>
        <param>
          <type>const <ref refid="classwx_tree_item_id" kindref="compound">wxTreeItemId</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Returns the background colour of the item. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="501" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1ab75146a9a4592a689b43b9f286512083" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_tree_item_data" kindref="compound">wxTreeItemData</ref> *</type>
        <definition>virtual wxTreeItemData* wxTreeCtrl::GetItemData</definition>
        <argsstring>(const wxTreeItemId &amp;item) const</argsstring>
        <name>GetItemData</name>
        <param>
          <type>const <ref refid="classwx_tree_item_id" kindref="compound">wxTreeItemId</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Returns the tree item data associated with the item. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classwx_tree_item_data" kindref="compound">wxTreeItemData</ref></para></simplesect>
<bold>wxPerl Note:</bold> wxPerl provides the following shortcut method:<itemizedlist>
<listitem><para>GetPlData(item): returns the Perl data associated with the Wx::TreeItemData. It is just the same as tree-&gt;GetItemData(item)-&gt;GetData(). </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="515" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1a2bf7a0ad3f935de5da95559a5bc1b21e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_font" kindref="compound">wxFont</ref></type>
        <definition>virtual wxFont wxTreeCtrl::GetItemFont</definition>
        <argsstring>(const wxTreeItemId &amp;item) const</argsstring>
        <name>GetItemFont</name>
        <param>
          <type>const <ref refid="classwx_tree_item_id" kindref="compound">wxTreeItemId</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Returns the font of the item label. </para>        </briefdescription>
        <detaileddescription>
<para>If the font hadn&apos;t been explicitly set for the specified <emphasis>item</emphasis> with <ref refid="classwx_tree_ctrl_1ae8283e7314d164b7a69056fa182d2386" kindref="member">SetItemFont()</ref>, returns an invalid <ref refid="interface_2wx_2font_8h_1aa81b6e7b8f74356bfe604485a4be1066" kindref="member">wxNullFont</ref> font. <ref refid="classwx_window_1af25f8a799106d61b50d3ee796ba43728" kindref="member">GetFont()</ref> can be used to retrieve the global tree control font used for the items without any specific font. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="525" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1ae00ada910349feb228cf2ca0ce0f201c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>virtual int wxTreeCtrl::GetItemImage</definition>
        <argsstring>(const wxTreeItemId &amp;item, wxTreeItemIcon which=wxTreeItemIcon_Normal) const</argsstring>
        <name>GetItemImage</name>
        <param>
          <type>const <ref refid="classwx_tree_item_id" kindref="compound">wxTreeItemId</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <param>
          <type><ref refid="treebase_8h_1a61d3d0f9fa2ce703a3cb216f617dd964" kindref="member">wxTreeItemIcon</ref></type>
          <declname>which</declname>
          <defval><ref refid="treebase_8h_1a61d3d0f9fa2ce703a3cb216f617dd964ae7af51423ccd60119ad2ae3f158f0c19" kindref="member">wxTreeItemIcon_Normal</ref></defval>
        </param>
        <briefdescription>
<para>Gets the specified item image. </para>        </briefdescription>
        <detaileddescription>
<para>The value of <emphasis>which</emphasis> may be:<itemizedlist>
<listitem><para><ref refid="treebase_8h_1a61d3d0f9fa2ce703a3cb216f617dd964ae7af51423ccd60119ad2ae3f158f0c19" kindref="member">wxTreeItemIcon_Normal</ref>: to get the normal item image.</para></listitem><listitem><para><ref refid="treebase_8h_1a61d3d0f9fa2ce703a3cb216f617dd964ad75a00cb9f2c06164b60048ebd80ac8e" kindref="member">wxTreeItemIcon_Selected</ref>: to get the selected item image (i.e. the image which is shown when the item is currently selected).</para></listitem><listitem><para><ref refid="treebase_8h_1a61d3d0f9fa2ce703a3cb216f617dd964a272dc4e7bb41739dcc29d270848a6e1b" kindref="member">wxTreeItemIcon_Expanded</ref>: to get the expanded image (this only makes sense for items which have children - then this image is shown when the item is expanded and the normal image is shown when it is collapsed).</para></listitem><listitem><para><ref refid="treebase_8h_1a61d3d0f9fa2ce703a3cb216f617dd964aa47ea76e347bfe5a101119b3d7a3dec5" kindref="member">wxTreeItemIcon_SelectedExpanded</ref>: to get the selected expanded image (which is shown when an expanded item is currently selected). </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="539" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1af76c5a2dab0092624cd9082ea810f38c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_tree_item_id" kindref="compound">wxTreeItemId</ref></type>
        <definition>virtual wxTreeItemId wxTreeCtrl::GetItemParent</definition>
        <argsstring>(const wxTreeItemId &amp;item) const</argsstring>
        <name>GetItemParent</name>
        <param>
          <type>const <ref refid="classwx_tree_item_id" kindref="compound">wxTreeItemId</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Returns the item&apos;s parent. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="545" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1a0f15135b810cf28cdda9ea35d2f2ef74" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxTreeCtrl::GetItemState</definition>
        <argsstring>(const wxTreeItemId &amp;item) const</argsstring>
        <name>GetItemState</name>
        <param>
          <type>const <ref refid="classwx_tree_item_id" kindref="compound">wxTreeItemId</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Gets the specified item state. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="550" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1a3666ef743b222e4abfd28b51c9232928" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>virtual wxString wxTreeCtrl::GetItemText</definition>
        <argsstring>(const wxTreeItemId &amp;item) const</argsstring>
        <name>GetItemText</name>
        <param>
          <type>const <ref refid="classwx_tree_item_id" kindref="compound">wxTreeItemId</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Returns the item label. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="555" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1a6fe94ddffcaaaa44c9ded45394b633f2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_colour" kindref="compound">wxColour</ref></type>
        <definition>virtual wxColour wxTreeCtrl::GetItemTextColour</definition>
        <argsstring>(const wxTreeItemId &amp;item) const</argsstring>
        <name>GetItemTextColour</name>
        <param>
          <type>const <ref refid="classwx_tree_item_id" kindref="compound">wxTreeItemId</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Returns the colour of the item label. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="560" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1ae0fc3ef235c7f97eac0271c587e09231" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_tree_item_id" kindref="compound">wxTreeItemId</ref></type>
        <definition>virtual wxTreeItemId wxTreeCtrl::GetLastChild</definition>
        <argsstring>(const wxTreeItemId &amp;item) const</argsstring>
        <name>GetLastChild</name>
        <param>
          <type>const <ref refid="classwx_tree_item_id" kindref="compound">wxTreeItemId</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Returns the last child of the item (or an invalid tree item if this item has no children). </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classwx_tree_ctrl_1a30546111962c66cc761b3ec717738e8a" kindref="member">GetFirstChild()</ref>, <ref refid="classwx_tree_ctrl_1a05e302a9ff2af6ef7ae1ef18f2624194" kindref="member">GetNextSibling()</ref>, <ref refid="classwx_tree_ctrl_1ae0fc3ef235c7f97eac0271c587e09231" kindref="member">GetLastChild()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="568" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1ac8b1a72cd624b3e93228af4242488856" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_tree_item_id" kindref="compound">wxTreeItemId</ref></type>
        <definition>virtual wxTreeItemId wxTreeCtrl::GetNextChild</definition>
        <argsstring>(const wxTreeItemId &amp;item, wxTreeItemIdValue &amp;cookie) const</argsstring>
        <name>GetNextChild</name>
        <param>
          <type>const <ref refid="classwx_tree_item_id" kindref="compound">wxTreeItemId</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <param>
          <type>wxTreeItemIdValue &amp;</type>
          <declname>cookie</declname>
        </param>
        <briefdescription>
<para>Returns the next child; call <ref refid="classwx_tree_ctrl_1a30546111962c66cc761b3ec717738e8a" kindref="member">GetFirstChild()</ref> for the first child. </para>        </briefdescription>
        <detaileddescription>
<para>For this enumeration function you must pass in a &apos;cookie&apos; parameter which is opaque for the application but is necessary for the library to make these functions reentrant (i.e. allow more than one enumeration on one and the same object simultaneously). The cookie passed to <ref refid="classwx_tree_ctrl_1a30546111962c66cc761b3ec717738e8a" kindref="member">GetFirstChild()</ref> and <ref refid="classwx_tree_ctrl_1ac8b1a72cd624b3e93228af4242488856" kindref="member">GetNextChild()</ref> should be the same.</para><para>Returns an invalid tree item if there are no further children.</para><para><bold>wxPerl Note:</bold> In wxPerl this method returns a 2-element list (item, cookie) instead of modifying its parameters.</para><para><simplesect kind="see"><para><ref refid="classwx_tree_ctrl_1a30546111962c66cc761b3ec717738e8a" kindref="member">GetFirstChild()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="587" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1a05e302a9ff2af6ef7ae1ef18f2624194" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_tree_item_id" kindref="compound">wxTreeItemId</ref></type>
        <definition>virtual wxTreeItemId wxTreeCtrl::GetNextSibling</definition>
        <argsstring>(const wxTreeItemId &amp;item) const</argsstring>
        <name>GetNextSibling</name>
        <param>
          <type>const <ref refid="classwx_tree_item_id" kindref="compound">wxTreeItemId</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Returns the next sibling of the specified item; call <ref refid="classwx_tree_ctrl_1a5b66e8d79ef9aa2ee5c1fba3bd2d619a" kindref="member">GetPrevSibling()</ref> for the previous sibling. </para>        </briefdescription>
        <detaileddescription>
<para>Returns an invalid tree item if there are no further siblings.</para><para><simplesect kind="see"><para><ref refid="classwx_tree_ctrl_1a5b66e8d79ef9aa2ee5c1fba3bd2d619a" kindref="member">GetPrevSibling()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="598" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1a3d48b36dbae179429073016df1336c6c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_tree_item_id" kindref="compound">wxTreeItemId</ref></type>
        <definition>virtual wxTreeItemId wxTreeCtrl::GetNextVisible</definition>
        <argsstring>(const wxTreeItemId &amp;item) const</argsstring>
        <name>GetNextVisible</name>
        <param>
          <type>const <ref refid="classwx_tree_item_id" kindref="compound">wxTreeItemId</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Returns the next visible item or an invalid item if this item is the last visible one. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>The <emphasis>item</emphasis> itself must be visible. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="606" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1a5b66e8d79ef9aa2ee5c1fba3bd2d619a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_tree_item_id" kindref="compound">wxTreeItemId</ref></type>
        <definition>virtual wxTreeItemId wxTreeCtrl::GetPrevSibling</definition>
        <argsstring>(const wxTreeItemId &amp;item) const</argsstring>
        <name>GetPrevSibling</name>
        <param>
          <type>const <ref refid="classwx_tree_item_id" kindref="compound">wxTreeItemId</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Returns the previous sibling of the specified item; call <ref refid="classwx_tree_ctrl_1a05e302a9ff2af6ef7ae1ef18f2624194" kindref="member">GetNextSibling()</ref> for the next sibling. </para>        </briefdescription>
        <detaileddescription>
<para>Returns an invalid tree item if there are no further children.</para><para><simplesect kind="see"><para><ref refid="classwx_tree_ctrl_1a05e302a9ff2af6ef7ae1ef18f2624194" kindref="member">GetNextSibling()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="616" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1a2dc88b8c9abeaa4cdc9ae95619006b87" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_tree_item_id" kindref="compound">wxTreeItemId</ref></type>
        <definition>virtual wxTreeItemId wxTreeCtrl::GetPrevVisible</definition>
        <argsstring>(const wxTreeItemId &amp;item) const</argsstring>
        <name>GetPrevVisible</name>
        <param>
          <type>const <ref refid="classwx_tree_item_id" kindref="compound">wxTreeItemId</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Returns the previous visible item or an invalid item if this item is the first visible one. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>The <emphasis>item</emphasis> itself must be visible. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="624" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1a1b9c71340e324aa106f8cde522cb2a33" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTreeCtrl::GetQuickBestSize</definition>
        <argsstring>() const</argsstring>
        <name>GetQuickBestSize</name>
        <briefdescription>
<para>Returns true if the control will use a quick calculation for the best size, looking only at the first and last items. </para>        </briefdescription>
        <detaileddescription>
<para>The default is false.</para><para><simplesect kind="see"><para><ref refid="classwx_tree_ctrl_1a54a5d1e4cd35b5c693d0d701a04ff358" kindref="member">SetQuickBestSize()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="632" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1ab5d7ec551901a78a79888106c580ab79" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_tree_item_id" kindref="compound">wxTreeItemId</ref></type>
        <definition>virtual wxTreeItemId wxTreeCtrl::GetRootItem</definition>
        <argsstring>() const</argsstring>
        <name>GetRootItem</name>
        <briefdescription>
<para>Returns the root item for the tree control. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="637" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1a70a03f43aed60956d1fd63d2eb72ae2e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_tree_item_id" kindref="compound">wxTreeItemId</ref></type>
        <definition>virtual wxTreeItemId wxTreeCtrl::GetSelection</definition>
        <argsstring>() const</argsstring>
        <name>GetSelection</name>
        <briefdescription>
<para>Returns the selection, or an invalid item if there is no selection. </para>        </briefdescription>
        <detaileddescription>
<para>This function only works with the controls without <computeroutput>wxTR_MULTIPLE</computeroutput> style, use <ref refid="classwx_tree_ctrl_1a5d243137947e75cc3ef73e07bc183137" kindref="member">GetSelections()</ref> for the controls which do have this style or, if a single item is wanted, use <ref refid="classwx_tree_ctrl_1ab65e39216b3e02e4e94345391ca8eba8" kindref="member">GetFocusedItem()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="645" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1a5d243137947e75cc3ef73e07bc183137" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>size_t</type>
        <definition>virtual size_t wxTreeCtrl::GetSelections</definition>
        <argsstring>(wxArrayTreeItemIds &amp;selection) const</argsstring>
        <name>GetSelections</name>
        <param>
          <type>wxArrayTreeItemIds &amp;</type>
          <declname>selection</declname>
        </param>
        <briefdescription>
<para>Fills the array of tree items passed in with the currently selected items. </para>        </briefdescription>
        <detaileddescription>
<para>This function can be called only if the control has the <computeroutput>wxTR_MULTIPLE</computeroutput> style.</para><para>Returns the number of selected items.</para><para><bold>wxPerl Note:</bold> In wxPerl this method takes no parameters and returns a list of <computeroutput>Wx::TreeItemId</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="659" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1a6fb4379854d91af60a0df6d6664cf8cc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_image_list" kindref="compound">wxImageList</ref> *</type>
        <definition>wxImageList* wxTreeCtrl::GetStateImageList</definition>
        <argsstring>() const</argsstring>
        <name>GetStateImageList</name>
        <briefdescription>
<para>Returns the state image list (from which application-defined state images are taken). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="665" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1ab76927cdfbd23296e4817a200dc7aee7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_tree_item_id" kindref="compound">wxTreeItemId</ref></type>
        <definition>wxTreeItemId wxTreeCtrl::HitTest</definition>
        <argsstring>(const wxPoint &amp;point, int &amp;flags) const</argsstring>
        <name>HitTest</name>
        <param>
          <type>const <ref refid="classwx_point" kindref="compound">wxPoint</ref> &amp;</type>
          <declname>point</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Calculates which (if any) item is under the given <emphasis>point</emphasis>, returning the tree item id at this point plus extra information <emphasis>flags</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para><emphasis>flags</emphasis> is a bitlist of the following:</para><para><itemizedlist>
<listitem><para><computeroutput>wxTREE_HITTEST_ABOVE:</computeroutput> Above the client area.</para></listitem><listitem><para><computeroutput>wxTREE_HITTEST_BELOW:</computeroutput> Below the client area.</para></listitem><listitem><para><computeroutput>wxTREE_HITTEST_NOWHERE:</computeroutput> In the client area but below the last item.</para></listitem><listitem><para><computeroutput>wxTREE_HITTEST_ONITEMBUTTON:</computeroutput> On the button associated with an item.</para></listitem><listitem><para><computeroutput>wxTREE_HITTEST_ONITEMICON:</computeroutput> On the bitmap associated with an item.</para></listitem><listitem><para><computeroutput>wxTREE_HITTEST_ONITEMINDENT:</computeroutput> In the indentation associated with an item.</para></listitem><listitem><para><computeroutput>wxTREE_HITTEST_ONITEMLABEL:</computeroutput> On the label (string) associated with an item.</para></listitem><listitem><para><computeroutput>wxTREE_HITTEST_ONITEMRIGHT:</computeroutput> In the area to the right of an item.</para></listitem><listitem><para><computeroutput>wxTREE_HITTEST_ONITEMSTATEICON:</computeroutput> On the state icon for a tree view item that is in a user-defined state.</para></listitem><listitem><para><computeroutput>wxTREE_HITTEST_TOLEFT:</computeroutput> To the right of the client area.</para></listitem><listitem><para><computeroutput>wxTREE_HITTEST_TORIGHT:</computeroutput> To the left of the client area.</para></listitem></itemizedlist>
</para><para><bold>wxPerl Note:</bold> In wxPerl this method only takes the <emphasis>point</emphasis> parameter and returns a 2-element list (item, flags). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="690" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1a06e1e6b25a7121922412eea510bd3109" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_tree_item_id" kindref="compound">wxTreeItemId</ref></type>
        <definition>wxTreeItemId wxTreeCtrl::InsertItem</definition>
        <argsstring>(const wxTreeItemId &amp;parent, const wxTreeItemId &amp;previous, const wxString &amp;text, int image=-1, int selImage=-1, wxTreeItemData *data=NULL)</argsstring>
        <name>InsertItem</name>
        <param>
          <type>const <ref refid="classwx_tree_item_id" kindref="compound">wxTreeItemId</ref> &amp;</type>
          <declname>parent</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_tree_item_id" kindref="compound">wxTreeItemId</ref> &amp;</type>
          <declname>previous</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>text</declname>
        </param>
        <param>
          <type>int</type>
          <declname>image</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>int</type>
          <declname>selImage</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type><ref refid="classwx_tree_item_data" kindref="compound">wxTreeItemData</ref> *</type>
          <declname>data</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Inserts an item after a given one (<emphasis>previous</emphasis>). </para>        </briefdescription>
        <detaileddescription>
<para>The <emphasis>image</emphasis> and <emphasis>selImage</emphasis> parameters are an index within the normal image list specifying the image to use for unselected and selected items, respectively. If <emphasis>image</emphasis> -1 and <emphasis>selImage</emphasis> is -1, the same image is used for both selected and unselected items. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="701" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1a52e7baec34632a75ce8060695cfa976a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_tree_item_id" kindref="compound">wxTreeItemId</ref></type>
        <definition>wxTreeItemId wxTreeCtrl::InsertItem</definition>
        <argsstring>(const wxTreeItemId &amp;parent, size_t pos, const wxString &amp;text, int image=-1, int selImage=-1, wxTreeItemData *data=NULL)</argsstring>
        <name>InsertItem</name>
        <param>
          <type>const <ref refid="classwx_tree_item_id" kindref="compound">wxTreeItemId</ref> &amp;</type>
          <declname>parent</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>text</declname>
        </param>
        <param>
          <type>int</type>
          <declname>image</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>int</type>
          <declname>selImage</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type><ref refid="classwx_tree_item_data" kindref="compound">wxTreeItemData</ref> *</type>
          <declname>data</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Inserts an item before one identified by its position (<emphasis>pos</emphasis>). </para>        </briefdescription>
        <detaileddescription>
<para><emphasis>pos</emphasis> must be less than or equal to the number of children.</para><para>The <emphasis>image</emphasis> and <emphasis>selImage</emphasis> parameters are an index within the normal image list specifying the image to use for unselected and selected items, respectively. If <emphasis>image</emphasis> -1 and <emphasis>selImage</emphasis> is -1, the same image is used for both selected and unselected items. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="718" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1a08877c0319a358bb02e37543a61c7fe8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxTreeCtrl::IsBold</definition>
        <argsstring>(const wxTreeItemId &amp;item) const</argsstring>
        <name>IsBold</name>
        <param>
          <type>const <ref refid="classwx_tree_item_id" kindref="compound">wxTreeItemId</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Returns true if the given item is in bold state. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classwx_tree_ctrl_1a52744e373d5405e384928eab5fb9c991" kindref="member">SetItemBold()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="730" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1a1ee6c7fe6489c47e44f962d050626b9e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTreeCtrl::IsEmpty</definition>
        <argsstring>() const</argsstring>
        <name>IsEmpty</name>
        <briefdescription>
<para>Returns true if the control is empty (i.e. has no items, even no root one). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="736" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1a4143652eab75a62965e9896f1dfcadbc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxTreeCtrl::IsExpanded</definition>
        <argsstring>(const wxTreeItemId &amp;item) const</argsstring>
        <name>IsExpanded</name>
        <param>
          <type>const <ref refid="classwx_tree_item_id" kindref="compound">wxTreeItemId</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Returns true if the item is expanded (only makes sense if it has children). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="742" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1a72beea097880e83337bf0784104264e3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxTreeCtrl::IsSelected</definition>
        <argsstring>(const wxTreeItemId &amp;item) const</argsstring>
        <name>IsSelected</name>
        <param>
          <type>const <ref refid="classwx_tree_item_id" kindref="compound">wxTreeItemId</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Returns true if the item is selected. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="747" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1a29724d678d683786a1f3f2ac8f160291" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxTreeCtrl::IsVisible</definition>
        <argsstring>(const wxTreeItemId &amp;item) const</argsstring>
        <name>IsVisible</name>
        <param>
          <type>const <ref refid="classwx_tree_item_id" kindref="compound">wxTreeItemId</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Returns true if the item is visible on the screen. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="752" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1ab1881d51d96807f1ea775dc8f9f4390d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxTreeCtrl::ItemHasChildren</definition>
        <argsstring>(const wxTreeItemId &amp;item) const</argsstring>
        <name>ItemHasChildren</name>
        <param>
          <type>const <ref refid="classwx_tree_item_id" kindref="compound">wxTreeItemId</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Returns true if the item has children. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="757" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1ab90a465793c291ca7aa827a576b7d146" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>virtual int wxTreeCtrl::OnCompareItems</definition>
        <argsstring>(const wxTreeItemId &amp;item1, const wxTreeItemId &amp;item2)</argsstring>
        <name>OnCompareItems</name>
        <param>
          <type>const <ref refid="classwx_tree_item_id" kindref="compound">wxTreeItemId</ref> &amp;</type>
          <declname>item1</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_tree_item_id" kindref="compound">wxTreeItemId</ref> &amp;</type>
          <declname>item2</declname>
        </param>
        <briefdescription>
<para>Override this function in the derived class to change the sort order of the items in the tree control. </para>        </briefdescription>
        <detaileddescription>
<para>The function should return a negative, zero or positive value if the first item is less than, equal to or greater than the second one.</para><para>Please note that you <bold>must</bold> use wxRTTI macros <ref refid="group__group__funcmacro__rtti_1ga9c252d076397bec5ac241272a7a60747" kindref="member">wxDECLARE_DYNAMIC_CLASS()</ref> and <ref refid="group__group__funcmacro__rtti_1ga4cbf0c21eb5986eb489dc67450eab1d1" kindref="member">wxIMPLEMENT_DYNAMIC_CLASS()</ref> if you override this function because otherwise the base class considers that it is not overridden and uses the default comparison, i.e. sorts the items alphabetically, which allows it optimize away the calls to the virtual function completely.</para><para><simplesect kind="see"><para><ref refid="classwx_tree_ctrl_1aa59a3c3081b78ffe644fee0a4bcd1ca3" kindref="member">SortChildren()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="773" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1ab7ec4164ca8eb1675646f0c16b681566" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_tree_item_id" kindref="compound">wxTreeItemId</ref></type>
        <definition>wxTreeItemId wxTreeCtrl::PrependItem</definition>
        <argsstring>(const wxTreeItemId &amp;parent, const wxString &amp;text, int image=-1, int selImage=-1, wxTreeItemData *data=NULL)</argsstring>
        <name>PrependItem</name>
        <param>
          <type>const <ref refid="classwx_tree_item_id" kindref="compound">wxTreeItemId</ref> &amp;</type>
          <declname>parent</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>text</declname>
        </param>
        <param>
          <type>int</type>
          <declname>image</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>int</type>
          <declname>selImage</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type><ref refid="classwx_tree_item_data" kindref="compound">wxTreeItemData</ref> *</type>
          <declname>data</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Appends an item as the first child of <emphasis>parent</emphasis>, return a new item id. </para>        </briefdescription>
        <detaileddescription>
<para>The <emphasis>image</emphasis> and <emphasis>selImage</emphasis> parameters are an index within the normal image list specifying the image to use for unselected and selected items, respectively. If <emphasis>image</emphasis> -1 and <emphasis>selImage</emphasis> is -1, the same image is used for both selected and unselected items. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="784" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1a5448656d47293d10348971c56aba61ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxTreeCtrl::ScrollTo</definition>
        <argsstring>(const wxTreeItemId &amp;item)</argsstring>
        <name>ScrollTo</name>
        <param>
          <type>const <ref refid="classwx_tree_item_id" kindref="compound">wxTreeItemId</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Scrolls the specified item into view. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="793" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1ab6ed9a6e7c3d101ec51a496ef71b422e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxTreeCtrl::SelectItem</definition>
        <argsstring>(const wxTreeItemId &amp;item, bool select=true)</argsstring>
        <name>SelectItem</name>
        <param>
          <type>const <ref refid="classwx_tree_item_id" kindref="compound">wxTreeItemId</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>select</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Selects the given item. </para>        </briefdescription>
        <detaileddescription>
<para>In multiple selection controls, can be also used to deselect a currently selected item if the value of <emphasis>select</emphasis> is false.</para><para>Notice that calling this method will generate <computeroutput>wxEVT_TREE_SEL_CHANGING</computeroutput> and <computeroutput>wxEVT_TREE_SEL_CHANGED</computeroutput> events and that the change could be vetoed by the former event handler. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="805" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1aa8ce6bdc82a7966d1cba0fdf5a79f6d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTreeCtrl::SetButtonsImageList</definition>
        <argsstring>(wxImageList *imageList)</argsstring>
        <name>SetButtonsImageList</name>
        <param>
          <type><ref refid="classwx_image_list" kindref="compound">wxImageList</ref> *</type>
          <declname>imageList</declname>
        </param>
        <briefdescription>
<para>Sets the buttons image list (from which application-defined button images are taken). </para>        </briefdescription>
        <detaileddescription>
<para>The button images assigned with this method will <bold>not</bold> be deleted by <ref refid="classwx_tree_ctrl" kindref="compound">wxTreeCtrl</ref>&apos;s destructor, you must delete it yourself. Setting or assigning the button image list enables the display of image buttons. Once enabled, the only way to disable the display of button images is to set the button image list to NULL.</para><para><simplesect kind="note"><para>This function is only available in the generic version.</para></simplesect>
<simplesect kind="see"><para><ref refid="classwx_tree_ctrl_1a2a24d50d475f0c487a9162f477f6e69e" kindref="member">AssignButtonsImageList()</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="821" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1a8bc83d1a7145d681fa512e6b43cede45" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxTreeCtrl::SetImageList</definition>
        <argsstring>(wxImageList *imageList)</argsstring>
        <name>SetImageList</name>
        <param>
          <type><ref refid="classwx_image_list" kindref="compound">wxImageList</ref> *</type>
          <declname>imageList</declname>
        </param>
        <briefdescription>
<para>Sets the normal image list. </para>        </briefdescription>
        <detaileddescription>
<para>The image list assigned with this method will <bold>not</bold> be deleted by <ref refid="classwx_tree_ctrl" kindref="compound">wxTreeCtrl</ref>&apos;s destructor, you must delete it yourself.</para><para><simplesect kind="see"><para><ref refid="classwx_tree_ctrl_1a29e4021e0f110909a17517b476dfb58b" kindref="member">AssignImageList()</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="830" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1a1db2c8ef0b28483515a2585a0312dc43" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxTreeCtrl::SetIndent</definition>
        <argsstring>(unsigned int indent)</argsstring>
        <name>SetIndent</name>
        <param>
          <type>unsigned int</type>
          <declname>indent</declname>
        </param>
        <briefdescription>
<para>Sets the indentation for the tree control. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="835" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1ae55f83069faef927b8d4a4d3e45daae6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxTreeCtrl::SetItemBackgroundColour</definition>
        <argsstring>(const wxTreeItemId &amp;item, const wxColour &amp;col)</argsstring>
        <name>SetItemBackgroundColour</name>
        <param>
          <type>const <ref refid="classwx_tree_item_id" kindref="compound">wxTreeItemId</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_colour" kindref="compound">wxColour</ref> &amp;</type>
          <declname>col</declname>
        </param>
        <briefdescription>
<para>Sets the colour of the item&apos;s background. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="840" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1a52744e373d5405e384928eab5fb9c991" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxTreeCtrl::SetItemBold</definition>
        <argsstring>(const wxTreeItemId &amp;item, bool bold=true)</argsstring>
        <name>SetItemBold</name>
        <param>
          <type>const <ref refid="classwx_tree_item_id" kindref="compound">wxTreeItemId</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bold</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Makes item appear in bold font if <emphasis>bold</emphasis> parameter is true or resets it to the normal state. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classwx_tree_ctrl_1a08877c0319a358bb02e37543a61c7fe8" kindref="member">IsBold()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="849" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1adb74a81b41ab25bd38884311bb4b3b46" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxTreeCtrl::SetItemData</definition>
        <argsstring>(const wxTreeItemId &amp;item, wxTreeItemData *data)</argsstring>
        <name>SetItemData</name>
        <param>
          <type>const <ref refid="classwx_tree_item_id" kindref="compound">wxTreeItemId</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <param>
          <type><ref refid="classwx_tree_item_data" kindref="compound">wxTreeItemData</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Sets the item client data. </para>        </briefdescription>
        <detaileddescription>
<para>Notice that the client data previously associated with the <emphasis>item</emphasis> (if any) is <emphasis>not</emphasis> freed by this function and so calling this function multiple times for the same item will result in memory leaks unless you delete the old item data pointer yourself.</para><para><bold>wxPerl Note:</bold> wxPerl provides the following shortcut method:<itemizedlist>
<listitem><para>SetPlData(item, data): sets the Perl data associated with the <computeroutput>Wx::TreeItemData</computeroutput>. It is just the same as tree-&gt;GetItemData(item)-&gt;SetData(data). </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="866" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1a03fd2789f5bdb6c645b381739772c673" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxTreeCtrl::SetItemDropHighlight</definition>
        <argsstring>(const wxTreeItemId &amp;item, bool highlight=true)</argsstring>
        <name>SetItemDropHighlight</name>
        <param>
          <type>const <ref refid="classwx_tree_item_id" kindref="compound">wxTreeItemId</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>highlight</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Gives the item the visual feedback for Drag&apos;n&apos;Drop actions, which is useful if something is dragged from the outside onto the tree control (as opposed to a DnD operation within the tree control, which already is implemented internally). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="875" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1ae8283e7314d164b7a69056fa182d2386" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxTreeCtrl::SetItemFont</definition>
        <argsstring>(const wxTreeItemId &amp;item, const wxFont &amp;font)</argsstring>
        <name>SetItemFont</name>
        <param>
          <type>const <ref refid="classwx_tree_item_id" kindref="compound">wxTreeItemId</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_font" kindref="compound">wxFont</ref> &amp;</type>
          <declname>font</declname>
        </param>
        <briefdescription>
<para>Sets the item&apos;s font. </para>        </briefdescription>
        <detaileddescription>
<para>All items in the tree should have the same height to avoid text clipping, so the fonts height should be the same for all of them, although font attributes may vary.</para><para><simplesect kind="see"><para><ref refid="classwx_tree_ctrl_1a52744e373d5405e384928eab5fb9c991" kindref="member">SetItemBold()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="885" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1a26211b6424ab2b4108311a2b733eb7e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxTreeCtrl::SetItemHasChildren</definition>
        <argsstring>(const wxTreeItemId &amp;item, bool hasChildren=true)</argsstring>
        <name>SetItemHasChildren</name>
        <param>
          <type>const <ref refid="classwx_tree_item_id" kindref="compound">wxTreeItemId</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>hasChildren</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Force appearance of the button next to the item. </para>        </briefdescription>
        <detaileddescription>
<para>This is useful to allow the user to expand the items which don&apos;t have any children now, but instead adding them only when needed, thus minimizing memory usage and loading time. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="893" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1aab11b22f08ca5dd75919d8cbf3e902ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxTreeCtrl::SetItemImage</definition>
        <argsstring>(const wxTreeItemId &amp;item, int image, wxTreeItemIcon which=wxTreeItemIcon_Normal)</argsstring>
        <name>SetItemImage</name>
        <param>
          <type>const <ref refid="classwx_tree_item_id" kindref="compound">wxTreeItemId</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <param>
          <type>int</type>
          <declname>image</declname>
        </param>
        <param>
          <type><ref refid="treebase_8h_1a61d3d0f9fa2ce703a3cb216f617dd964" kindref="member">wxTreeItemIcon</ref></type>
          <declname>which</declname>
          <defval><ref refid="treebase_8h_1a61d3d0f9fa2ce703a3cb216f617dd964ae7af51423ccd60119ad2ae3f158f0c19" kindref="member">wxTreeItemIcon_Normal</ref></defval>
        </param>
        <briefdescription>
<para>Sets the specified item&apos;s image. </para>        </briefdescription>
        <detaileddescription>
<para>See <ref refid="classwx_tree_ctrl_1ae00ada910349feb228cf2ca0ce0f201c" kindref="member">GetItemImage()</ref> for the description of the <emphasis>which</emphasis> parameter. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="900" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1a8424e24cb8d4ceedffd11f5bc6218038" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTreeCtrl::SetItemState</definition>
        <argsstring>(const wxTreeItemId &amp;item, int state)</argsstring>
        <name>SetItemState</name>
        <param>
          <type>const <ref refid="classwx_tree_item_id" kindref="compound">wxTreeItemId</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <param>
          <type>int</type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Sets the specified item state. </para>        </briefdescription>
        <detaileddescription>
<para>The value of <emphasis>state</emphasis> may be:<itemizedlist>
<listitem><para><computeroutput>wxTREE_ITEMSTATE_NONE:</computeroutput> to disable the item state (the state image will be not displayed).</para></listitem><listitem><para><computeroutput>wxTREE_ITEMSTATE_NEXT:</computeroutput> to set the next item state.</para></listitem><listitem><para><computeroutput>wxTREE_ITEMSTATE_PREV:</computeroutput> to set the previous item state. </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="910" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1aab82b6353f72d0f06c6e65a6924a1df1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxTreeCtrl::SetItemText</definition>
        <argsstring>(const wxTreeItemId &amp;item, const wxString &amp;text)</argsstring>
        <name>SetItemText</name>
        <param>
          <type>const <ref refid="classwx_tree_item_id" kindref="compound">wxTreeItemId</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>text</declname>
        </param>
        <briefdescription>
<para>Sets the item label. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="915" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1a319b4ca62f34f0a4377f4ec77cb92974" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxTreeCtrl::SetItemTextColour</definition>
        <argsstring>(const wxTreeItemId &amp;item, const wxColour &amp;col)</argsstring>
        <name>SetItemTextColour</name>
        <param>
          <type>const <ref refid="classwx_tree_item_id" kindref="compound">wxTreeItemId</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_colour" kindref="compound">wxColour</ref> &amp;</type>
          <declname>col</declname>
        </param>
        <briefdescription>
<para>Sets the colour of the item&apos;s text. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="920" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1a54a5d1e4cd35b5c693d0d701a04ff358" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTreeCtrl::SetQuickBestSize</definition>
        <argsstring>(bool quickBestSize)</argsstring>
        <name>SetQuickBestSize</name>
        <param>
          <type>bool</type>
          <declname>quickBestSize</declname>
        </param>
        <briefdescription>
<para>If true is passed, specifies that the control will use a quick calculation for the best size, looking only at the first and last items. </para>        </briefdescription>
        <detaileddescription>
<para>Otherwise, it will look at all items. The default is false.</para><para><simplesect kind="see"><para><ref refid="classwx_tree_ctrl_1a1b9c71340e324aa106f8cde522cb2a33" kindref="member">GetQuickBestSize()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="930" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1aabb789a3eaa97608659e50afbd7a46ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxTreeCtrl::SetStateImageList</definition>
        <argsstring>(wxImageList *imageList)</argsstring>
        <name>SetStateImageList</name>
        <param>
          <type><ref refid="classwx_image_list" kindref="compound">wxImageList</ref> *</type>
          <declname>imageList</declname>
        </param>
        <briefdescription>
<para>Sets the state image list (from which application-defined state images are taken). </para>        </briefdescription>
        <detaileddescription>
<para>Image list assigned with this method will <bold>not</bold> be deleted by <ref refid="classwx_tree_ctrl" kindref="compound">wxTreeCtrl</ref>&apos;s destructor, you must delete it yourself.</para><para><simplesect kind="see"><para><ref refid="classwx_tree_ctrl_1a6f42485bcb6ff7445862b08b78f01f33" kindref="member">AssignStateImageList()</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="940" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1a00974d17198e3883bfe4cca9d7ab52ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTreeCtrl::SetWindowStyle</definition>
        <argsstring>(long styles)</argsstring>
        <name>SetWindowStyle</name>
        <param>
          <type>long</type>
          <declname>styles</declname>
        </param>
        <briefdescription>
<para>Sets the mode flags associated with the display of the tree control. </para>        </briefdescription>
        <detaileddescription>
<para>The new mode takes effect immediately.</para><para><simplesect kind="note"><para>Generic only; MSW ignores changes. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="948" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1aa59a3c3081b78ffe644fee0a4bcd1ca3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxTreeCtrl::SortChildren</definition>
        <argsstring>(const wxTreeItemId &amp;item)</argsstring>
        <name>SortChildren</name>
        <param>
          <type>const <ref refid="classwx_tree_item_id" kindref="compound">wxTreeItemId</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Sorts the children of the given item using <ref refid="classwx_tree_ctrl_1ab90a465793c291ca7aa827a576b7d146" kindref="member">OnCompareItems()</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>You should override that method to change the sort order (the default is ascending case-sensitive alphabetical order).</para><para><simplesect kind="see"><para><ref refid="classwx_tree_item_data" kindref="compound">wxTreeItemData</ref>, <ref refid="classwx_tree_ctrl_1ab90a465793c291ca7aa827a576b7d146" kindref="member">OnCompareItems()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="957" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1a618a620d9a434bacf91a51202ab807b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxTreeCtrl::Toggle</definition>
        <argsstring>(const wxTreeItemId &amp;item)</argsstring>
        <name>Toggle</name>
        <param>
          <type>const <ref refid="classwx_tree_item_id" kindref="compound">wxTreeItemId</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Toggles the given item between collapsed and expanded states. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="962" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1a458eab144e16efbaf283748bacc475f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTreeCtrl::ToggleItemSelection</definition>
        <argsstring>(const wxTreeItemId &amp;item)</argsstring>
        <name>ToggleItemSelection</name>
        <param>
          <type>const <ref refid="classwx_tree_item_id" kindref="compound">wxTreeItemId</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Toggles the given item between selected and unselected states. </para>        </briefdescription>
        <detaileddescription>
<para>For multiselection controls only. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="968" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1a86a5a649501f02a635ce193afb9d9f0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxTreeCtrl::Unselect</definition>
        <argsstring>()</argsstring>
        <name>Unselect</name>
        <briefdescription>
<para>Removes the selection from the currently selected item (if any). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="973" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1afc7bb2bb77f3589abdca5b4c1d99094d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxTreeCtrl::UnselectAll</definition>
        <argsstring>()</argsstring>
        <name>UnselectAll</name>
        <briefdescription>
<para>This function either behaves the same as <ref refid="classwx_tree_ctrl_1a86a5a649501f02a635ce193afb9d9f0f" kindref="member">Unselect()</ref> if the control doesn&apos;t have <computeroutput>wxTR_MULTIPLE</computeroutput> style, or removes the selection from all items if it does have this style. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="980" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1ad5eb938fd64cd961a2e50a90211974ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTreeCtrl::UnselectItem</definition>
        <argsstring>(const wxTreeItemId &amp;item)</argsstring>
        <name>UnselectItem</name>
        <param>
          <type>const <ref refid="classwx_tree_item_id" kindref="compound">wxTreeItemId</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Unselects the given item. </para>        </briefdescription>
        <detaileddescription>
<para>This works in multiselection controls only. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="985" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_tree_ctrl_1a3d43ef6217902a3a8f4c774de6be13ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxTreeCtrl::SelectChildren</definition>
        <argsstring>(const wxTreeItemId &amp;parent)</argsstring>
        <name>SelectChildren</name>
        <param>
          <type>const <ref refid="classwx_tree_item_id" kindref="compound">wxTreeItemId</ref> &amp;</type>
          <declname>parent</declname>
        </param>
        <briefdescription>
<para>Select all the immediate children of the given parent. </para>        </briefdescription>
        <detaileddescription>
<para>This function can be used with multiselection controls only.</para><para><simplesect kind="since"><para>2.9.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/treectrl.h" line="994" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A tree control presents information as a hierarchy, with items that may be expanded to show further items. </para>    </briefdescription>
    <detaileddescription>
<para>Items in a tree control are referenced by <ref refid="classwx_tree_item_id" kindref="compound">wxTreeItemId</ref> handles, which may be tested for validity by calling <ref refid="classwx_tree_item_id_1a56c80ce39762069bf2194bcf4bb7e941" kindref="member">wxTreeItemId::IsOk()</ref>.</para><para>A similar control with a fully native implementation for GTK+ and OS X as well is <ref refid="classwx_data_view_tree_ctrl" kindref="compound">wxDataViewTreeCtrl</ref>.</para><para>To intercept events from a tree control, use the event table macros described in <ref refid="classwx_tree_event" kindref="compound">wxTreeEvent</ref>.</para><para><linebreak/>
<heading level="2">Styles</heading>
</para><para>This class supports the following styles:</para><para> <itemizedlist>
<listitem><para>wxTR_EDIT_LABELS: Use this style if you wish the user to be able to edit labels in the tree control. </para></listitem>
<listitem><para>wxTR_NO_BUTTONS: For convenience to document that no buttons are to be drawn. </para></listitem>
<listitem><para>wxTR_HAS_BUTTONS: Use this style to show + and - buttons to the left of parent items. </para></listitem>
<listitem><para>wxTR_TWIST_BUTTONS: Selects alternative style of <computeroutput>+/<computeroutput>-</computeroutput> buttons</computeroutput> and shows rotating (&quot;twisting&quot;) arrows instead. Currently this style is only implemented under Microsoft Windows Vista and later Windows versions and is ignored under the other platforms. Notice that under Vista this style results in the same appearance as used by the tree control in Explorer and other built-in programs and so using it may be preferable to the default style. </para></listitem>
<listitem><para>wxTR_NO_LINES: Use this style to hide vertical level connectors. </para></listitem>
<listitem><para>wxTR_FULL_ROW_HIGHLIGHT: Use this style to have the background colour and the selection highlight extend over the entire horizontal row of the tree control window. (This flag is ignored under Windows unless you specify <computeroutput>wxTR_NO_LINES</computeroutput> as well.) </para></listitem>
<listitem><para>wxTR_LINES_AT_ROOT: Use this style to show lines between root nodes. Only applicable if <computeroutput>wxTR_HIDE_ROOT</computeroutput> is set and <computeroutput>wxTR_NO_LINES</computeroutput> is not set. </para></listitem>
<listitem><para>wxTR_HIDE_ROOT: Use this style to suppress the display of the root node, effectively causing the first-level nodes to appear as a series of root nodes. </para></listitem>
<listitem><para>wxTR_ROW_LINES: Use this style to draw a contrasting border between displayed rows. </para></listitem>
<listitem><para>wxTR_HAS_VARIABLE_ROW_HEIGHT: Use this style to cause row heights to be just big enough to fit the content. If not set, all rows use the largest row height. The default is that this flag is unset. Generic only. </para></listitem>
<listitem><para>wxTR_SINGLE: For convenience to document that only one item may be selected at a time. Selecting another item causes the current selection, if any, to be deselected. This is the default. </para></listitem>
<listitem><para>wxTR_MULTIPLE: Use this style to allow a range of items to be selected. If a second range is selected, the current range, if any, is deselected. </para></listitem>
<listitem><para>wxTR_DEFAULT_STYLE: The set of flags that are closest to the defaults for the native control for a particular toolkit. <linebreak/>
 <linebreak/>
<heading level="2">Events emitted by this class</heading>
</para></listitem>
</itemizedlist>
</para><para>The following event handler macros redirect the events to member function handlers &apos;<bold>func</bold>&apos; with prototypes like: void<nonbreakablespace/>handlerFuncName(<ref refid="classwx_tree_event" kindref="compound">wxTreeEvent</ref>&amp;<nonbreakablespace/>event)</para><para>Event macros for events emitted by this class: <itemizedlist>
<listitem><para>EVT_TREE_BEGIN_DRAG(id,  func): Begin dragging with the left mouse button. If you want to enable left-dragging you need to intercept this event and explicitly call <ref refid="classwx_notify_event_1a7b23515f827b2ce1da1e6990d9aafe80" kindref="member">wxTreeEvent::Allow()</ref>, as it&apos;s vetoed by default. Processes a <computeroutput>wxEVT_TREE_BEGIN_DRAG</computeroutput> event type. </para></listitem>
<listitem><para>EVT_TREE_BEGIN_RDRAG(id,  func): Begin dragging with the right mouse button. If you want to enable right-dragging you need to intercept this event and explicitly call <ref refid="classwx_notify_event_1a7b23515f827b2ce1da1e6990d9aafe80" kindref="member">wxTreeEvent::Allow()</ref>, as it&apos;s vetoed by default. Processes a <computeroutput>wxEVT_TREE_BEGIN_RDRAG</computeroutput> event type. </para></listitem>
<listitem><para>EVT_TREE_END_DRAG(id,  func): End dragging with the left or right mouse button. Processes a <computeroutput>wxEVT_TREE_END_DRAG</computeroutput> event type. </para></listitem>
<listitem><para>EVT_TREE_BEGIN_LABEL_EDIT(id,  func): Begin editing a label. This can be prevented by calling Veto(). Processes a <computeroutput>wxEVT_TREE_BEGIN_LABEL_EDIT</computeroutput> event type. </para></listitem>
<listitem><para>EVT_TREE_END_LABEL_EDIT(id,  func): Finish editing a label. This can be prevented by calling Veto(). Processes a <computeroutput>wxEVT_TREE_END_LABEL_EDIT</computeroutput> event type. </para></listitem>
<listitem><para>EVT_TREE_DELETE_ITEM(id,  func): An item was deleted. Processes a <computeroutput>wxEVT_TREE_DELETE_ITEM</computeroutput> event type. </para></listitem>
<listitem><para>EVT_TREE_GET_INFO(id,  func): Request information from the application. Processes a <computeroutput>wxEVT_TREE_GET_INFO</computeroutput> event type. </para></listitem>
<listitem><para>EVT_TREE_SET_INFO(id,  func): Information is being supplied. Processes a <computeroutput>wxEVT_TREE_SET_INFO</computeroutput> event type. </para></listitem>
<listitem><para>EVT_TREE_ITEM_ACTIVATED(id,  func): The item has been activated, i.e. chosen by double clicking it with mouse or from keyboard. Processes a <computeroutput>wxEVT_TREE_ITEM_ACTIVATED</computeroutput> event type. </para></listitem>
<listitem><para>EVT_TREE_ITEM_COLLAPSED(id,  func): The item has been collapsed. Processes a <computeroutput>wxEVT_TREE_ITEM_COLLAPSED</computeroutput> event type. </para></listitem>
<listitem><para>EVT_TREE_ITEM_COLLAPSING(id,  func): The item is being collapsed. This can be prevented by calling Veto(). Processes a <computeroutput>wxEVT_TREE_ITEM_COLLAPSING</computeroutput> event type. </para></listitem>
<listitem><para>EVT_TREE_ITEM_EXPANDED(id,  func): The item has been expanded. Processes a <computeroutput>wxEVT_TREE_ITEM_EXPANDED</computeroutput> event type. </para></listitem>
<listitem><para>EVT_TREE_ITEM_EXPANDING(id,  func): The item is being expanded. This can be prevented by calling Veto(). Processes a <computeroutput>wxEVT_TREE_ITEM_EXPANDING</computeroutput> event type. </para></listitem>
<listitem><para>EVT_TREE_ITEM_RIGHT_CLICK(id,  func): The user has clicked the item with the right mouse button. Processes a <computeroutput>wxEVT_TREE_ITEM_RIGHT_CLICK</computeroutput> event type. </para></listitem>
<listitem><para>EVT_TREE_ITEM_MIDDLE_CLICK(id,  func): The user has clicked the item with the middle mouse button. This is only supported by the generic control. Processes a <computeroutput>wxEVT_TREE_ITEM_MIDDLE_CLICK</computeroutput> event type. </para></listitem>
<listitem><para>EVT_TREE_SEL_CHANGED(id,  func): Selection has changed. Processes a <computeroutput>wxEVT_TREE_SEL_CHANGED</computeroutput> event type. </para></listitem>
<listitem><para>EVT_TREE_SEL_CHANGING(id,  func): Selection is changing. This can be prevented by calling Veto(). Processes a <computeroutput>wxEVT_TREE_SEL_CHANGING</computeroutput> event type. </para></listitem>
<listitem><para>EVT_TREE_KEY_DOWN(id,  func): A key has been pressed. Processes a <computeroutput>wxEVT_TREE_KEY_DOWN</computeroutput> event type. </para></listitem>
<listitem><para>EVT_TREE_ITEM_GETTOOLTIP(id,  func): The opportunity to set the item tooltip is being given to the application (call <ref refid="classwx_tree_event_1aa7e87d07fb9292ee3d72b857485bf342" kindref="member">wxTreeEvent::SetToolTip</ref>). Windows only. Processes a <computeroutput>wxEVT_TREE_ITEM_GETTOOLTIP</computeroutput> event type. </para></listitem>
<listitem><para>EVT_TREE_ITEM_MENU(id,  func): The context menu for the selected item has been requested, either by a right click or by using the menu key. Processes a <computeroutput>wxEVT_TREE_ITEM_MENU</computeroutput> event type. </para></listitem>
<listitem><para>EVT_TREE_STATE_IMAGE_CLICK(id,  func): The state image has been clicked. Processes a <computeroutput>wxEVT_TREE_STATE_IMAGE_CLICK</computeroutput> event type. <linebreak/>
</para></listitem>
</itemizedlist>
See also <ref refid="overview_windowstyles" kindref="compound">Window Styles</ref>.</para><para><bold>Win32</bold> <bold>notes:</bold> </para><para><ref refid="classwx_tree_ctrl" kindref="compound">wxTreeCtrl</ref> class uses the standard common treeview control under Win32 implemented in the system library comctl32.dll. Some versions of this library are known to have bugs with handling the tree control colours: the usual symptom is that the expanded items leave black (or otherwise incorrectly coloured) background behind them, especially for the controls using non-default background colour. The recommended solution is to upgrade the comctl32.dll to a newer version: see <ulink url="http://www.microsoft.com/downloads/details.aspx?familyid=cb2cf3a2-8025-4e8f-8511-9b476a8d35d2">http://www.microsoft.com/downloads/details.aspx?familyid=cb2cf3a2-8025-4e8f-8511-9b476a8d35d2</ulink></para><para><heading level="2"></heading>
</para><para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxcore" kindref="member">wxCore</ref> &lt;&gt;&lt; =&apos;&apos;&gt;:&lt;/&gt;&amp;;&amp;;&lt; =&apos;&apos;&gt;\ &lt;/&gt;&lt;/&gt; <linebreak/>
<image type="html" name="appear-treectrl-msw.png">wxMSW Appearance</image>
<linebreak/>
<linebreak/>
<image type="html" name="appear-treectrl-gtk.png">wxGTK Appearance</image>
<linebreak/>
<linebreak/>
<image type="html" name="appear-treectrl-mac.png">wxOSX Appearance</image>
<linebreak/>
</para><para><simplesect kind="see"><para><ref refid="classwx_data_view_tree_ctrl" kindref="compound">wxDataViewTreeCtrl</ref>, <ref refid="classwx_tree_event" kindref="compound">wxTreeEvent</ref>, <ref refid="classwx_tree_item_data" kindref="compound">wxTreeItemData</ref>, <ref refid="overview_treectrl" kindref="compound">wxTreeCtrl Overview</ref>, <ref refid="classwx_list_box" kindref="compound">wxListBox</ref>, <ref refid="classwx_list_ctrl" kindref="compound">wxListCtrl</ref>, <ref refid="classwx_image_list" kindref="compound">wxImageList</ref> </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="8314">
        <label>wxTreeCtrl</label>
        <link refid="classwx_tree_ctrl"/>
        <childnode refid="8315" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8318">
        <label>wxObject</label>
        <link refid="classwx_object"/>
      </node>
      <node id="8317">
        <label>wxEvtHandler</label>
        <link refid="classwx_evt_handler"/>
        <childnode refid="8318" relation="public-inheritance">
        </childnode>
        <childnode refid="8319" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8319">
        <label>wxTrackable</label>
        <link refid="classwx_trackable"/>
      </node>
      <node id="8315">
        <label>wxControl</label>
        <link refid="classwx_control"/>
        <childnode refid="8316" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8316">
        <label>wxWindow</label>
        <link refid="classwx_window"/>
        <childnode refid="8317" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="8320">
        <label>wxTreeCtrl</label>
        <link refid="classwx_tree_ctrl"/>
        <childnode refid="8321" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8324">
        <label>wxObject</label>
        <link refid="classwx_object"/>
        <childnode refid="8325" relation="usage">
          <edgelabel>m_refData</edgelabel>
        </childnode>
      </node>
      <node id="8323">
        <label>wxEvtHandler</label>
        <link refid="classwx_evt_handler"/>
        <childnode refid="8324" relation="public-inheritance">
        </childnode>
        <childnode refid="8326" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8326">
        <label>wxTrackable</label>
        <link refid="classwx_trackable"/>
      </node>
      <node id="8321">
        <label>wxControl</label>
        <link refid="classwx_control"/>
        <childnode refid="8322" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8322">
        <label>wxWindow</label>
        <link refid="classwx_window"/>
        <childnode refid="8323" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8325">
        <label>wxObjectRefData</label>
        <link refid="classwx_object_ref_data"/>
      </node>
    </collaborationgraph>
    <location file="interface/wx/treectrl.h" line="166" column="1" bodyfile="interface/wx/treectrl.h" bodystart="165" bodyend="995"/>
    <listofallmembers>
      <member refid="classwx_window_1a1da8baa734b9872d0c085b86a7b5d817" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>AcceptsFocus</name></member>
      <member refid="classwx_window_1a3a0cb3bd5e82462b19df9f24ad6d9ac4" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>AcceptsFocusFromKeyboard</name></member>
      <member refid="classwx_window_1af0c30b930ecf57f94b8cfc8871e8fd94" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>AcceptsFocusRecursively</name></member>
      <member refid="classwx_window_1abf60159278059a5bb397eb8647227bb3" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>AddChild</name></member>
      <member refid="classwx_evt_handler_1a7dc3c701781f4044372049de5004137e" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>AddFilter</name></member>
      <member refid="classwx_window_1a774b5b5548a6258727b5e2099e63ae9a" prot="protected" virt="virtual"><scope>wxTreeCtrl</scope><name>AddPendingEvent</name></member>
      <member refid="classwx_tree_ctrl_1a1fa4eecee7fca8ea6d69903be8e6c285" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>AddRoot</name></member>
      <member refid="classwx_window_1a71d1daa71f1ad1f6cbaac54db7e71af3" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>AdjustForLayoutDirection</name></member>
      <member refid="classwx_object_1a60204063f3cc3aa2fa1c7ff5bda9eb13" prot="protected" virt="non-virtual"><scope>wxTreeCtrl</scope><name>AllocExclusive</name></member>
      <member refid="classwx_window_1aae29552806a328c6a55ef8f07647f5ba" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>AlwaysShowScrollbars</name></member>
      <member refid="classwx_tree_ctrl_1a0a798a2a06f21bcb5bef2c4b4b7cc3a5" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>AppendItem</name></member>
      <member refid="classwx_tree_ctrl_1a2a24d50d475f0c487a9162f477f6e69e" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>AssignButtonsImageList</name></member>
      <member refid="classwx_tree_ctrl_1a29e4021e0f110909a17517b476dfb58b" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>AssignImageList</name></member>
      <member refid="classwx_tree_ctrl_1a6f42485bcb6ff7445862b08b78f01f33" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>AssignStateImageList</name></member>
      <member refid="classwx_window_1ab4cea6ace96193b5c4282e097a6fbfee" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>BeginRepositioningChildren</name></member>
      <member refid="classwx_evt_handler_1a0f30c8fa5583b4a5f661897d63de3b62" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>Bind</name></member>
      <member refid="classwx_evt_handler_1a03cc68ca201fb79c7e837919025be71a" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>Bind</name></member>
      <member refid="classwx_window_1a11b5d8d94efd0ab52eb2c95a6aa88cdf" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>CacheBestSize</name></member>
      <member refid="classwx_evt_handler_1a63c7351618fd77330d80a250b3719519" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>CallAfter</name></member>
      <member refid="classwx_evt_handler_1a910416e4d0b1f38cec02213b8a0c6a12" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>CallAfter</name></member>
      <member refid="classwx_window_1acc4e456ed056a27ec61cd296b96c1e3e" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>CanAcceptFocus</name></member>
      <member refid="classwx_window_1ade15bb13dc6d51a8e6ecd49eb3f0f99b" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>CanAcceptFocusFromKeyboard</name></member>
      <member refid="classwx_window_1a6b5bbd3bf890f98897187879152ad97a" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>CanScroll</name></member>
      <member refid="classwx_window_1a64f7f6fb75bf4b7281e1d33542d523c7" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>CanSetTransparent</name></member>
      <member refid="classwx_window_1a5c72c6260a73ef77bb0b1f7ec85fcfef" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>CaptureMouse</name></member>
      <member refid="classwx_window_1a06c0ecb262995b40083bfb446a6cff99" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>Center</name></member>
      <member refid="classwx_window_1a2dc4e0a85d33fc55cc9650eaea1da0a4" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>CenterOnParent</name></member>
      <member refid="classwx_window_1a4a1819eeee3f2143cdde4f329ffde787" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>Centre</name></member>
      <member refid="classwx_window_1ab8e9b91b0e2db344fd71259616dfd433" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>CentreOnParent</name></member>
      <member refid="classwx_window_1a61e833684ee5c89775e91e88be1a9a52" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>ClearBackground</name></member>
      <member refid="classwx_tree_ctrl_1a37114ccd8ab49b27991ccba2b786672a" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>ClearFocusedItem</name></member>
      <member refid="classwx_window_1af5e852c8695297c0328f1dfe3908605a" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>ClientToScreen</name></member>
      <member refid="classwx_window_1add6f5472d0d8fe0074145a886568721c" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>ClientToScreen</name></member>
      <member refid="classwx_window_1a5c72ca7de40d4e99aff55e79aad3962e" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>ClientToWindowSize</name></member>
      <member refid="classwx_object_1a436fc8fe68cf8a31000296d9cd3d2427" prot="protected" virt="virtual"><scope>wxTreeCtrl</scope><name>CloneRefData</name></member>
      <member refid="classwx_window_1a3e44f4a494fc9ef4346c4fba70c8de0c" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>Close</name></member>
      <member refid="classwx_tree_ctrl_1a6be5e621a37cd9a82e68eed0a083c211" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>Collapse</name></member>
      <member refid="classwx_tree_ctrl_1a954bf5a6b748ac7b7b60ee18156467db" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>CollapseAll</name></member>
      <member refid="classwx_tree_ctrl_1aeef3170b6bb0fc53b79351183bd595d2" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>CollapseAllChildren</name></member>
      <member refid="classwx_tree_ctrl_1a15b56333132fbcdb6ade6590adf0ad1c" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>CollapseAndReset</name></member>
      <member refid="classwx_control_1a8cd7ac81debaf506d6d146528c3d9a82" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>Command</name></member>
      <member refid="classwx_evt_handler_1a78719e8b82c9f9c6e4056b3449df1943" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>Connect</name></member>
      <member refid="classwx_evt_handler_1a1e8b5fc4c7e7f6d32d40bc00d4108ba4" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>Connect</name></member>
      <member refid="classwx_evt_handler_1aa290d9b67348e74c1da8497955a4e35c" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>Connect</name></member>
      <member refid="classwx_window_1a3dbe034120d742c4f5f6d64dc5d69590" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>ConvertDialogToPixels</name></member>
      <member refid="classwx_window_1ad70d63964459bb21f81bc0b1f09e84f4" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>ConvertDialogToPixels</name></member>
      <member refid="classwx_window_1a321de67666eff37b39556802c8029201" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>ConvertPixelsToDialog</name></member>
      <member refid="classwx_window_1a533552c4673c7a11f05bf9261b4dff5c" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>ConvertPixelsToDialog</name></member>
      <member refid="classwx_tree_ctrl_1adf40716643252f78e72fcb95dbd347ae" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>Create</name></member>
      <member refid="classwx_window_1a95b7ca8faa033f5ab35458887c07bf38" prot="public" virt="non-virtual" ambiguityscope="wxWindow::"><scope>wxTreeCtrl</scope><name>Create</name></member>
      <member refid="classwx_object_1a3f4f497c65cef611e121c41f21dd5ccc" prot="protected" virt="virtual"><scope>wxTreeCtrl</scope><name>CreateRefData</name></member>
      <member refid="classwx_tree_ctrl_1a53a2292e2b7b6c13ba3e2d542d8bc1d2" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>Delete</name></member>
      <member refid="classwx_tree_ctrl_1a76de2019d0fcc73f4c302dff5d392c66" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>DeleteAllItems</name></member>
      <member refid="classwx_tree_ctrl_1a56b91fbfa520892a23b546432c4428b6" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>DeleteChildren</name></member>
      <member refid="classwx_evt_handler_1a6e7f9cf4ebd0623c1d94979855d096f8" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>DeletePendingEvents</name></member>
      <member refid="classwx_window_1a6bf0c5be864544d9ce0560087667b7fc" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>Destroy</name></member>
      <member refid="classwx_window_1aff47b32c8d42d515ea0bb6a6c2fea917" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>DestroyChildren</name></member>
      <member refid="classwx_window_1a26d7329a9a753fa0445501f01f66c41e" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>Disable</name></member>
      <member refid="classwx_evt_handler_1a13061cf0ed01ac10a804ac057ef4bdbc" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>Disconnect</name></member>
      <member refid="classwx_evt_handler_1a2f171e19444b9c4034c5e11f24fa9c91" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>Disconnect</name></member>
      <member refid="classwx_evt_handler_1a16a6f823853e4b74b43dd9a2cf3abee6" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>Disconnect</name></member>
      <member refid="classwx_window_1a2d10b472a4962d1c852c83d55252c44b" prot="protected" virt="virtual"><scope>wxTreeCtrl</scope><name>DoCentre</name></member>
      <member refid="classwx_window_1ae07ab0b5cabb750f4e396b6c95e4abf7" prot="protected" virt="virtual"><scope>wxTreeCtrl</scope><name>DoGetBestClientHeight</name></member>
      <member refid="classwx_window_1a68f3ec28a29b2a514b20c3e80255d82e" prot="protected" virt="virtual"><scope>wxTreeCtrl</scope><name>DoGetBestClientSize</name></member>
      <member refid="classwx_window_1ac68cb9912dc456e2faa8c745b2437b75" prot="protected" virt="virtual"><scope>wxTreeCtrl</scope><name>DoGetBestClientWidth</name></member>
      <member refid="classwx_window_1aac6408f1814dce3f8332cc69fe5104f1" prot="protected" virt="virtual"><scope>wxTreeCtrl</scope><name>DoGetBestSize</name></member>
      <member refid="classwx_window_1ae8a84a80645e99f4d24a22e5c386f626" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>DoUpdateWindowUI</name></member>
      <member refid="classwx_window_1a7e7015bc61bd79b6821d2dccaecf9eda" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>DragAcceptFiles</name></member>
      <member refid="classwx_tree_ctrl_1a08d88a76e02f59001766bc90e20016b7" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>EditLabel</name></member>
      <member refid="classwx_control_1a0bb834cae2a8986aceddb89f84ef4ed1" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>Ellipsize</name></member>
      <member refid="classwx_window_1a4e933aa891f42fbb3b87438057c573af" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>Enable</name></member>
      <member refid="classwx_tree_ctrl_1ac6e1b3f9c7fa6dcbd001b4807ec6cff2" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>EnableBellOnNoMatch</name></member>
      <member refid="classwx_tree_ctrl_1a548331161e0b9f620a4663d84ec642b2" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>EndEditLabel</name></member>
      <member refid="classwx_window_1a1203fbd238d781253b44e0e459532301" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>EndRepositioningChildren</name></member>
      <member refid="classwx_tree_ctrl_1a6440663f2dcf7652635ec7347d023f83" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>EnsureVisible</name></member>
      <member refid="classwx_control_1abdbd9c0684856546671e759dd95b23d4" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>EscapeMnemonics</name></member>
      <member refid="classwx_tree_ctrl_1a36e5c8826d223336df5b807700f4bded" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>Expand</name></member>
      <member refid="classwx_tree_ctrl_1a8767f4e10e5fb007a77701e27d3927e3" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>ExpandAll</name></member>
      <member refid="classwx_tree_ctrl_1a41b109ce1f196c2ed77a7f1c3dc3e7ff" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>ExpandAllChildren</name></member>
      <member refid="classwx_window_1a777258379a3eef1b0530f12db6b77cab" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>FindFocus</name></member>
      <member refid="classwx_window_1a619b5743645b86054aa3fff12ba4c7ce" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>FindWindow</name></member>
      <member refid="classwx_window_1a3b2f2c9b6346bdb3dcba0edfd9a7f224" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>FindWindow</name></member>
      <member refid="classwx_window_1a101201b12ccd5fba49fa06ed19b5c6fb" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>FindWindowById</name></member>
      <member refid="classwx_window_1ab8eb148fffae109e0fac86e88d569670" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>FindWindowByLabel</name></member>
      <member refid="classwx_window_1adbe4eea02f615313c12a2c00557a44c3" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>FindWindowByName</name></member>
      <member refid="classwx_window_1a2bf38a6cbd1f82fb46f274396f482994" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>Fit</name></member>
      <member refid="classwx_window_1a55aca401aab29d59f7cc53f89ba2e38d" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>FitInside</name></member>
      <member refid="classwx_window_1a15c678314cfc1d807196bc298b713ed3" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>Freeze</name></member>
      <member refid="classwx_window_1aefc02d7275010ebb8d5b66569e7287c4" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>GetAcceleratorTable</name></member>
      <member refid="classwx_window_1ae0469b554e9c501b356b3ed4b6d8a3af" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>GetAccessible</name></member>
      <member refid="classwx_window_1a64e3f936ab812d24966827ea4e0f15c0" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>GetAutoLayout</name></member>
      <member refid="classwx_window_1af51668ec32e9e44db45574a15ec215b4" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>GetBackgroundColour</name></member>
      <member refid="classwx_window_1a4f09e6a20858a0667df3dda44715d6b9" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>GetBackgroundStyle</name></member>
      <member refid="classwx_window_1a9ec151255cbb44935136d9bbff31a082" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>GetBestHeight</name></member>
      <member refid="classwx_window_1ae507a81d682023383e465d8e913595b6" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>GetBestSize</name></member>
      <member refid="classwx_window_1a1e4b09c35c0e5495905da45c1580709d" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>GetBestVirtualSize</name></member>
      <member refid="classwx_window_1a5c797a38418a6f2fb79f800112ec73b0" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>GetBestWidth</name></member>
      <member refid="classwx_window_1a42908ba076f2a93ee81201dc151c3b23" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>GetBorder</name></member>
      <member refid="classwx_window_1a94e3a0ce6c1aae57562678996adbf2fd" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>GetBorder</name></member>
      <member refid="classwx_tree_ctrl_1af4419b412f1791c5ef2388a0f52b9f13" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>GetBoundingRect</name></member>
      <member refid="classwx_tree_ctrl_1a737d84319645601722c16217f1e07b5f" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>GetButtonsImageList</name></member>
      <member refid="classwx_window_1a483d3f73925bd38c3964dad058672f0a" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>GetCapture</name></member>
      <member refid="classwx_window_1a2ee3eba6dbfb37944ed0ce03383bfc34" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>GetCaret</name></member>
      <member refid="classwx_window_1aa488520238094f858bea3c3a2c6b9809" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>GetCharHeight</name></member>
      <member refid="classwx_window_1a8f92c15635a44b85392d16f5906c31ef" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>GetCharWidth</name></member>
      <member refid="classwx_window_1ad500085ad0511879b5e018706c91a494" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>GetChildren</name></member>
      <member refid="classwx_window_1afcd1cf1f16e375d00b8d0885997adc90" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>GetChildren</name></member>
      <member refid="classwx_tree_ctrl_1a696bd8930cfabfd60cbbd89ef0e5732b" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>GetChildrenCount</name></member>
      <member refid="classwx_window_1a170d85e4aa0cbacbfcdd0728120e1417" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>GetClassDefaultAttributes</name></member>
      <member refid="classwx_object_1ae6d365f2556b26767ced8410c5e839d0" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>GetClassInfo</name></member>
      <member refid="classwx_window_1a4a1b567002d1039bc630885fc09808ae" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>GetClientAreaOrigin</name></member>
      <member refid="classwx_evt_handler_1a291bc92c1bea8abfff276a8e333d46db" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>GetClientData</name></member>
      <member refid="classwx_evt_handler_1a371742bda1686e82065f3a1f2acb31c8" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>GetClientObject</name></member>
      <member refid="classwx_window_1a5c6428c6aa8634b5c5963d1d0eaa75c7" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>GetClientRect</name></member>
      <member refid="classwx_window_1ad34d4bbd6d3064aa56e7a2cc3ee97be3" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>GetClientSize</name></member>
      <member refid="classwx_window_1a13d04f24ab78611f895bc40776118e90" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>GetClientSize</name></member>
      <member refid="classwx_window_1ade068146db3eea2adcde2533de17473b" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>GetConstraints</name></member>
      <member refid="classwx_window_1aec50a3057efbfb35ad16f433603f6f00" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>GetContainingSizer</name></member>
      <member refid="classwx_window_1a7070700104b0f739260a8d803c64e0e1" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>GetContentScaleFactor</name></member>
      <member refid="classwx_tree_ctrl_1a0e8464d26adaa134598397eee2015e82" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>GetCount</name></member>
      <member refid="classwx_window_1aa467591bdb0ae14a625045553e62a120" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>GetCursor</name></member>
      <member refid="classwx_window_1a377de92ac032b60a9241fab88efdbf11" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>GetDefaultAttributes</name></member>
      <member refid="classwx_window_1ae4bec3096f7e13eec8a537aa24cd6112" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>GetDropTarget</name></member>
      <member refid="classwx_tree_ctrl_1a3e032a0e1ceec8b56bee6eaceb71004a" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>GetEditControl</name></member>
      <member refid="classwx_window_1aa88f6c4946d1ae4821aca652efbf7c62" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>GetEffectiveMinSize</name></member>
      <member refid="classwx_window_1ad54b0c1662006da89d7e5bf8a64f93eb" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>GetEventHandler</name></member>
      <member refid="classwx_evt_handler_1a7742d81c5eb7849a0ad75b9de8575153" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>GetEvtHandlerEnabled</name></member>
      <member refid="classwx_window_1a0db5cd18ab5166b44da9d07f92bb5070" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>GetExtraStyle</name></member>
      <member refid="classwx_tree_ctrl_1a30546111962c66cc761b3ec717738e8a" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>GetFirstChild</name></member>
      <member refid="classwx_tree_ctrl_1a5f9168352fcb511c803c7bd158997300" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>GetFirstVisibleItem</name></member>
      <member refid="classwx_tree_ctrl_1ab65e39216b3e02e4e94345391ca8eba8" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>GetFocusedItem</name></member>
      <member refid="classwx_window_1af25f8a799106d61b50d3ee796ba43728" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>GetFont</name></member>
      <member refid="classwx_window_1ad9a607b86d9175d395f245ecbe00f38b" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>GetForegroundColour</name></member>
      <member refid="classwx_window_1abe0d47e5d63394b098bdad64eb1a60d2" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>GetGrandParent</name></member>
      <member refid="classwx_window_1a108426e918ac377fef17662885a7a459" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>GetHandle</name></member>
      <member refid="classwx_window_1acb28971fe25abd1f5c6d768e203a042a" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>GetHelpText</name></member>
      <member refid="classwx_window_1a7d11a419fede5049d7c12c337e5f5dfc" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>GetHelpTextAtPoint</name></member>
      <member refid="classwx_window_1a79037f68b290bba5811628ec67bf3b24" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>GetId</name></member>
      <member refid="classwx_tree_ctrl_1a958be0c36e2f30683bb8066c0540dcdc" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>GetImageList</name></member>
      <member refid="classwx_tree_ctrl_1a450408747bde58d6cb6f2f18832be747" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>GetIndent</name></member>
      <member refid="classwx_tree_ctrl_1a0d9004aa9a61e38f4802b26e135a7380" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>GetItemBackgroundColour</name></member>
      <member refid="classwx_tree_ctrl_1ab75146a9a4592a689b43b9f286512083" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>GetItemData</name></member>
      <member refid="classwx_tree_ctrl_1a2bf7a0ad3f935de5da95559a5bc1b21e" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>GetItemFont</name></member>
      <member refid="classwx_tree_ctrl_1ae00ada910349feb228cf2ca0ce0f201c" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>GetItemImage</name></member>
      <member refid="classwx_tree_ctrl_1af76c5a2dab0092624cd9082ea810f38c" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>GetItemParent</name></member>
      <member refid="classwx_tree_ctrl_1a0f15135b810cf28cdda9ea35d2f2ef74" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>GetItemState</name></member>
      <member refid="classwx_tree_ctrl_1a3666ef743b222e4abfd28b51c9232928" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>GetItemText</name></member>
      <member refid="classwx_tree_ctrl_1a6fe94ddffcaaaa44c9ded45394b633f2" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>GetItemTextColour</name></member>
      <member refid="classwx_control_1a9d03cd7f44c4bb1722f39fbc7a5d8cbd" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>GetLabel</name></member>
      <member refid="classwx_control_1a4ec6a7ee61553cd1df77d50491cee820" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>GetLabelText</name></member>
      <member refid="classwx_control_1ae892fefe6b88168c158e11e975633665" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>GetLabelText</name></member>
      <member refid="classwx_tree_ctrl_1ae0fc3ef235c7f97eac0271c587e09231" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>GetLastChild</name></member>
      <member refid="classwx_window_1afafd17cbb5dd6d899b25360255e0bdae" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>GetLayoutDirection</name></member>
      <member refid="classwx_window_1a6690ee82a5a246e070bf0a7dc4bcb5b3" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>GetMaxClientSize</name></member>
      <member refid="classwx_window_1a98bbe53eddb91b508b0082783402d954" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>GetMaxHeight</name></member>
      <member refid="classwx_window_1a107966aa1b2d50107b3b95cf0d7d9901" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>GetMaxSize</name></member>
      <member refid="classwx_window_1afde7288b24e48f2d0b5d2c7376f10426" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>GetMaxWidth</name></member>
      <member refid="classwx_window_1a24d22aacd834cbe6cd5b252fa91c3bd9" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>GetMinClientSize</name></member>
      <member refid="classwx_window_1a81bfd762272d33850c0511d65d896ca3" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>GetMinHeight</name></member>
      <member refid="classwx_window_1a90ce6ffc8e0af7476157c9e1e6b616df" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>GetMinSize</name></member>
      <member refid="classwx_window_1a327e1a8054d604a34cc5473a8c415e4d" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>GetMinWidth</name></member>
      <member refid="classwx_window_1a93b9ec7d9eaf152c17f3bf2698551ef4" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>GetName</name></member>
      <member refid="classwx_tree_ctrl_1ac8b1a72cd624b3e93228af4242488856" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>GetNextChild</name></member>
      <member refid="classwx_evt_handler_1addedbed1c9f970c2b1e2893a42805b6a" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>GetNextHandler</name></member>
      <member refid="classwx_tree_ctrl_1a05e302a9ff2af6ef7ae1ef18f2624194" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>GetNextSibling</name></member>
      <member refid="classwx_window_1ad256ad684063935d897956a87c932b38" prot="public" virt="non-virtual" ambiguityscope="wxControl::"><scope>wxTreeCtrl</scope><name>GetNextSibling</name></member>
      <member refid="classwx_tree_ctrl_1a3d48b36dbae179429073016df1336c6c" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>GetNextVisible</name></member>
      <member refid="classwx_window_1a6cd311a6c6ca7329714b969834f679f9" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>GetParent</name></member>
      <member refid="classwx_window_1a9b7de6ea85ca926b668ba0682a61a93e" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>GetPopupMenuSelectionFromUser</name></member>
      <member refid="classwx_window_1a00f5cb3cac003205317a565a33d4bb27" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>GetPopupMenuSelectionFromUser</name></member>
      <member refid="classwx_window_1ac2eece00a4b4b83e1433b59a5d31584f" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>GetPosition</name></member>
      <member refid="classwx_window_1abfeeca6db664c24603f6371811397e0d" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>GetPosition</name></member>
      <member refid="classwx_evt_handler_1a69bfde9623d89eb91e363c53616e4587" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>GetPreviousHandler</name></member>
      <member refid="classwx_tree_ctrl_1a5b66e8d79ef9aa2ee5c1fba3bd2d619a" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>GetPrevSibling</name></member>
      <member refid="classwx_window_1a02b3a109f926c86fa1f34a00c1b5ec67" prot="public" virt="non-virtual" ambiguityscope="wxControl::"><scope>wxTreeCtrl</scope><name>GetPrevSibling</name></member>
      <member refid="classwx_tree_ctrl_1a2dc88b8c9abeaa4cdc9ae95619006b87" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>GetPrevVisible</name></member>
      <member refid="classwx_tree_ctrl_1a1b9c71340e324aa106f8cde522cb2a33" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>GetQuickBestSize</name></member>
      <member refid="classwx_window_1a68e83a724887b18525fdbd947b2d8c88" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>GetRect</name></member>
      <member refid="classwx_object_1af3c6c76a775864832f1536d3c0de3a2b" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>GetRefData</name></member>
      <member refid="classwx_tree_ctrl_1ab5d7ec551901a78a79888106c580ab79" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>GetRootItem</name></member>
      <member refid="classwx_window_1a285a81f00ed59fa09938343708938566" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>GetScreenPosition</name></member>
      <member refid="classwx_window_1a5786c420fd2958bde726c923621700aa" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>GetScreenPosition</name></member>
      <member refid="classwx_window_1ae8f6c4a201650ad63bb5ebe4f35eb41e" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>GetScreenRect</name></member>
      <member refid="classwx_window_1add5f4e225e16154f9148451a7d32d0b3" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>GetScrollPos</name></member>
      <member refid="classwx_window_1a23b41cf939ab67a002d8f404ac4cf76b" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>GetScrollRange</name></member>
      <member refid="classwx_window_1ac34f47fef73e3a178e8c335aa38ce567" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>GetScrollThumb</name></member>
      <member refid="classwx_tree_ctrl_1a70a03f43aed60956d1fd63d2eb72ae2e" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>GetSelection</name></member>
      <member refid="classwx_tree_ctrl_1a5d243137947e75cc3ef73e07bc183137" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>GetSelections</name></member>
      <member refid="classwx_window_1a36ea282508dd55d6f3981ec205ed0449" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>GetSize</name></member>
      <member refid="classwx_window_1a36bf1ac809da1b0cd9c67fd806c4d9b5" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>GetSize</name></member>
      <member refid="classwx_control_1a252c7408d6dfa8d70e8dbe88cea9695d" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>GetSizeFromTextSize</name></member>
      <member refid="classwx_control_1a4d9169af074418aa3528f7b5fca61f94" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>GetSizeFromTextSize</name></member>
      <member refid="classwx_window_1a01e9d43576615166ee309f4358bdd26d" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>GetSizer</name></member>
      <member refid="classwx_tree_ctrl_1a6fb4379854d91af60a0df6d6664cf8cc" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>GetStateImageList</name></member>
      <member refid="classwx_window_1a4220668e42f3a173bf29d335da4db2c3" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>GetTextExtent</name></member>
      <member refid="classwx_window_1a69fc79069821a633eba9c5d917fd8b7b" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>GetTextExtent</name></member>
      <member refid="classwx_window_1a578145344f92cfee755a9c87f6703432" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>GetThemeEnabled</name></member>
      <member refid="classwx_window_1a44eecb46979b528c184e26ce6c52b3fa" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>GetToolTip</name></member>
      <member refid="classwx_window_1a7e7c9a92f9efbb47073704646db1344e" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>GetToolTipText</name></member>
      <member refid="classwx_window_1a23370688a951ed60ac25146af854d2ec" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>GetUpdateClientRect</name></member>
      <member refid="classwx_window_1a522f73fd32e54b11466284acc43f76f3" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>GetUpdateRegion</name></member>
      <member refid="classwx_window_1a6a332586346cb9ece4a8fe058a7b88c4" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>GetValidator</name></member>
      <member refid="classwx_window_1a557f92e6c66b6654c95315d4461d0e11" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>GetVirtualSize</name></member>
      <member refid="classwx_window_1a24cefbb69173899ec4d62460b2932ed9" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>GetVirtualSize</name></member>
      <member refid="classwx_window_1a21c97d5bcf61c4c664bd33066f5567b1" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>GetWindowBorderSize</name></member>
      <member refid="classwx_window_1a418007123fec131b47d9841ac6d34891" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>GetWindowStyle</name></member>
      <member refid="classwx_window_1ad67a731cd937a21e561593d4a0c44979" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>GetWindowStyleFlag</name></member>
      <member refid="classwx_window_1a9027305e391de617259407f2c12a54bf" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>GetWindowVariant</name></member>
      <member refid="classwx_window_1a89d1b079de97aac170e999692095872c" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>HandleAsNavigationKey</name></member>
      <member refid="classwx_window_1a89816f1b78c125c59418463caea35c9a" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>HandleWindowEvent</name></member>
      <member refid="classwx_window_1a41e1b77ac82c7420d34b8030d5f26046" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>HasCapture</name></member>
      <member refid="classwx_window_1aeee5333e672a3a510db48d2af37ddee9" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>HasExtraStyle</name></member>
      <member refid="classwx_window_1a3d1d00b4cd51fa3c187e9d609d022aa4" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>HasFlag</name></member>
      <member refid="classwx_window_1adaf042744bdbb8a5f9feccbe7749468a" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>HasFocus</name></member>
      <member refid="classwx_window_1a55c7b73596f2eec2694e8f512013ee81" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>HasMultiplePages</name></member>
      <member refid="classwx_window_1ae50c259b165d9366729734bc124cf184" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>HasScrollbar</name></member>
      <member refid="classwx_window_1ab9cbcb6d6f4a272c2f0342e69a13b59a" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>HasTransparentBackground</name></member>
      <member refid="classwx_window_1a7ed103df04014cb3c59c6a3fb4d95328" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>Hide</name></member>
      <member refid="classwx_window_1a5326fbb26557a224507a1c06e5640e89" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>HideWithEffect</name></member>
      <member refid="classwx_tree_ctrl_1ab76927cdfbd23296e4817a200dc7aee7" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>HitTest</name></member>
      <member refid="classwx_window_1ae8705e241daca73105921b72326258b5" prot="public" virt="non-virtual" ambiguityscope="wxControl::"><scope>wxTreeCtrl</scope><name>HitTest</name></member>
      <member refid="classwx_window_1ace65f76df096662bd15722d10c1905c9" prot="public" virt="non-virtual" ambiguityscope="wxControl::"><scope>wxTreeCtrl</scope><name>HitTest</name></member>
      <member refid="classwx_window_1a9fd5b6520c1b30eb8e82bb5d56bc24c0" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>InformFirstDirection</name></member>
      <member refid="classwx_window_1a6b1bf9e099704e7a493b8c4666b1f7f7" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>InheritAttributes</name></member>
      <member refid="classwx_window_1af05b95cfeed0bee6f44797572367b26e" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>InheritsBackgroundColour</name></member>
      <member refid="classwx_window_1aa90a260c0a835a133043460b7d0024a8" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>InitDialog</name></member>
      <member refid="classwx_tree_ctrl_1a06e1e6b25a7121922412eea510bd3109" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>InsertItem</name></member>
      <member refid="classwx_tree_ctrl_1a52e7baec34632a75ce8060695cfa976a" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>InsertItem</name></member>
      <member refid="classwx_window_1ae1b56ca87d8590ee5e576012229a380a" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>InvalidateBestSize</name></member>
      <member refid="classwx_window_1a5fd3fba5d43efb67a834c0483a9c3d0e" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>IsBeingDeleted</name></member>
      <member refid="classwx_tree_ctrl_1a08877c0319a358bb02e37543a61c7fe8" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>IsBold</name></member>
      <member refid="classwx_window_1ab7f60a0c4acdd832a46aabf0d09cd54a" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>IsDescendant</name></member>
      <member refid="classwx_window_1abe7a8c61796262b517f5e0765374cc2b" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>IsDoubleBuffered</name></member>
      <member refid="classwx_tree_ctrl_1a1ee6c7fe6489c47e44f962d050626b9e" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>IsEmpty</name></member>
      <member refid="classwx_window_1a0c186513884fb2020c6af3c62f0913d2" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>IsEnabled</name></member>
      <member refid="classwx_tree_ctrl_1a4143652eab75a62965e9896f1dfcadbc" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>IsExpanded</name></member>
      <member refid="classwx_window_1a687120c4b7095481bbc6d483187d0c56" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>IsExposed</name></member>
      <member refid="classwx_window_1afde1844b856787b95afbb686aaaa206d" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>IsExposed</name></member>
      <member refid="classwx_window_1a3017e9cdde376d567ee37b2a96913eca" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>IsExposed</name></member>
      <member refid="classwx_window_1ac4653d89376b9e88afbec8c342d32530" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>IsExposed</name></member>
      <member refid="classwx_window_1ad78eb073c4fe8271caa4c65301a24ee2" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>IsFocusable</name></member>
      <member refid="classwx_window_1adf34f121a9a94fd7159a8818355f2b67" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>IsFrozen</name></member>
      <member refid="classwx_object_1a3c7115ef4132dcee0c4fc34e84d7fced" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>IsKindOf</name></member>
      <member refid="classwx_window_1a77443cb35d15b5006b96a8c5ea0944f6" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>IsRetained</name></member>
      <member refid="classwx_object_1a059373c494c2369d7db2a556efef8ecf" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>IsSameAs</name></member>
      <member refid="classwx_window_1abf4f5068ebf648197ed9ca8ca58f38df" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>IsScrollbarAlwaysShown</name></member>
      <member refid="classwx_tree_ctrl_1a72beea097880e83337bf0784104264e3" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>IsSelected</name></member>
      <member refid="classwx_window_1ad3544f9c364b7952ac0676217e400061" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>IsShown</name></member>
      <member refid="classwx_window_1ac2722709783e89e76b2eeb7f9f93236a" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>IsShownOnScreen</name></member>
      <member refid="classwx_window_1a1c6a83e5421bb7cfb8a9ad804d251b65" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>IsThisEnabled</name></member>
      <member refid="classwx_window_1afe04dba2155b58429d6c4e0a5a5e1664" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>IsTopLevel</name></member>
      <member refid="classwx_window_1a21c6e2be327062520d9d0aae55b1e8b0" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>IsTransparentBackgroundSupported</name></member>
      <member refid="classwx_evt_handler_1ac0734578a8d929b8b0be440ce0b53ad6" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>IsUnlinked</name></member>
      <member refid="classwx_tree_ctrl_1a29724d678d683786a1f3f2ac8f160291" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>IsVisible</name></member>
      <member refid="classwx_tree_ctrl_1ab1881d51d96807f1ea775dc8f9f4390d" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>ItemHasChildren</name></member>
      <member refid="classwx_window_1a1b143c3e72bd0af533b76db4830a6113" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>Layout</name></member>
      <member refid="classwx_window_1ade808784f0e64d9985e2f279b5ca8c02" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>LineDown</name></member>
      <member refid="classwx_window_1afc0816a174ceee6d36d1995c6824a273" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>LineUp</name></member>
      <member refid="classwx_window_1a124944524f36b71385dad8fddaad8ded" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>Lower</name></member>
      <member refid="classwx_object_1a9e31954530a0abd54982effc443ed2b8" prot="protected" virt="non-virtual"><scope>wxTreeCtrl</scope><name>m_refData</name></member>
      <member refid="classwx_window_1ab1cb98c8d25b9e6ff7b706b1446c3df7" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>Move</name></member>
      <member refid="classwx_window_1a22a22c1e23ca05776707e7999d8047fe" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>Move</name></member>
      <member refid="classwx_window_1a79e66079125e8420de269811bdb6f2b6" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>MoveAfterInTabOrder</name></member>
      <member refid="classwx_window_1af2b92f61cd9f9e2e0efe4cce307e25b1" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>MoveBeforeInTabOrder</name></member>
      <member refid="classwx_window_1a86904f6785df4af6036b33383490a805" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>Navigate</name></member>
      <member refid="classwx_window_1aa58039c8fc65e19160becf510ee1d1d5" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>NavigateIn</name></member>
      <member refid="classwx_window_1a8175da594e6045635a1d1cfe775cdddb" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>NewControlId</name></member>
      <member refid="classwx_tree_ctrl_1ab90a465793c291ca7aa827a576b7d146" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>OnCompareItems</name></member>
      <member refid="classwx_window_1a6b5654c0c6c6245d592c279521f7099c" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>OnInternalIdle</name></member>
      <member refid="classwx_object_1a07b8f34f5afc5743195c5fed052f55d3" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>operator delete</name></member>
      <member refid="classwx_object_1a96fa423a1dbc212c8227a5d83825971f" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>operator new</name></member>
      <member refid="classwx_window_1a61e78cb48ece3e9e989e37b475ac1e35" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>PageDown</name></member>
      <member refid="classwx_window_1aa7c2bbc480d8863d9f139c01d7abc1b1" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>PageUp</name></member>
      <member refid="classwx_window_1ac45c1f4cf96c70779764c14cf528790b" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>PopEventHandler</name></member>
      <member refid="classwx_window_1a8f715d238cf74a845488b0e2645e98df" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>PopupMenu</name></member>
      <member refid="classwx_window_1a834bcdfd41f5e5370ebd9ea401c92900" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>PopupMenu</name></member>
      <member refid="classwx_window_1ab1943463e6661f97e072b43337c6cc09" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>PostSizeEvent</name></member>
      <member refid="classwx_window_1aa080d8dcda58bcc6ea2abd8bea592e3e" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>PostSizeEventToParent</name></member>
      <member refid="classwx_tree_ctrl_1ab7ec4164ca8eb1675646f0c16b681566" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>PrependItem</name></member>
      <member refid="classwx_window_1a5ebdbd87c28644149a07f1742996df96" prot="protected" virt="virtual"><scope>wxTreeCtrl</scope><name>ProcessEvent</name></member>
      <member refid="classwx_evt_handler_1ac0f5d2cb29a04c1f7f82eb6b351f79fb" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>ProcessEventLocally</name></member>
      <member refid="classwx_window_1a7cbee38944dab02d753a4dba74230443" prot="protected" virt="non-virtual"><scope>wxTreeCtrl</scope><name>ProcessPendingEvents</name></member>
      <member refid="classwx_window_1a9350b3a9c2e380707eaea92cedad12a5" prot="protected" virt="non-virtual"><scope>wxTreeCtrl</scope><name>ProcessThreadEvent</name></member>
      <member refid="classwx_window_1a0a76891d726ad5f9a729e27e4eab2b57" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>ProcessWindowEvent</name></member>
      <member refid="classwx_window_1a0a11aa4a50491d051f947e2618e52178" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>ProcessWindowEventLocally</name></member>
      <member refid="classwx_window_1a398c11ab9af7956067a964f560d1978c" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>PushEventHandler</name></member>
      <member refid="classwx_window_1a69e450f21b0d7013269ec1a4771f043b" prot="protected" virt="virtual"><scope>wxTreeCtrl</scope><name>QueueEvent</name></member>
      <member refid="classwx_window_1a54808c933f22a891c5db646f6209fa4d" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>Raise</name></member>
      <member refid="classwx_object_1a2f6f1aa51fe9fc2b1415ca4211a90e9e" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>Ref</name></member>
      <member refid="classwx_window_1a29dc7251746154c821b17841b9877830" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>Refresh</name></member>
      <member refid="classwx_window_1ab0ae6b9898cd261c39ebeb2891aa3d67" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>RefreshRect</name></member>
      <member refid="classwx_window_1a53ca57872dac5851ea6ba55a494b899b" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>RegisterHotKey</name></member>
      <member refid="classwx_window_1adcc538819c11ecb3bd3e4e5d13c5ba7a" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>ReleaseMouse</name></member>
      <member refid="classwx_window_1acee332ed4368d26e8bc3db5767c1240a" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>RemoveChild</name></member>
      <member refid="classwx_window_1aacbfe424fa527966b954229a1db96ab5" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>RemoveEventHandler</name></member>
      <member refid="classwx_evt_handler_1a67a57b759c447b121bf70a7c9804c8f2" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>RemoveFilter</name></member>
      <member refid="classwx_control_1ab7df4ca0dfde3a6409833cf470ee02e6" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>RemoveMnemonics</name></member>
      <member refid="classwx_window_1a7977b749284e65aecfed2ce146799cb9" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>Reparent</name></member>
      <member refid="classwx_window_1a0f9814efc50316b4c57b7ec2bf78b716" prot="protected" virt="non-virtual"><scope>wxTreeCtrl</scope><name>SafelyProcessEvent</name></member>
      <member refid="classwx_window_1a09aca554d41d6e771d3dc72f26b9cacc" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>ScreenToClient</name></member>
      <member refid="classwx_window_1a5f4dab599fda780823841bb2fe5f2f99" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>ScreenToClient</name></member>
      <member refid="classwx_window_1aa5c5b683bd11a0d9771bd2fcdf643c64" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>ScrollLines</name></member>
      <member refid="classwx_window_1adc0ed5e1c4925223cb901ced14b8343d" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>ScrollPages</name></member>
      <member refid="classwx_tree_ctrl_1a5448656d47293d10348971c56aba61ab" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>ScrollTo</name></member>
      <member refid="classwx_window_1ab7be4956ff22da37fff2b8aaa581045c" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>ScrollWindow</name></member>
      <member refid="classwx_evt_handler_1a3c07426130d2868a5ae7fa918a251f49" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>SearchEventTable</name></member>
      <member refid="classwx_tree_ctrl_1a3d43ef6217902a3a8f4c774de6be13ef" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>SelectChildren</name></member>
      <member refid="classwx_tree_ctrl_1ab6ed9a6e7c3d101ec51a496ef71b422e" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>SelectItem</name></member>
      <member refid="classwx_window_1a7e21eb6a0819281b29134a6432d064fe" prot="protected" virt="non-virtual"><scope>wxTreeCtrl</scope><name>SendDestroyEvent</name></member>
      <member refid="classwx_window_1a1afc1653413957537073c074dcc3eade" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>SendIdleEvents</name></member>
      <member refid="classwx_window_1a237f739b21937d3e8f1bff5fa82ba4c2" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>SendSizeEvent</name></member>
      <member refid="classwx_window_1af7987987978fd8a93df88b29b19a6388" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>SendSizeEventToParent</name></member>
      <member refid="classwx_window_1a0af5e9aa4dee6a4e92c0700f92605642" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>SetAcceleratorTable</name></member>
      <member refid="classwx_window_1a413220ead41f05a2ec2cfe10b3d573df" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>SetAccessible</name></member>
      <member refid="classwx_window_1ad369fe1db5c20f9d9edff7b5eb1f7226" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>SetAutoLayout</name></member>
      <member refid="classwx_window_1a37219df52734626e23401fd83b25d8a0" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>SetBackgroundColour</name></member>
      <member refid="classwx_window_1af14f8fd2ed2d30a9bbb5d4f9fd6594ec" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>SetBackgroundStyle</name></member>
      <member refid="classwx_tree_ctrl_1aa8ce6bdc82a7966d1cba0fdf5a79f6d0" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>SetButtonsImageList</name></member>
      <member refid="classwx_window_1a2b8b2e99231a0ec1a05f5066f1b7f3d8" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>SetCanFocus</name></member>
      <member refid="classwx_window_1acfef5e1cada92c73e2937b84ff57ff57" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>SetCaret</name></member>
      <member refid="classwx_evt_handler_1a82c74f2cebfa02cb3c1563d459c872bf" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>SetClientData</name></member>
      <member refid="classwx_evt_handler_1af1e33a06087b8b2ddc43c7d15a91b326" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>SetClientObject</name></member>
      <member refid="classwx_window_1aa59f715217fffa5bcf14cd97f92e7840" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>SetClientSize</name></member>
      <member refid="classwx_window_1ab2aadc857ee7f55f47ab9a8669e3beb7" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>SetClientSize</name></member>
      <member refid="classwx_window_1a582d4d1f60a3f777627773b2da0bb2ef" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>SetClientSize</name></member>
      <member refid="classwx_window_1afa75d111bbd9a68f837101a5fbed60a7" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>SetConstraints</name></member>
      <member refid="classwx_window_1a0ccf78fe06722b500adfb7f36b8ce443" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>SetContainingSizer</name></member>
      <member refid="classwx_window_1ad83f9c51c6f31e0e05f598b47a19ed98" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>SetCursor</name></member>
      <member refid="classwx_window_1a5477a89c17fdcc3ec6c90274796eb1c3" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>SetDoubleBuffered</name></member>
      <member refid="classwx_window_1ae34b4d45433ca8287df0e47d46411e58" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>SetDropTarget</name></member>
      <member refid="classwx_window_1af6c84b7679183b377ba27a52a2f708b4" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>SetEventHandler</name></member>
      <member refid="classwx_evt_handler_1a7388ae19c8657e5656471b658c320036" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>SetEvtHandlerEnabled</name></member>
      <member refid="classwx_window_1ae9655f7c35ce7ac89cac2f6c0054b103" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>SetExtraStyle</name></member>
      <member refid="classwx_window_1a697f9f8d3ff389790f1c74b59bcb1d75" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>SetFocus</name></member>
      <member refid="classwx_tree_ctrl_1a37890d9d52a21c58342560906b658f1c" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>SetFocusedItem</name></member>
      <member refid="classwx_window_1a6fa03f82d7917dff482754d0d2e2b1c8" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>SetFocusFromKbd</name></member>
      <member refid="classwx_window_1a9ab11e7da57a1d08918aa75fc33f6ad3" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>SetFont</name></member>
      <member refid="classwx_window_1a69f1e1c7ddd370d72e68c70f13ac8de9" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>SetForegroundColour</name></member>
      <member refid="classwx_window_1a4c1a2cbc7363237b3a7c70af4e702c72" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>SetHelpText</name></member>
      <member refid="classwx_window_1a7f27d0faed14effa013381bdc40e1bcd" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>SetId</name></member>
      <member refid="classwx_tree_ctrl_1a8bc83d1a7145d681fa512e6b43cede45" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>SetImageList</name></member>
      <member refid="classwx_tree_ctrl_1a1db2c8ef0b28483515a2585a0312dc43" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>SetIndent</name></member>
      <member refid="classwx_window_1ae6dfe0b0d4a8c666b21ce8df8d96727b" prot="protected" virt="virtual"><scope>wxTreeCtrl</scope><name>SetInitialBestSize</name></member>
      <member refid="classwx_window_1a1b309ca50ba87e34f968c83b79af1397" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>SetInitialSize</name></member>
      <member refid="classwx_tree_ctrl_1ae55f83069faef927b8d4a4d3e45daae6" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>SetItemBackgroundColour</name></member>
      <member refid="classwx_tree_ctrl_1a52744e373d5405e384928eab5fb9c991" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>SetItemBold</name></member>
      <member refid="classwx_tree_ctrl_1adb74a81b41ab25bd38884311bb4b3b46" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>SetItemData</name></member>
      <member refid="classwx_tree_ctrl_1a03fd2789f5bdb6c645b381739772c673" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>SetItemDropHighlight</name></member>
      <member refid="classwx_tree_ctrl_1ae8283e7314d164b7a69056fa182d2386" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>SetItemFont</name></member>
      <member refid="classwx_tree_ctrl_1a26211b6424ab2b4108311a2b733eb7e5" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>SetItemHasChildren</name></member>
      <member refid="classwx_tree_ctrl_1aab11b22f08ca5dd75919d8cbf3e902ff" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>SetItemImage</name></member>
      <member refid="classwx_tree_ctrl_1a8424e24cb8d4ceedffd11f5bc6218038" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>SetItemState</name></member>
      <member refid="classwx_tree_ctrl_1aab82b6353f72d0f06c6e65a6924a1df1" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>SetItemText</name></member>
      <member refid="classwx_tree_ctrl_1a319b4ca62f34f0a4377f4ec77cb92974" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>SetItemTextColour</name></member>
      <member refid="classwx_control_1a2c2ae20554e7db5e765f163022ce09c0" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>SetLabel</name></member>
      <member refid="classwx_control_1afeb308dc3b54d8d735b33cb250395503" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>SetLabelMarkup</name></member>
      <member refid="classwx_control_1ae092899c3fe658831a9c796755a65eb7" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>SetLabelText</name></member>
      <member refid="classwx_window_1a7d494549f7fcfed44af95f8ee364c1f9" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>SetLayoutDirection</name></member>
      <member refid="classwx_window_1a664e5b2ddd817d9c58788269fe1d8479" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>SetMaxClientSize</name></member>
      <member refid="classwx_window_1a38b496214d728a3212afadee5ed51606" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>SetMaxSize</name></member>
      <member refid="classwx_window_1a6e35ba44b97e374dfffa460d41d94b31" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>SetMinClientSize</name></member>
      <member refid="classwx_window_1a3fc066f4d8083319f004ac43811d545d" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>SetMinSize</name></member>
      <member refid="classwx_window_1af80875cda5e1af98dcd7c8e712e3c800" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>SetName</name></member>
      <member refid="classwx_window_1aeab905f61df7004c1b76a3351dca9e96" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>SetNextHandler</name></member>
      <member refid="classwx_window_1a9a3f9d8477aab1d9176cd66ee56e75d9" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>SetOwnBackgroundColour</name></member>
      <member refid="classwx_window_1a89a4f62f23c1e7c845b8d07cecae4c43" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>SetOwnFont</name></member>
      <member refid="classwx_window_1a53f4a878e4e2d440bd00543f8014aaaa" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>SetOwnForegroundColour</name></member>
      <member refid="classwx_window_1aee57358435d6bd33f598c81354b47425" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>SetPalette</name></member>
      <member refid="classwx_window_1a81f23590239934fa10fded0566a65d8c" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>SetPosition</name></member>
      <member refid="classwx_window_1a07f5f7ed3f78e0ef7b3dee3f4da81001" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>SetPreviousHandler</name></member>
      <member refid="classwx_tree_ctrl_1a54a5d1e4cd35b5c693d0d701a04ff358" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>SetQuickBestSize</name></member>
      <member refid="classwx_object_1afab780710f2adc1bb33310e27590140b" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>SetRefData</name></member>
      <member refid="classwx_window_1aa842d59529f873683e55cd8392ec46e9" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>SetScrollbar</name></member>
      <member refid="classwx_window_1afbf4dc9064cf70cfe6884554b97a27bf" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>SetScrollPos</name></member>
      <member refid="classwx_window_1a180312d5ad4a4a5ad805b8d52d67a74e" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>SetSize</name></member>
      <member refid="classwx_window_1a8e383bc6d5ca008965922a36c676aea0" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>SetSize</name></member>
      <member refid="classwx_window_1a030a928cd854de3def97c5720f14695b" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>SetSize</name></member>
      <member refid="classwx_window_1a2ea9b25296d591aea4470c8fd99ff7cb" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>SetSize</name></member>
      <member refid="classwx_window_1a307329dc3b10f5584aeb2cbce9293ffd" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>SetSizeHints</name></member>
      <member refid="classwx_window_1ae813c640e1e2bc6014423247050846cf" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>SetSizeHints</name></member>
      <member refid="classwx_window_1abc95691b45e29a52c24aa9d33d46dec1" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>SetSizer</name></member>
      <member refid="classwx_window_1a29938af9828fd35da666536cdfb6b73c" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>SetSizerAndFit</name></member>
      <member refid="classwx_tree_ctrl_1aabb789a3eaa97608659e50afbd7a46ff" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>SetStateImageList</name></member>
      <member refid="classwx_window_1a41dd19ed8809fd8ec662e2aa2a9579c3" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>SetThemeEnabled</name></member>
      <member refid="classwx_window_1a81a9fb74e3c6c7f4416e882f5e589b8c" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>SetToolTip</name></member>
      <member refid="classwx_window_1a494e0b7cfca9299caa40e847767e7357" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>SetToolTip</name></member>
      <member refid="classwx_window_1ac8cf4398cec50ac36634760f45a0656f" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>SetTransparent</name></member>
      <member refid="classwx_window_1a00066c70049a7be3ce6b648d206e6432" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>SetValidator</name></member>
      <member refid="classwx_window_1a37f293b7904bc6668b86cccb0aea5669" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>SetVirtualSize</name></member>
      <member refid="classwx_window_1a8e95201edebe43b9623bd3bdc555af4d" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>SetVirtualSize</name></member>
      <member refid="classwx_tree_ctrl_1a00974d17198e3883bfe4cca9d7ab52ba" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>SetWindowStyle</name></member>
      <member refid="classwx_window_1aee2cf342f80523432e7f2299d299451b" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>SetWindowStyleFlag</name></member>
      <member refid="classwx_window_1acd955418c336e73b3e32cadf1ca46e29" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>SetWindowVariant</name></member>
      <member refid="classwx_window_1aa51b169745cda1746c1a45b4ffe3217a" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>ShouldInheritColours</name></member>
      <member refid="classwx_window_1a7fbc92ce240a8d4f6956b6e0276ef07f" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>Show</name></member>
      <member refid="classwx_window_1a596b1715edfc7609f352b2e000ecbaec" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>ShowWithEffect</name></member>
      <member refid="classwx_tree_ctrl_1aa59a3c3081b78ffe644fee0a4bcd1ca3" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>SortChildren</name></member>
      <member refid="classwx_window_1a279a532124073261b28131b6afb59a1e" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>Thaw</name></member>
      <member refid="classwx_tree_ctrl_1a618a620d9a434bacf91a51202ab807b1" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>Toggle</name></member>
      <member refid="classwx_tree_ctrl_1a458eab144e16efbaf283748bacc475f7" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>ToggleItemSelection</name></member>
      <member refid="classwx_window_1a8a4fa47129de552bfec37db8c69688a2" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>ToggleWindowStyle</name></member>
      <member refid="classwx_window_1ab8e51f36e7d8790b361c8d8c6f37b1ad" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>TransferDataFromWindow</name></member>
      <member refid="classwx_window_1a88cc65e424a129d9b0057756cdb67ec9" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>TransferDataToWindow</name></member>
      <member refid="classwx_evt_handler_1a5e25fece1cb6cbc11fd1d41ec140319c" prot="protected" virt="virtual"><scope>wxTreeCtrl</scope><name>TryAfter</name></member>
      <member refid="classwx_evt_handler_1ad4b0eac704dd005ac6a88fdb1e673c13" prot="protected" virt="virtual"><scope>wxTreeCtrl</scope><name>TryBefore</name></member>
      <member refid="classwx_evt_handler_1a2b7df8272075a96daea78cdd799c00da" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>Unbind</name></member>
      <member refid="classwx_evt_handler_1aa49f9c4ad4462456b4fe4bd1ab53533d" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>Unbind</name></member>
      <member refid="classwx_evt_handler_1a22e5db2ec1d19c8252c056fd116975d7" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>Unlink</name></member>
      <member refid="classwx_object_1af51efc6b1ae632fc7f0cd7ebbce9fa36" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>UnRef</name></member>
      <member refid="classwx_window_1a695f60d65f8f6c12e3c3645ad9c0c35b" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>UnregisterHotKey</name></member>
      <member refid="classwx_window_1ad9bc342d1e38d221e37f0f6396950c8c" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>UnreserveControlId</name></member>
      <member refid="classwx_tree_ctrl_1a86a5a649501f02a635ce193afb9d9f0f" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>Unselect</name></member>
      <member refid="classwx_tree_ctrl_1afc7bb2bb77f3589abdca5b4c1d99094d" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>UnselectAll</name></member>
      <member refid="classwx_tree_ctrl_1ad5eb938fd64cd961a2e50a90211974ec" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>UnselectItem</name></member>
      <member refid="classwx_window_1ae75712451673658b0a533480bf5eeaa4" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>UnsetToolTip</name></member>
      <member refid="classwx_object_1a74b40e42d19a4b9e9bec0b57d62a5725" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>UnShare</name></member>
      <member refid="classwx_window_1abaf28f1a075fd1b10f761a8febe597ec" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>Update</name></member>
      <member refid="classwx_window_1adf0a4987728bd0bf69f922641b3efbfc" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>UpdateWindowUI</name></member>
      <member refid="classwx_window_1a9131e424ddc3b332a08377e5ad713c60" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>UseBgCol</name></member>
      <member refid="classwx_window_1ac87f253253a0c5eb498871c83afa40fd" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>Validate</name></member>
      <member refid="classwx_window_1ac500152d1eca3a2ee98a68e7ea7372b5" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>WarpPointer</name></member>
      <member refid="classwx_window_1a75e9c29023e441305574056cd5a725ff" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>WindowToClientSize</name></member>
      <member refid="classwx_control_1adb8f3edf807efa9159de826bf92d6a44" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>wxControl</name></member>
      <member refid="classwx_control_1a08428de2ba5cc988a86fe17071d49522" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>wxControl</name></member>
      <member refid="classwx_evt_handler_1a3f0166c4154227d05575b01eb2c8d4be" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>wxEvtHandler</name></member>
      <member refid="classwx_object_1acaa378363a28af421ab56ad7b46eadf0" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>wxObject</name></member>
      <member refid="classwx_object_1a4721b4dc9b7aff0f30904ba2ea3954cf" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>wxObject</name></member>
      <member refid="classwx_tree_ctrl_1ac4a07aa9c3ef92d6663ace3c20aa1576" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>wxTreeCtrl</name></member>
      <member refid="classwx_tree_ctrl_1a298f48e824d12a43539a018e2cc06999" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>wxTreeCtrl</name></member>
      <member refid="classwx_window_1a695200a4915b934926dcf32afa44544c" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>wxWindow</name></member>
      <member refid="classwx_window_1a7799009b10d1765d1bbb6db4994f922e" prot="public" virt="non-virtual"><scope>wxTreeCtrl</scope><name>wxWindow</name></member>
      <member refid="classwx_evt_handler_1a372d2239d91521eddc8fd2715fcab584" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>~wxEvtHandler</name></member>
      <member refid="classwx_object_1a2a51aa8bfbab47ca2f051bcf84b3f35b" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>~wxObject</name></member>
      <member refid="classwx_tree_ctrl_1aade1a015a27126fe19d21942740ee4bf" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>~wxTreeCtrl</name></member>
      <member refid="classwx_window_1a0c2a46181a89c349327f0b276f5ef8d7" prot="public" virt="virtual"><scope>wxTreeCtrl</scope><name>~wxWindow</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
