<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classwx_pixel_data" kind="class" language="C++" prot="public">
    <compoundname>wxPixelData</compoundname>
    <basecompoundref prot="public" virt="non-virtual">wxPixelDataOut::template wxPixelDataIn&lt; PixelFormat &gt;</basecompoundref>
    <includes local="no">wx/rawbmp.h</includes>
    <innerclass refid="classwx_pixel_data_1_1_iterator" prot="public">wxPixelData::Iterator</innerclass>
    <templateparamlist>
      <param>
        <type>class Image</type>
      </param>
      <param>
        <type>class PixelFormat</type>
        <defval>wxPixelFormatFor&lt;Image&gt;</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classwx_pixel_data_1a6757aaacf6f5103a7046707b26f0f406" prot="public" static="no">
        <type>Image</type>
        <definition>typedef Image wxPixelData&lt; Image, PixelFormat &gt;::ImageType</definition>
        <argsstring></argsstring>
        <name>ImageType</name>
        <briefdescription>
<para>The type of the class we&apos;re working with. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/rawbmp.h" line="78" column="1" bodyfile="interface/wx/rawbmp.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_pixel_data_1ad451c659eebc85b4d6062b0bf5adcb52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxPixelData&lt; Image, PixelFormat &gt;::wxPixelData</definition>
        <argsstring>(Image &amp;image)</argsstring>
        <name>wxPixelData</name>
        <param>
          <type>Image &amp;</type>
          <declname>image</declname>
        </param>
        <briefdescription>
<para>Create pixel data object representing the entire image. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/rawbmp.h" line="83" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_pixel_data_1abc868145e077e1aa6431e18392c3127a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxPixelData&lt; Image, PixelFormat &gt;::wxPixelData</definition>
        <argsstring>(Image &amp;i, const wxRect &amp;rect)</argsstring>
        <name>wxPixelData</name>
        <param>
          <type>Image &amp;</type>
          <declname>i</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_rect" kindref="compound">wxRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <briefdescription>
<para>Create pixel data object representing the area of the image defined by <emphasis>rect</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/rawbmp.h" line="90" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_pixel_data_1a068af31f567fa8b20397ab13ec4bf491" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxPixelData&lt; Image, PixelFormat &gt;::wxPixelData</definition>
        <argsstring>(Image &amp;i, const wxPoint &amp;pt, const wxSize &amp;sz)</argsstring>
        <name>wxPixelData</name>
        <param>
          <type>Image &amp;</type>
          <declname>i</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_point" kindref="compound">wxPoint</ref> &amp;</type>
          <declname>pt</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_size" kindref="compound">wxSize</ref> &amp;</type>
          <declname>sz</declname>
        </param>
        <briefdescription>
<para>Create pixel data object representing the area of the image defined by <emphasis>pt</emphasis> and <emphasis>sz</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/rawbmp.h" line="96" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_pixel_data_1ac0e54032cb8acec62c536eeb61b871ab" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxPixelData&lt; Image, PixelFormat &gt;::operator bool</definition>
        <argsstring>() const</argsstring>
        <name>operator bool</name>
        <briefdescription>
<para>Return true of if we could get access to bitmap data successfully. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/rawbmp.h" line="101" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_pixel_data_1aa33db23ebe439c8c5e130a6cf19632a0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_pixel_data_1_1_iterator" kindref="compound">Iterator</ref></type>
        <definition>Iterator wxPixelData&lt; Image, PixelFormat &gt;::GetPixels</definition>
        <argsstring>() const</argsstring>
        <name>GetPixels</name>
        <briefdescription>
<para>Return the iterator pointing to the origin of the image. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/rawbmp.h" line="106" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_pixel_data_1ad223a5f97093900a7920df78e745b979" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_point" kindref="compound">wxPoint</ref></type>
        <definition>wxPoint wxPixelData&lt; Image, PixelFormat &gt;::GetOrigin</definition>
        <argsstring>() const</argsstring>
        <name>GetOrigin</name>
        <briefdescription>
<para>Returns origin of the rectangular region this <ref refid="classwx_pixel_data" kindref="compound">wxPixelData</ref> represents. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/rawbmp.h" line="111" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_pixel_data_1aa40ebad0ee24524fd6100fbb5d4e83d0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxPixelData&lt; Image, PixelFormat &gt;::GetWidth</definition>
        <argsstring>() const</argsstring>
        <name>GetWidth</name>
        <briefdescription>
<para>Return width of the region this <ref refid="classwx_pixel_data" kindref="compound">wxPixelData</ref> represents. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/rawbmp.h" line="116" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_pixel_data_1a7cc4e3eee25ab616ebfcdc6f8b52bfd0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxPixelData&lt; Image, PixelFormat &gt;::GetHeight</definition>
        <argsstring>() const</argsstring>
        <name>GetHeight</name>
        <briefdescription>
<para>Return height of the region this <ref refid="classwx_pixel_data" kindref="compound">wxPixelData</ref> represents. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/rawbmp.h" line="121" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_pixel_data_1ab11a2ec08553877404dbafb9e1f706ac" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_size" kindref="compound">wxSize</ref></type>
        <definition>wxSize wxPixelData&lt; Image, PixelFormat &gt;::GetSize</definition>
        <argsstring>() const</argsstring>
        <name>GetSize</name>
        <briefdescription>
<para>Return the area which this <ref refid="classwx_pixel_data" kindref="compound">wxPixelData</ref> represents in the image. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/rawbmp.h" line="126" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_pixel_data_1aabbe0b683096a15e0e74db6d2e6e7855" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxPixelData&lt; Image, PixelFormat &gt;::GetRowStride</definition>
        <argsstring>() const</argsstring>
        <name>GetRowStride</name>
        <briefdescription>
<para>Return the distance between two rows. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/rawbmp.h" line="131" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A class template with ready to use implementations for getting direct and efficient access to <ref refid="classwx_bitmap" kindref="compound">wxBitmap</ref>&apos;s internal data and <ref refid="classwx_image" kindref="compound">wxImage</ref>&apos;s internal data through a standard interface. </para>    </briefdescription>
    <detaileddescription>
<para>It is possible to extend this class (interface) to other types of image content.</para><para>Implemented on Windows, GTK+ and OS X: <itemizedlist>
<listitem><para>wxNativePixelData: Class to access to <ref refid="classwx_bitmap" kindref="compound">wxBitmap</ref>&apos;s internal data without alpha channel (RGB). </para></listitem>
<listitem><para>wxAlphaPixelData: Class to access to <ref refid="classwx_bitmap" kindref="compound">wxBitmap</ref>&apos;s internal data with alpha channel (RGBA).</para></listitem>
</itemizedlist>
Implemented everywhere: <itemizedlist>
<listitem><para>wxImagePixelData: Class to access to <ref refid="classwx_image" kindref="compound">wxImage</ref>&apos;s internal data with alpha channel (RGBA).</para></listitem>
</itemizedlist>
Example:</para><para><programlisting><codeline><highlight class="normal">wxBitmap<sp/>bmp;</highlight></codeline>
<codeline><highlight class="normal">wxNativePixelData<sp/>data(bmp);</highlight></codeline>
<codeline><highlight class="normal">if<sp/>(<sp/>!data<sp/>)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>...<sp/>raw<sp/>access<sp/>to<sp/>bitmap<sp/>data<sp/>unavailable,<sp/>do<sp/>something<sp/>else<sp/>...</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">if<sp/>(<sp/>data.GetWidth()<sp/>&lt;<sp/>20<sp/>||<sp/>data.GetHeight()<sp/>&lt;<sp/>20<sp/>)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>...<sp/>complain:<sp/>the<sp/>bitmap<sp/>it<sp/>too<sp/>small<sp/>...</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">wxNativePixelData::Iterator<sp/>p(data);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>we<sp/>draw<sp/>a<sp/>(10,<sp/>10)-(20,<sp/>20)<sp/>rect<sp/>manually<sp/>using<sp/>the<sp/>given<sp/>r,<sp/>g,<sp/>b</highlight></codeline>
<codeline><highlight class="normal">p.Offset(data,<sp/>10,<sp/>10);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">for<sp/>(<sp/>int<sp/>y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>10;<sp/>++y<sp/>)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>wxNativePixelData::Iterator<sp/>rowStart<sp/>=<sp/>p;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>for<sp/>(<sp/>int<sp/>x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>10;<sp/>++x,<sp/>++p<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.Red()<sp/>=<sp/>r;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.Green()<sp/>=<sp/>g;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.Blue()<sp/>=<sp/>b;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/>rowStart;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>p.OffsetY(data,<sp/>1);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para><para><heading level="2"></heading>
</para><para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxcore" kindref="member">wxCore</ref> &lt;&gt;&lt; =&apos;&apos;&gt;:&lt;/&gt;&amp;;&amp;;&lt; =&apos;&apos;&gt;\ &lt;/&gt;&lt;/&gt;</para><para><simplesect kind="see"><para><ref refid="classwx_bitmap" kindref="compound">wxBitmap</ref>, <ref refid="classwx_image" kindref="compound">wxImage</ref> </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="5478">
        <label>wxPixelData&lt; Image, PixelFormat &gt;</label>
        <link refid="classwx_pixel_data"/>
        <childnode refid="5479" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5479">
        <label>wxPixelDataOut&lt; Image &gt;::template wxPixelDataIn&lt; PixelFormat &gt;</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5480">
        <label>wxPixelData&lt; Image, PixelFormat &gt;</label>
        <link refid="classwx_pixel_data"/>
        <childnode refid="5481" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5481">
        <label>wxPixelDataOut&lt; Image &gt;::template wxPixelDataIn&lt; PixelFormat &gt;</label>
      </node>
    </collaborationgraph>
    <location file="interface/wx/rawbmp.h" line="73" column="1" bodyfile="interface/wx/rawbmp.h" bodystart="71" bodyend="212"/>
    <listofallmembers>
      <member refid="classwx_pixel_data_1a7cc4e3eee25ab616ebfcdc6f8b52bfd0" prot="public" virt="non-virtual"><scope>wxPixelData</scope><name>GetHeight</name></member>
      <member refid="classwx_pixel_data_1ad223a5f97093900a7920df78e745b979" prot="public" virt="non-virtual"><scope>wxPixelData</scope><name>GetOrigin</name></member>
      <member refid="classwx_pixel_data_1aa33db23ebe439c8c5e130a6cf19632a0" prot="public" virt="non-virtual"><scope>wxPixelData</scope><name>GetPixels</name></member>
      <member refid="classwx_pixel_data_1aabbe0b683096a15e0e74db6d2e6e7855" prot="public" virt="non-virtual"><scope>wxPixelData</scope><name>GetRowStride</name></member>
      <member refid="classwx_pixel_data_1ab11a2ec08553877404dbafb9e1f706ac" prot="public" virt="non-virtual"><scope>wxPixelData</scope><name>GetSize</name></member>
      <member refid="classwx_pixel_data_1aa40ebad0ee24524fd6100fbb5d4e83d0" prot="public" virt="non-virtual"><scope>wxPixelData</scope><name>GetWidth</name></member>
      <member refid="classwx_pixel_data_1a6757aaacf6f5103a7046707b26f0f406" prot="public" virt="non-virtual"><scope>wxPixelData</scope><name>ImageType</name></member>
      <member refid="classwx_pixel_data_1ac0e54032cb8acec62c536eeb61b871ab" prot="public" virt="non-virtual"><scope>wxPixelData</scope><name>operator bool</name></member>
      <member refid="classwx_pixel_data_1ad451c659eebc85b4d6062b0bf5adcb52" prot="public" virt="non-virtual"><scope>wxPixelData</scope><name>wxPixelData</name></member>
      <member refid="classwx_pixel_data_1abc868145e077e1aa6431e18392c3127a" prot="public" virt="non-virtual"><scope>wxPixelData</scope><name>wxPixelData</name></member>
      <member refid="classwx_pixel_data_1a068af31f567fa8b20397ab13ec4bf491" prot="public" virt="non-virtual"><scope>wxPixelData</scope><name>wxPixelData</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
