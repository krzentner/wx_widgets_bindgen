<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classwx_caret" kind="class" language="C++" prot="public">
    <compoundname>wxCaret</compoundname>
    <includes local="no">wx/caret.h</includes>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classwx_caret_1a69612cbfbe2bd14a244b9c347db5e142" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxCaret::wxCaret</definition>
        <argsstring>(wxWindow *window, int width, int height)</argsstring>
        <name>wxCaret</name>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <briefdescription>
<para>Creates a caret with the given size (in pixels) and associates it with the <emphasis>window</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/caret.h" line="39" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_caret_1a60b70ae60ae73f9e3c86bfb08c628e64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxCaret::wxCaret</definition>
        <argsstring>(wxWindow *window, const wxSize &amp;size)</argsstring>
        <name>wxCaret</name>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_size" kindref="compound">wxSize</ref> &amp;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Creates a caret with the given size (in pixels) and associates it with the <emphasis>window</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/caret.h" line="40" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classwx_caret_1a46ffb44f7380258dea2d2bf6493d0214" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxCaret::Create</definition>
        <argsstring>(wxWindow *window, int width, int height)</argsstring>
        <name>Create</name>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <briefdescription>
<para>Creates a caret with the given size (in pixels) and associates it with the <emphasis>window</emphasis> (same as the equivalent constructors). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/caret.h" line="48" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_caret_1ae63995452133a279aa4c37befc5a9567" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxCaret::Create</definition>
        <argsstring>(wxWindow *window, const wxSize &amp;size)</argsstring>
        <name>Create</name>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_size" kindref="compound">wxSize</ref> &amp;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Creates a caret with the given size (in pixels) and associates it with the <emphasis>window</emphasis> (same as the equivalent constructors). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/caret.h" line="49" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classwx_caret_1a9f8e3316ef96a75ae7669a4fdbbd11e0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxCaret::GetPosition</definition>
        <argsstring>(int *x, int *y) const</argsstring>
        <name>GetPosition</name>
        <param>
          <type>int *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Get the caret position (in pixels). </para>        </briefdescription>
        <detaileddescription>
<para><bold>wxPerl Note:</bold> In wxPerl there are two methods instead of a single overloaded method:<itemizedlist>
<listitem><para><ref refid="classwx_caret_1a9f8e3316ef96a75ae7669a4fdbbd11e0" kindref="member">GetPosition()</ref>: returns a Wx::Point object.</para></listitem><listitem><para>GetPositionXY(): returns a 2-element list (x, y). </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/caret.h" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_caret_1aed175423fab541033c47d7c5af3f179a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_point" kindref="compound">wxPoint</ref></type>
        <definition>wxPoint wxCaret::GetPosition</definition>
        <argsstring>() const</argsstring>
        <name>GetPosition</name>
        <briefdescription>
<para>Get the caret position (in pixels). </para>        </briefdescription>
        <detaileddescription>
<para><bold>wxPerl Note:</bold> In wxPerl there are two methods instead of a single overloaded method:<itemizedlist>
<listitem><para><ref refid="classwx_caret_1a9f8e3316ef96a75ae7669a4fdbbd11e0" kindref="member">GetPosition()</ref>: returns a Wx::Point object.</para></listitem><listitem><para>GetPositionXY(): returns a 2-element list (x, y). </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/caret.h" line="71" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classwx_caret_1a9fb436c1ee5bfce27e69b2db95fd5e87" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxCaret::GetSize</definition>
        <argsstring>(int *width, int *height) const</argsstring>
        <name>GetSize</name>
        <param>
          <type>int *</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>height</declname>
        </param>
        <briefdescription>
<para>Get the caret size. </para>        </briefdescription>
        <detaileddescription>
<para><bold>wxPerl Note:</bold> In wxPerl there are two methods instead of a single overloaded method:<itemizedlist>
<listitem><para><ref refid="classwx_caret_1a9fb436c1ee5bfce27e69b2db95fd5e87" kindref="member">GetSize()</ref>: returns a Wx::Size object.</para></listitem><listitem><para>GetSizeWH(): returns a 2-element list (width, height). </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/caret.h" line="85" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_caret_1a820c86115f443026adaeff7529055e4c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_size" kindref="compound">wxSize</ref></type>
        <definition>wxSize wxCaret::GetSize</definition>
        <argsstring>() const</argsstring>
        <name>GetSize</name>
        <briefdescription>
<para>Get the caret size. </para>        </briefdescription>
        <detaileddescription>
<para><bold>wxPerl Note:</bold> In wxPerl there are two methods instead of a single overloaded method:<itemizedlist>
<listitem><para><ref refid="classwx_caret_1a9fb436c1ee5bfce27e69b2db95fd5e87" kindref="member">GetSize()</ref>: returns a Wx::Size object.</para></listitem><listitem><para>GetSizeWH(): returns a 2-element list (width, height). </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/caret.h" line="86" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classwx_caret_1ae490dc3156c4c686bc37f601edc33388" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxCaret::Move</definition>
        <argsstring>(int x, int y)</argsstring>
        <name>Move</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Move the caret to given position (in logical coordinates). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/caret.h" line="115" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_caret_1a4b1e2c18b950f771b44172b752d6eb1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxCaret::Move</definition>
        <argsstring>(const wxPoint &amp;pt)</argsstring>
        <name>Move</name>
        <param>
          <type>const <ref refid="classwx_point" kindref="compound">wxPoint</ref> &amp;</type>
          <declname>pt</declname>
        </param>
        <briefdescription>
<para>Move the caret to given position (in logical coordinates). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/caret.h" line="116" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classwx_caret_1a0dd4f34b8e000a967701bb2821ed8bb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxCaret::SetSize</definition>
        <argsstring>(int width, int height)</argsstring>
        <name>SetSize</name>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <briefdescription>
<para>Changes the size of the caret. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/caret.h" line="134" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_caret_1afaed1930afff173d1a5ec005e6086509" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxCaret::SetSize</definition>
        <argsstring>(const wxSize &amp;size)</argsstring>
        <name>SetSize</name>
        <param>
          <type>const <ref refid="classwx_size" kindref="compound">wxSize</ref> &amp;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Changes the size of the caret. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/caret.h" line="135" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_caret_1a07b320d7d5296d378fa8d6350e2ecf22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxCaret::wxCaret</definition>
        <argsstring>()</argsstring>
        <name>wxCaret</name>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/caret.h" line="32" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_caret_1af3e16f989440624c545d3a7b0244caea" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
        <definition>wxWindow* wxCaret::GetWindow</definition>
        <argsstring>() const</argsstring>
        <name>GetWindow</name>
        <briefdescription>
<para>Get the window the caret is associated with. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/caret.h" line="92" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_caret_1a272c1c4887bf5b9d16213b2bd616033a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxCaret::Hide</definition>
        <argsstring>()</argsstring>
        <name>Hide</name>
        <briefdescription>
<para>Hides the caret, same as Show(false). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/caret.h" line="97" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_caret_1afc9ee90ae1895d5cbe4bccb4e64d6da7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxCaret::IsOk</definition>
        <argsstring>() const</argsstring>
        <name>IsOk</name>
        <briefdescription>
<para>Returns true if the caret was created successfully. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/caret.h" line="102" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_caret_1a90a2cf1db432b991a922ec68e7acf679" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxCaret::IsVisible</definition>
        <argsstring>() const</argsstring>
        <name>IsVisible</name>
        <briefdescription>
<para>Returns true if the caret is visible and false if it is permanently hidden (if it is blinking and not shown currently but will be after the next blink, this method still returns true). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/caret.h" line="109" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_caret_1a5112409bd3a83148f364c4b08086fe28" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxCaret::Show</definition>
        <argsstring>(bool show=true)</argsstring>
        <name>Show</name>
        <param>
          <type>bool</type>
          <declname>show</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Shows or hides the caret. </para>        </briefdescription>
        <detaileddescription>
<para>Notice that if the caret was hidden N times, it must be shown N times as well to reappear on the screen. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/caret.h" line="142" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classwx_caret_1ab9f9aed8b31730a8d451ce12aeffab3a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int wxCaret::GetBlinkTime</definition>
        <argsstring>()</argsstring>
        <name>GetBlinkTime</name>
        <briefdescription>
<para>Returns the blink time which is measured in milliseconds and is the time elapsed between 2 inversions of the caret (blink time of the caret is the same for all carets, so this functions is static). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/caret.h" line="57" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_caret_1ae6018e5419476a7437940b92d10ec318" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void wxCaret::SetBlinkTime</definition>
        <argsstring>(int milliseconds)</argsstring>
        <name>SetBlinkTime</name>
        <param>
          <type>int</type>
          <declname>milliseconds</declname>
        </param>
        <briefdescription>
<para>Sets the blink time for all the carets. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>Under Windows, this function will change the blink time for all carets permanently (until the next time it is called), even for carets in other applications.</para></simplesect>
<simplesect kind="see"><para><ref refid="classwx_caret_1ab9f9aed8b31730a8d451ce12aeffab3a" kindref="member">GetBlinkTime()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/caret.h" line="128" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A caret is a blinking cursor showing the position where the typed text will appear. </para>    </briefdescription>
    <detaileddescription>
<para>Text controls usually have their own caret but <ref refid="classwx_caret" kindref="compound">wxCaret</ref> provides a way to use a caret in other windows.</para><para>Currently, the caret appears as a rectangle of the given size. In the future, it will be possible to specify a bitmap to be used for the caret shape.</para><para>A caret is always associated with a window and the current caret can be retrieved using <ref refid="classwx_window_1a2ee3eba6dbfb37944ed0ce03383bfc34" kindref="member">wxWindow::GetCaret()</ref>. The same caret can&apos;t be reused in two different windows.</para><para><heading level="2"></heading>
</para><para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxcore" kindref="member">wxCore</ref> &lt;&gt;&lt; =&apos;&apos;&gt;:&lt;/&gt;&amp;;&amp;;&lt; =&apos;&apos;&gt;\ &lt;/&gt;&lt;/&gt; </para>    </detaileddescription>
    <location file="interface/wx/caret.h" line="27" column="1" bodyfile="interface/wx/caret.h" bodystart="26" bodyend="143"/>
    <listofallmembers>
      <member refid="classwx_caret_1a46ffb44f7380258dea2d2bf6493d0214" prot="public" virt="non-virtual"><scope>wxCaret</scope><name>Create</name></member>
      <member refid="classwx_caret_1ae63995452133a279aa4c37befc5a9567" prot="public" virt="non-virtual"><scope>wxCaret</scope><name>Create</name></member>
      <member refid="classwx_caret_1ab9f9aed8b31730a8d451ce12aeffab3a" prot="public" virt="non-virtual"><scope>wxCaret</scope><name>GetBlinkTime</name></member>
      <member refid="classwx_caret_1a9f8e3316ef96a75ae7669a4fdbbd11e0" prot="public" virt="non-virtual"><scope>wxCaret</scope><name>GetPosition</name></member>
      <member refid="classwx_caret_1aed175423fab541033c47d7c5af3f179a" prot="public" virt="non-virtual"><scope>wxCaret</scope><name>GetPosition</name></member>
      <member refid="classwx_caret_1a9fb436c1ee5bfce27e69b2db95fd5e87" prot="public" virt="non-virtual"><scope>wxCaret</scope><name>GetSize</name></member>
      <member refid="classwx_caret_1a820c86115f443026adaeff7529055e4c" prot="public" virt="non-virtual"><scope>wxCaret</scope><name>GetSize</name></member>
      <member refid="classwx_caret_1af3e16f989440624c545d3a7b0244caea" prot="public" virt="non-virtual"><scope>wxCaret</scope><name>GetWindow</name></member>
      <member refid="classwx_caret_1a272c1c4887bf5b9d16213b2bd616033a" prot="public" virt="virtual"><scope>wxCaret</scope><name>Hide</name></member>
      <member refid="classwx_caret_1afc9ee90ae1895d5cbe4bccb4e64d6da7" prot="public" virt="non-virtual"><scope>wxCaret</scope><name>IsOk</name></member>
      <member refid="classwx_caret_1a90a2cf1db432b991a922ec68e7acf679" prot="public" virt="non-virtual"><scope>wxCaret</scope><name>IsVisible</name></member>
      <member refid="classwx_caret_1ae490dc3156c4c686bc37f601edc33388" prot="public" virt="non-virtual"><scope>wxCaret</scope><name>Move</name></member>
      <member refid="classwx_caret_1a4b1e2c18b950f771b44172b752d6eb1b" prot="public" virt="non-virtual"><scope>wxCaret</scope><name>Move</name></member>
      <member refid="classwx_caret_1ae6018e5419476a7437940b92d10ec318" prot="public" virt="non-virtual"><scope>wxCaret</scope><name>SetBlinkTime</name></member>
      <member refid="classwx_caret_1a0dd4f34b8e000a967701bb2821ed8bb2" prot="public" virt="non-virtual"><scope>wxCaret</scope><name>SetSize</name></member>
      <member refid="classwx_caret_1afaed1930afff173d1a5ec005e6086509" prot="public" virt="non-virtual"><scope>wxCaret</scope><name>SetSize</name></member>
      <member refid="classwx_caret_1a5112409bd3a83148f364c4b08086fe28" prot="public" virt="virtual"><scope>wxCaret</scope><name>Show</name></member>
      <member refid="classwx_caret_1a07b320d7d5296d378fa8d6350e2ecf22" prot="public" virt="non-virtual"><scope>wxCaret</scope><name>wxCaret</name></member>
      <member refid="classwx_caret_1a69612cbfbe2bd14a244b9c347db5e142" prot="public" virt="non-virtual"><scope>wxCaret</scope><name>wxCaret</name></member>
      <member refid="classwx_caret_1a60b70ae60ae73f9e3c86bfb08c628e64" prot="public" virt="non-virtual"><scope>wxCaret</scope><name>wxCaret</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
