<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classwx_clipboard" kind="class" language="C++" prot="public">
    <compoundname>wxClipboard</compoundname>
    <basecompoundref refid="classwx_object" prot="public" virt="non-virtual">wxObject</basecompoundref>
    <includes local="no">wx/clipbrd.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_clipboard_1a8d61a457ae71f52f718e0225ba3e8bb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxClipboard::wxClipboard</definition>
        <argsstring>()</argsstring>
        <name>wxClipboard</name>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/clipbrd.h" line="67" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_clipboard_1a385b85405a761cc65956f6b479003bbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual wxClipboard::~wxClipboard</definition>
        <argsstring>()</argsstring>
        <name>~wxClipboard</name>
        <briefdescription>
<para>Destructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/clipbrd.h" line="72" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_clipboard_1ae226633489bee0881839e5332fca714f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxClipboard::AddData</definition>
        <argsstring>(wxDataObject *data)</argsstring>
        <name>AddData</name>
        <param>
          <type><ref refid="classwx_data_object" kindref="compound">wxDataObject</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Call this function to add the data object to the clipboard. </para>        </briefdescription>
        <detaileddescription>
<para>This is an obsolete synonym for <ref refid="classwx_clipboard_1afae7236718f30437c15709a911d4bab6" kindref="member">SetData()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/clipbrd.h" line="79" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_clipboard_1adf8ae31ddd1081f79951b4a782b84db1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxClipboard::Clear</definition>
        <argsstring>()</argsstring>
        <name>Clear</name>
        <briefdescription>
<para>Clears the global clipboard object and the system&apos;s clipboard if possible. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/clipbrd.h" line="85" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_clipboard_1afe9ac8bdb2af7c20cf68d36d460ac4fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxClipboard::Close</definition>
        <argsstring>()</argsstring>
        <name>Close</name>
        <briefdescription>
<para>Call this function to close the clipboard, having opened it with <ref refid="classwx_clipboard_1a27dd0b1a54a368c9a786c8616eac667d" kindref="member">Open()</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/clipbrd.h" line="91" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_clipboard_1a10997196ffd3b2cf8d823033f291f932" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxClipboard::Flush</definition>
        <argsstring>()</argsstring>
        <name>Flush</name>
        <briefdescription>
<para>Flushes the clipboard: this means that the data which is currently on clipboard will stay available even after the application exits (possibly eating memory), otherwise the clipboard will be emptied on exit. </para>        </briefdescription>
        <detaileddescription>
<para>Currently this method is not implemented in X11-based ports, i.e. wxGTK, wxX11 and wxMotif and always returns false there.</para><para><simplesect kind="return"><para>false if the operation is unsuccessful for any reason. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/clipbrd.h" line="104" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_clipboard_1af9edcd205c3749a317bd6b1e8a5716cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxClipboard::GetData</definition>
        <argsstring>(wxDataObject &amp;data)</argsstring>
        <name>GetData</name>
        <param>
          <type><ref refid="classwx_data_object" kindref="compound">wxDataObject</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Call this function to fill <emphasis>data</emphasis> with data on the clipboard, if available in the required format. </para>        </briefdescription>
        <detaileddescription>
<para>Returns true on success. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/clipbrd.h" line="110" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_clipboard_1ab18cfdeb2e139cfb0e87811cd133b744" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxClipboard::IsOpened</definition>
        <argsstring>() const</argsstring>
        <name>IsOpened</name>
        <briefdescription>
<para>Returns true if the clipboard has been opened. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/clipbrd.h" line="115" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_clipboard_1a6c56dbf02b1807ce61cac8134a534336" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxClipboard::IsSupported</definition>
        <argsstring>(const wxDataFormat &amp;format)</argsstring>
        <name>IsSupported</name>
        <param>
          <type>const <ref refid="classwx_data_format" kindref="compound">wxDataFormat</ref> &amp;</type>
          <declname>format</declname>
        </param>
        <briefdescription>
<para>Returns true if there is data which matches the data format of the given data object currently <bold>available</bold> on the clipboard. </para>        </briefdescription>
        <detaileddescription>
<para><xrefsect id="todo_1_todo000011"><xreftitle>Todo</xreftitle><xrefdescription><para>The name of this function is misleading. This should be renamed to something that more accurately indicates what it does. </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/clipbrd.h" line="124" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_clipboard_1a6f814afdfebeba1399667ae008515b30" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxClipboard::IsUsingPrimarySelection</definition>
        <argsstring>() const</argsstring>
        <name>IsUsingPrimarySelection</name>
        <briefdescription>
<para>Returns true if we are using the primary selection, false if clipboard one. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classwx_clipboard_1aec2787c528e42791547a424e647b9dc2" kindref="member">UsePrimarySelection()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/clipbrd.h" line="132" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_clipboard_1a27dd0b1a54a368c9a786c8616eac667d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxClipboard::Open</definition>
        <argsstring>()</argsstring>
        <name>Open</name>
        <briefdescription>
<para>Call this function to open the clipboard before calling <ref refid="classwx_clipboard_1afae7236718f30437c15709a911d4bab6" kindref="member">SetData()</ref> and <ref refid="classwx_clipboard_1af9edcd205c3749a317bd6b1e8a5716cc" kindref="member">GetData()</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>Call <ref refid="classwx_clipboard_1afe9ac8bdb2af7c20cf68d36d460ac4fe" kindref="member">Close()</ref> when you have finished with the clipboard. You should keep the clipboard open for only a very short time.</para><para><simplesect kind="return"><para>true on success. This should be tested (as in the sample shown above). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/clipbrd.h" line="144" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_clipboard_1afae7236718f30437c15709a911d4bab6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxClipboard::SetData</definition>
        <argsstring>(wxDataObject *data)</argsstring>
        <name>SetData</name>
        <param>
          <type><ref refid="classwx_data_object" kindref="compound">wxDataObject</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Call this function to set the data object to the clipboard. </para>        </briefdescription>
        <detaileddescription>
<para>The new data object replaces any previously set one, so if the application wants to provide clipboard data in several different formats, it must use a composite data object supporting all of the formats instead of calling this function several times with different data objects as this would only leave data from the last one in the clipboard.</para><para>After this function has been called, the clipboard owns the data, so do not delete the data explicitly. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/clipbrd.h" line="159" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_clipboard_1aec2787c528e42791547a424e647b9dc2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxClipboard::UsePrimarySelection</definition>
        <argsstring>(bool primary=false)</argsstring>
        <name>UsePrimarySelection</name>
        <param>
          <type>bool</type>
          <declname>primary</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>On platforms supporting it (all X11-based ports), <ref refid="classwx_clipboard" kindref="compound">wxClipboard</ref> uses the CLIPBOARD X11 selection by default. </para>        </briefdescription>
        <detaileddescription>
<para>When this function is called with true, all subsequent clipboard operations will use PRIMARY selection until this function is called again with false.</para><para>On the other platforms, there is no PRIMARY selection and so all clipboard operations will fail. This allows to implement the standard X11 handling of the clipboard which consists in copying data to the CLIPBOARD selection only when the user explicitly requests it (i.e. by selecting the &quot;Copy&quot; menu command) but putting the currently selected text into the PRIMARY selection automatically, without overwriting the normal clipboard contents with the currently selected text on the other platforms. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/clipbrd.h" line="176" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classwx_clipboard_1a33bc66920c219c39100c2556326282b1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_clipboard" kindref="compound">wxClipboard</ref> *</type>
        <definition>static wxClipboard* wxClipboard::Get</definition>
        <argsstring>()</argsstring>
        <name>Get</name>
        <briefdescription>
<para>Returns the global instance (wxTheClipboard) of the clipboard object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/clipbrd.h" line="181" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A class for manipulating the clipboard. </para>    </briefdescription>
    <detaileddescription>
<para>To use the clipboard, you call member functions of the global <ref refid="clipbrd_8h_1a7981f5d50a36729858d8356aac6e77eb" kindref="member">wxTheClipboard</ref> object.</para><para>See the <ref refid="overview_dataobject" kindref="compound">wxDataObject Overview</ref> for further information.</para><para>Call <ref refid="classwx_clipboard_1a27dd0b1a54a368c9a786c8616eac667d" kindref="member">wxClipboard::Open()</ref> to get ownership of the clipboard. If this operation returns true, you now own the clipboard. Call <ref refid="classwx_clipboard_1afae7236718f30437c15709a911d4bab6" kindref="member">wxClipboard::SetData()</ref> to put data on the clipboard, or <ref refid="classwx_clipboard_1af9edcd205c3749a317bd6b1e8a5716cc" kindref="member">wxClipboard::GetData()</ref> to retrieve data from the clipboard. Call <ref refid="classwx_clipboard_1afe9ac8bdb2af7c20cf68d36d460ac4fe" kindref="member">wxClipboard::Close()</ref> to close the clipboard and relinquish ownership. You should keep the clipboard open only momentarily.</para><para>For example:</para><para><programlisting><codeline><highlight class="normal">//<sp/>Write<sp/>some<sp/>text<sp/>to<sp/>the<sp/>clipboard</highlight></codeline>
<codeline><highlight class="normal">if<sp/>(wxTheClipboard-&gt;Open())</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>This<sp/>data<sp/>objects<sp/>are<sp/>held<sp/>by<sp/>the<sp/>clipboard,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>so<sp/>do<sp/>not<sp/>delete<sp/>them<sp/>in<sp/>the<sp/>app.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>wxTheClipboard-&gt;SetData(<sp/>new<sp/>wxTextDataObject(&quot;Some<sp/>text&quot;)<sp/>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>wxTheClipboard-&gt;Close();</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Read<sp/>some<sp/>text</highlight></codeline>
<codeline><highlight class="normal">if<sp/>(wxTheClipboard-&gt;Open())</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(wxTheClipboard-&gt;IsSupported(<sp/>wxDF_TEXT<sp/>))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxTextDataObject<sp/>data;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxTheClipboard-&gt;GetData(<sp/>data<sp/>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxMessageBox(<sp/>data.GetText()<sp/>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>wxTheClipboard-&gt;Close();</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para><para><heading level="2"></heading>
</para><para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxcore" kindref="member">wxCore</ref> &lt;&gt;&lt; =&apos;&apos;&gt;:&lt;/&gt;&amp;;&amp;;&lt; =&apos;&apos;&gt;\ &lt;/&gt;&lt;/&gt;</para><para><simplesect kind="see"><para><ref refid="overview_dnd" kindref="compound">Drag and Drop Overview</ref>, <ref refid="overview_dataobject" kindref="compound">wxDataObject Overview</ref>, <ref refid="classwx_data_object" kindref="compound">wxDataObject</ref> </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="825">
        <label>wxClipboard</label>
        <link refid="classwx_clipboard"/>
        <childnode refid="826" relation="public-inheritance">
        </childnode>
      </node>
      <node id="826">
        <label>wxObject</label>
        <link refid="classwx_object"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="827">
        <label>wxClipboard</label>
        <link refid="classwx_clipboard"/>
        <childnode refid="828" relation="public-inheritance">
        </childnode>
      </node>
      <node id="828">
        <label>wxObject</label>
        <link refid="classwx_object"/>
        <childnode refid="829" relation="usage">
          <edgelabel>m_refData</edgelabel>
        </childnode>
      </node>
      <node id="829">
        <label>wxObjectRefData</label>
        <link refid="classwx_object_ref_data"/>
      </node>
    </collaborationgraph>
    <location file="interface/wx/clipbrd.h" line="62" column="1" bodyfile="interface/wx/clipbrd.h" bodystart="61" bodyend="183"/>
    <listofallmembers>
      <member refid="classwx_clipboard_1ae226633489bee0881839e5332fca714f" prot="public" virt="virtual"><scope>wxClipboard</scope><name>AddData</name></member>
      <member refid="classwx_object_1a60204063f3cc3aa2fa1c7ff5bda9eb13" prot="protected" virt="non-virtual"><scope>wxClipboard</scope><name>AllocExclusive</name></member>
      <member refid="classwx_clipboard_1adf8ae31ddd1081f79951b4a782b84db1" prot="public" virt="virtual"><scope>wxClipboard</scope><name>Clear</name></member>
      <member refid="classwx_object_1a436fc8fe68cf8a31000296d9cd3d2427" prot="protected" virt="virtual"><scope>wxClipboard</scope><name>CloneRefData</name></member>
      <member refid="classwx_clipboard_1afe9ac8bdb2af7c20cf68d36d460ac4fe" prot="public" virt="virtual"><scope>wxClipboard</scope><name>Close</name></member>
      <member refid="classwx_object_1a3f4f497c65cef611e121c41f21dd5ccc" prot="protected" virt="virtual"><scope>wxClipboard</scope><name>CreateRefData</name></member>
      <member refid="classwx_clipboard_1a10997196ffd3b2cf8d823033f291f932" prot="public" virt="virtual"><scope>wxClipboard</scope><name>Flush</name></member>
      <member refid="classwx_clipboard_1a33bc66920c219c39100c2556326282b1" prot="public" virt="non-virtual"><scope>wxClipboard</scope><name>Get</name></member>
      <member refid="classwx_object_1ae6d365f2556b26767ced8410c5e839d0" prot="public" virt="virtual"><scope>wxClipboard</scope><name>GetClassInfo</name></member>
      <member refid="classwx_clipboard_1af9edcd205c3749a317bd6b1e8a5716cc" prot="public" virt="virtual"><scope>wxClipboard</scope><name>GetData</name></member>
      <member refid="classwx_object_1af3c6c76a775864832f1536d3c0de3a2b" prot="public" virt="non-virtual"><scope>wxClipboard</scope><name>GetRefData</name></member>
      <member refid="classwx_object_1a3c7115ef4132dcee0c4fc34e84d7fced" prot="public" virt="non-virtual"><scope>wxClipboard</scope><name>IsKindOf</name></member>
      <member refid="classwx_clipboard_1ab18cfdeb2e139cfb0e87811cd133b744" prot="public" virt="virtual"><scope>wxClipboard</scope><name>IsOpened</name></member>
      <member refid="classwx_object_1a059373c494c2369d7db2a556efef8ecf" prot="public" virt="non-virtual"><scope>wxClipboard</scope><name>IsSameAs</name></member>
      <member refid="classwx_clipboard_1a6c56dbf02b1807ce61cac8134a534336" prot="public" virt="virtual"><scope>wxClipboard</scope><name>IsSupported</name></member>
      <member refid="classwx_clipboard_1a6f814afdfebeba1399667ae008515b30" prot="public" virt="non-virtual"><scope>wxClipboard</scope><name>IsUsingPrimarySelection</name></member>
      <member refid="classwx_object_1a9e31954530a0abd54982effc443ed2b8" prot="protected" virt="non-virtual"><scope>wxClipboard</scope><name>m_refData</name></member>
      <member refid="classwx_clipboard_1a27dd0b1a54a368c9a786c8616eac667d" prot="public" virt="virtual"><scope>wxClipboard</scope><name>Open</name></member>
      <member refid="classwx_object_1a07b8f34f5afc5743195c5fed052f55d3" prot="public" virt="non-virtual"><scope>wxClipboard</scope><name>operator delete</name></member>
      <member refid="classwx_object_1a96fa423a1dbc212c8227a5d83825971f" prot="public" virt="non-virtual"><scope>wxClipboard</scope><name>operator new</name></member>
      <member refid="classwx_object_1a2f6f1aa51fe9fc2b1415ca4211a90e9e" prot="public" virt="non-virtual"><scope>wxClipboard</scope><name>Ref</name></member>
      <member refid="classwx_clipboard_1afae7236718f30437c15709a911d4bab6" prot="public" virt="virtual"><scope>wxClipboard</scope><name>SetData</name></member>
      <member refid="classwx_object_1afab780710f2adc1bb33310e27590140b" prot="public" virt="non-virtual"><scope>wxClipboard</scope><name>SetRefData</name></member>
      <member refid="classwx_object_1af51efc6b1ae632fc7f0cd7ebbce9fa36" prot="public" virt="non-virtual"><scope>wxClipboard</scope><name>UnRef</name></member>
      <member refid="classwx_object_1a74b40e42d19a4b9e9bec0b57d62a5725" prot="public" virt="non-virtual"><scope>wxClipboard</scope><name>UnShare</name></member>
      <member refid="classwx_clipboard_1aec2787c528e42791547a424e647b9dc2" prot="public" virt="virtual"><scope>wxClipboard</scope><name>UsePrimarySelection</name></member>
      <member refid="classwx_clipboard_1a8d61a457ae71f52f718e0225ba3e8bb4" prot="public" virt="non-virtual"><scope>wxClipboard</scope><name>wxClipboard</name></member>
      <member refid="classwx_object_1acaa378363a28af421ab56ad7b46eadf0" prot="public" virt="non-virtual"><scope>wxClipboard</scope><name>wxObject</name></member>
      <member refid="classwx_object_1a4721b4dc9b7aff0f30904ba2ea3954cf" prot="public" virt="non-virtual"><scope>wxClipboard</scope><name>wxObject</name></member>
      <member refid="classwx_clipboard_1a385b85405a761cc65956f6b479003bbf" prot="public" virt="virtual"><scope>wxClipboard</scope><name>~wxClipboard</name></member>
      <member refid="classwx_object_1a2a51aa8bfbab47ca2f051bcf84b3f35b" prot="public" virt="virtual"><scope>wxClipboard</scope><name>~wxObject</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
