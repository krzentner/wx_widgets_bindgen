<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classwx_combo_ctrl" kind="class" language="C++" prot="public">
    <compoundname>wxComboCtrl</compoundname>
    <basecompoundref refid="classwx_control" prot="public" virt="non-virtual">wxControl</basecompoundref>
    <basecompoundref refid="classwx_text_entry" prot="public" virt="non-virtual">wxTextEntry</basecompoundref>
    <derivedcompoundref refid="classwx_owner_drawn_combo_box" prot="public" virt="non-virtual">wxOwnerDrawnComboBox</derivedcompoundref>
    <derivedcompoundref refid="classwx_rich_text_style_combo_ctrl" prot="public" virt="non-virtual">wxRichTextStyleComboCtrl</derivedcompoundref>
    <includes local="no">wx/combo.h</includes>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classwx_combo_ctrl_1ae2b983f401d92ccc38f2bed47fb4d76b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxComboCtrl::SetMargins</definition>
        <argsstring>(const wxPoint &amp;pt)</argsstring>
        <name>SetMargins</name>
        <param>
          <type>const <ref refid="classwx_point" kindref="compound">wxPoint</ref> &amp;</type>
          <declname>pt</declname>
        </param>
        <briefdescription>
<para>Attempts to set the control margins. </para>        </briefdescription>
        <detaileddescription>
<para>When margins are given as <ref refid="classwx_point" kindref="compound">wxPoint</ref>, x indicates the left and y the top margin. Use -1 to indicate that an existing value should be used.</para><para><simplesect kind="return"><para>true if setting of all requested margins was successful.</para></simplesect>
<simplesect kind="since"><para>2.9.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/combo.h" line="765" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1a61fb396d486c81bcb733ff0b35301904" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxComboCtrl::SetMargins</definition>
        <argsstring>(wxCoord left, wxCoord top=-1)</argsstring>
        <name>SetMargins</name>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>left</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>top</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
<para>Attempts to set the control margins. </para>        </briefdescription>
        <detaileddescription>
<para>When margins are given as <ref refid="classwx_point" kindref="compound">wxPoint</ref>, x indicates the left and y the top margin. Use -1 to indicate that an existing value should be used.</para><para><simplesect kind="return"><para>true if setting of all requested margins was successful.</para></simplesect>
<simplesect kind="since"><para>2.9.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/combo.h" line="766" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_combo_ctrl_1af31b505e73047689dc4d2948eaa13a3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxComboCtrl::wxComboCtrl</definition>
        <argsstring>()</argsstring>
        <name>wxComboCtrl</name>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/combo.h" line="374" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1a0f9d6b21d3728f135dbe0d01ee4bf865" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxComboCtrl::wxComboCtrl</definition>
        <argsstring>(wxWindow *parent, wxWindowID id=wxID_ANY, const wxString &amp;value=wxEmptyString, const wxPoint &amp;pos=wxDefaultPosition, const wxSize &amp;size=wxDefaultSize, long style=0, const wxValidator &amp;validator=wxDefaultValidator, const wxString &amp;name=wxComboBoxNameStr)</argsstring>
        <name>wxComboCtrl</name>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>parent</declname>
        </param>
        <param>
          <type><ref refid="windowid_8h_1ae8091432cc2cb2485d45f2302fb51133" kindref="member">wxWindowID</ref></type>
          <declname>id</declname>
          <defval><ref refid="defs_8h_1ac66d0a09761e7d86b2ac0b2e0c6a8cbba1f375b01ea03a713bbb7e32a36a2589c" kindref="member">wxID_ANY</ref></defval>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>value</declname>
          <defval><ref refid="interface_2wx_2string_8h_1a9a321d587166a30017b608dd2d234033" kindref="member">wxEmptyString</ref></defval>
        </param>
        <param>
          <type>const <ref refid="classwx_point" kindref="compound">wxPoint</ref> &amp;</type>
          <declname>pos</declname>
          <defval><ref refid="gdicmn_8h_1af5a90c753eaf3d3e3e5068a19ec3c1d0" kindref="member">wxDefaultPosition</ref></defval>
        </param>
        <param>
          <type>const <ref refid="classwx_size" kindref="compound">wxSize</ref> &amp;</type>
          <declname>size</declname>
          <defval><ref refid="gdicmn_8h_1a33a012cdb075e9f78c93f63bec2dc27b" kindref="member">wxDefaultSize</ref></defval>
        </param>
        <param>
          <type>long</type>
          <declname>style</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const <ref refid="classwx_validator" kindref="compound">wxValidator</ref> &amp;</type>
          <declname>validator</declname>
          <defval><ref refid="validate_8h_1af1e90d8aa1824fd2ce4024ef7e40703c" kindref="member">wxDefaultValidator</ref></defval>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>name</declname>
          <defval>wxComboBoxNameStr</defval>
        </param>
        <briefdescription>
<para>Constructor, creating and showing a combo control. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parent</parametername>
</parameternamelist>
<parameterdescription>
<para>Parent window. Must not be NULL. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>Window identifier. The value wxID_ANY indicates a default value. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial selection string. An empty string indicates no selection. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>Window position. If <ref refid="gdicmn_8h_1af5a90c753eaf3d3e3e5068a19ec3c1d0" kindref="member">wxDefaultPosition</ref> is specified then a default position is chosen. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Window size. If <ref refid="gdicmn_8h_1a33a012cdb075e9f78c93f63bec2dc27b" kindref="member">wxDefaultSize</ref> is specified then the window is sized appropriately. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>style</parametername>
</parameternamelist>
<parameterdescription>
<para>Window style. See <ref refid="classwx_combo_ctrl" kindref="compound">wxComboCtrl</ref>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>validator</parametername>
</parameternamelist>
<parameterdescription>
<para>Window validator. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Window name.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classwx_combo_ctrl_1aab2390bd7650a56e3d2c243140d28f98" kindref="member">Create()</ref>, <ref refid="classwx_validator" kindref="compound">wxValidator</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/combo.h" line="400" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1a542d88ad981a8dd2a53ca9cc03c2daaa" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual wxComboCtrl::~wxComboCtrl</definition>
        <argsstring>()</argsstring>
        <name>~wxComboCtrl</name>
        <briefdescription>
<para>Destructor, destroying the combo control. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/combo.h" line="411" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1a6feecca8942afd49ac29ff62936299c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxComboCtrl::Copy</definition>
        <argsstring>()</argsstring>
        <name>Copy</name>
        <reimplements refid="classwx_text_entry_1a94675646b91a2d5a18e3ca7395cafe77">Copy</reimplements>
        <briefdescription>
<para>Copies the selected text to the clipboard. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/combo.h" line="416" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1aab2390bd7650a56e3d2c243140d28f98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxComboCtrl::Create</definition>
        <argsstring>(wxWindow *parent, wxWindowID id=wxID_ANY, const wxString &amp;value=wxEmptyString, const wxPoint &amp;pos=wxDefaultPosition, const wxSize &amp;size=wxDefaultSize, long style=0, const wxValidator &amp;validator=wxDefaultValidator, const wxString &amp;name=wxComboBoxNameStr)</argsstring>
        <name>Create</name>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>parent</declname>
        </param>
        <param>
          <type><ref refid="windowid_8h_1ae8091432cc2cb2485d45f2302fb51133" kindref="member">wxWindowID</ref></type>
          <declname>id</declname>
          <defval><ref refid="defs_8h_1ac66d0a09761e7d86b2ac0b2e0c6a8cbba1f375b01ea03a713bbb7e32a36a2589c" kindref="member">wxID_ANY</ref></defval>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>value</declname>
          <defval><ref refid="interface_2wx_2string_8h_1a9a321d587166a30017b608dd2d234033" kindref="member">wxEmptyString</ref></defval>
        </param>
        <param>
          <type>const <ref refid="classwx_point" kindref="compound">wxPoint</ref> &amp;</type>
          <declname>pos</declname>
          <defval><ref refid="gdicmn_8h_1af5a90c753eaf3d3e3e5068a19ec3c1d0" kindref="member">wxDefaultPosition</ref></defval>
        </param>
        <param>
          <type>const <ref refid="classwx_size" kindref="compound">wxSize</ref> &amp;</type>
          <declname>size</declname>
          <defval><ref refid="gdicmn_8h_1a33a012cdb075e9f78c93f63bec2dc27b" kindref="member">wxDefaultSize</ref></defval>
        </param>
        <param>
          <type>long</type>
          <declname>style</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const <ref refid="classwx_validator" kindref="compound">wxValidator</ref> &amp;</type>
          <declname>validator</declname>
          <defval><ref refid="validate_8h_1af1e90d8aa1824fd2ce4024ef7e40703c" kindref="member">wxDefaultValidator</ref></defval>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>name</declname>
          <defval>wxComboBoxNameStr</defval>
        </param>
        <briefdescription>
<para>Creates the combo control for two-step construction. </para>        </briefdescription>
        <detaileddescription>
<para>Derived classes should call or replace this function. See <ref refid="classwx_combo_ctrl_1af31b505e73047689dc4d2948eaa13a3d" kindref="member">wxComboCtrl()</ref> for further details. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/combo.h" line="423" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1a201dce519059e37ad35901f7603afa56" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxComboCtrl::Cut</definition>
        <argsstring>()</argsstring>
        <name>Cut</name>
        <reimplements refid="classwx_text_entry_1a571332a18ed5cdecd76a259ee97ae5a1">Cut</reimplements>
        <briefdescription>
<para>Copies the selected text to the clipboard and removes the selection. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/combo.h" line="434" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1a56867b1c18641c21fcd518ce43efbf99" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxComboCtrl::Dismiss</definition>
        <argsstring>()</argsstring>
        <name>Dismiss</name>
        <briefdescription>
<para>Dismisses the popup window. </para>        </briefdescription>
        <detaileddescription>
<para>Notice that calling this function will generate a <computeroutput>wxEVT_COMBOBOX_CLOSEUP</computeroutput> event.</para><para><simplesect kind="since"><para>2.9.2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/combo.h" line="444" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1ae90d978c054d1ce215758c6073c43d31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxComboCtrl::EnablePopupAnimation</definition>
        <argsstring>(bool enable=true)</argsstring>
        <name>EnablePopupAnimation</name>
        <param>
          <type>bool</type>
          <declname>enable</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Enables or disables popup animation, if any, depending on the value of the argument. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/combo.h" line="451" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1a523036a15ae181059d03f97969fd123b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxComboCtrl::IsKeyPopupToggle</definition>
        <argsstring>(const wxKeyEvent &amp;event) const</argsstring>
        <name>IsKeyPopupToggle</name>
        <param>
          <type>const <ref refid="classwx_key_event" kindref="compound">wxKeyEvent</ref> &amp;</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Returns true if given key combination should toggle the popup. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/combo.h" line="457" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1abd4fb20092e56779c74c7910a0c0ce9b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxComboCtrl::PrepareBackground</definition>
        <argsstring>(wxDC &amp;dc, const wxRect &amp;rect, int flags) const</argsstring>
        <name>PrepareBackground</name>
        <param>
          <type><ref refid="classwx_d_c" kindref="compound">wxDC</ref> &amp;</type>
          <declname>dc</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_rect" kindref="compound">wxRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Prepare background of combo control or an item in a dropdown list in a way typical on platform. </para>        </briefdescription>
        <detaileddescription>
<para>This includes painting the focus/disabled background and setting the clipping region.</para><para>Unless you plan to paint your own focus indicator, you should always call this in your <ref refid="classwx_combo_popup_1ae64038e6f785d2c6b4826991f0f75b18" kindref="member">wxComboPopup::PaintComboControl</ref> implementation. In addition, it sets pen and text colour to what looks good and proper against the background.</para><para>flags: <ref refid="classwx_renderer_native" kindref="compound">wxRendererNative</ref> flags: wxCONTROL_ISSUBMENU: is drawing a list item instead of combo control wxCONTROL_SELECTED: list item is selected wxCONTROL_DISABLED: control/item is disabled </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/combo.h" line="475" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1af7d1e035c5ed8d0e34baf6e483e855bb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxComboCtrl::ShouldDrawFocus</definition>
        <argsstring>() const</argsstring>
        <name>ShouldDrawFocus</name>
        <briefdescription>
<para>Returns true if focus indicator should be drawn in the control. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/combo.h" line="480" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1af385dc87ddb020d13ae9c882436afaf5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classwx_bitmap" kindref="compound">wxBitmap</ref> &amp;</type>
        <definition>const wxBitmap&amp; wxComboCtrl::GetBitmapDisabled</definition>
        <argsstring>() const</argsstring>
        <name>GetBitmapDisabled</name>
        <briefdescription>
<para>Returns disabled button bitmap that has been set with <ref refid="classwx_combo_ctrl_1adc5fdec92913ba1ffdec20548106376b" kindref="member">SetButtonBitmaps()</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A reference to the disabled state bitmap. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/combo.h" line="488" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1aa49862ed4b6d30ab8d41edc1a23ab964" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classwx_bitmap" kindref="compound">wxBitmap</ref> &amp;</type>
        <definition>const wxBitmap&amp; wxComboCtrl::GetBitmapHover</definition>
        <argsstring>() const</argsstring>
        <name>GetBitmapHover</name>
        <briefdescription>
<para>Returns button mouse hover bitmap that has been set with <ref refid="classwx_combo_ctrl_1adc5fdec92913ba1ffdec20548106376b" kindref="member">SetButtonBitmaps()</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A reference to the mouse hover state bitmap. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/combo.h" line="496" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1a07bcb9503da831f64ac36379bbbbbe42" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classwx_bitmap" kindref="compound">wxBitmap</ref> &amp;</type>
        <definition>const wxBitmap&amp; wxComboCtrl::GetBitmapNormal</definition>
        <argsstring>() const</argsstring>
        <name>GetBitmapNormal</name>
        <briefdescription>
<para>Returns default button bitmap that has been set with <ref refid="classwx_combo_ctrl_1adc5fdec92913ba1ffdec20548106376b" kindref="member">SetButtonBitmaps()</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A reference to the normal state bitmap. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/combo.h" line="504" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1aa9d68d8f73b9bb4b5594ce86d0b06f51" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classwx_bitmap" kindref="compound">wxBitmap</ref> &amp;</type>
        <definition>const wxBitmap&amp; wxComboCtrl::GetBitmapPressed</definition>
        <argsstring>() const</argsstring>
        <name>GetBitmapPressed</name>
        <briefdescription>
<para>Returns depressed button bitmap that has been set with <ref refid="classwx_combo_ctrl_1adc5fdec92913ba1ffdec20548106376b" kindref="member">SetButtonBitmaps()</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A reference to the depressed state bitmap. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/combo.h" line="512" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1ab6e1596a4b709465e0b07362a3c7dad2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_size" kindref="compound">wxSize</ref></type>
        <definition>wxSize wxComboCtrl::GetButtonSize</definition>
        <argsstring>()</argsstring>
        <name>GetButtonSize</name>
        <briefdescription>
<para>Returns current size of the dropdown button. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/combo.h" line="517" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1ae4d95947e551ad7818b60aabf718e84c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxComboCtrl::GetCustomPaintWidth</definition>
        <argsstring>() const</argsstring>
        <name>GetCustomPaintWidth</name>
        <briefdescription>
<para>Returns custom painted area in control. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classwx_combo_ctrl_1af0b54e5e4f71efc63464ceb44f1497d5" kindref="member">SetCustomPaintWidth()</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/combo.h" line="524" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1a0ae5cde4ff44626baad45eac7dbce363" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>virtual wxString wxComboCtrl::GetHint</definition>
        <argsstring>() const</argsstring>
        <name>GetHint</name>
        <reimplements refid="classwx_text_entry_1ae05d111ea78f08ee38d1b404c3dcf9ae">GetHint</reimplements>
        <briefdescription>
<para>Returns the current hint string. </para>        </briefdescription>
        <detaileddescription>
<para>See <ref refid="classwx_combo_ctrl_1a68221bdd4af63abfd9840e5de13f4ba6" kindref="member">SetHint()</ref> for more information about hints.</para><para><simplesect kind="since"><para>2.9.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/combo.h" line="543" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1a57c790282e3fb7b6f15309f5c9ee4a9a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>long</type>
        <definition>virtual long wxComboCtrl::GetInsertionPoint</definition>
        <argsstring>() const</argsstring>
        <name>GetInsertionPoint</name>
        <reimplements refid="classwx_text_entry_1aec1a523f158549abdef5271c55906902">GetInsertionPoint</reimplements>
        <briefdescription>
<para>Returns the insertion point for the combo control&apos;s text field. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Under Windows, this function always returns 0 if the combo control doesn&apos;t have the focus. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/combo.h" line="551" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1a9d65dd2965b5cbb81dd8e972cac4379b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>long</type>
        <definition>virtual long wxComboCtrl::GetLastPosition</definition>
        <argsstring>() const</argsstring>
        <name>GetLastPosition</name>
        <reimplements refid="classwx_text_entry_1a31f2b491c3039f038a5084da777c9af0">GetLastPosition</reimplements>
        <briefdescription>
<para>Returns the last position in the combo control text field. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/combo.h" line="556" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1a3ee7141dc6069fa9b520cd994d176eff" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_point" kindref="compound">wxPoint</ref></type>
        <definition>wxPoint wxComboCtrl::GetMargins</definition>
        <argsstring>() const</argsstring>
        <name>GetMargins</name>
        <briefdescription>
<para>Returns the margins used by the control. </para>        </briefdescription>
        <detaileddescription>
<para>The <computeroutput>x</computeroutput> field of the returned point is the horizontal margin and the <computeroutput>y</computeroutput> field is the vertical one.</para><para><simplesect kind="remark"><para>If given margin cannot be accurately determined, its value will be set to -1.</para></simplesect>
<simplesect kind="see"><para><ref refid="classwx_combo_ctrl_1ae2b983f401d92ccc38f2bed47fb4d76b" kindref="member">SetMargins()</ref></para></simplesect>
<simplesect kind="since"><para>2.9.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/combo.h" line="569" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1aedb72a461632fa31ca5ea84e47fb5433" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_combo_popup" kindref="compound">wxComboPopup</ref> *</type>
        <definition>wxComboPopup* wxComboCtrl::GetPopupControl</definition>
        <argsstring>()</argsstring>
        <name>GetPopupControl</name>
        <briefdescription>
<para>Returns current popup interface that has been set with <ref refid="classwx_combo_ctrl_1afb0b22cb38395040699eebcb679fd86a" kindref="member">SetPopupControl()</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/combo.h" line="575" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1a9aaac896e82856aa10aacbeef8a5c198" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
        <definition>wxWindow* wxComboCtrl::GetPopupWindow</definition>
        <argsstring>() const</argsstring>
        <name>GetPopupWindow</name>
        <briefdescription>
<para>Returns popup window containing the popup control. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/combo.h" line="580" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1abc9a3ff4939e2cb21e683e15a1389946" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_text_ctrl" kindref="compound">wxTextCtrl</ref> *</type>
        <definition>wxTextCtrl* wxComboCtrl::GetTextCtrl</definition>
        <argsstring>() const</argsstring>
        <name>GetTextCtrl</name>
        <briefdescription>
<para>Get the text control which is part of the combo control. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/combo.h" line="585" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1aa7e582babb6a4e0379bccd7d2def16f6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
        <definition>wxCoord wxComboCtrl::GetTextIndent</definition>
        <argsstring>() const</argsstring>
        <name>GetTextIndent</name>
        <briefdescription>
<para>Returns actual indentation in pixels. </para>        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000006"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use <ref refid="classwx_combo_ctrl_1a3ee7141dc6069fa9b520cd994d176eff" kindref="member">GetMargins()</ref> instead. </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/combo.h" line="592" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1a1d6d5a638fd3d653b8f94bdb2e78d944" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classwx_rect" kindref="compound">wxRect</ref> &amp;</type>
        <definition>const wxRect&amp; wxComboCtrl::GetTextRect</definition>
        <argsstring>() const</argsstring>
        <name>GetTextRect</name>
        <briefdescription>
<para>Returns area covered by the text field (includes everything except borders and the dropdown button). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/combo.h" line="598" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1a105ca33172777b4722d62f1b8a6bb3cd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>virtual wxString wxComboCtrl::GetValue</definition>
        <argsstring>() const</argsstring>
        <name>GetValue</name>
        <reimplements refid="classwx_text_entry_1a39335d9009b2053b5daf850c7b9d2974">GetValue</reimplements>
        <briefdescription>
<para>Returns text representation of the current value. </para>        </briefdescription>
        <detaileddescription>
<para>For writable combo control it always returns the value in the text field. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/combo.h" line="604" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1a73d2d6ede7bdc0db63c08f81cd09a5e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxComboCtrl::HidePopup</definition>
        <argsstring>(bool generateEvent=false)</argsstring>
        <name>HidePopup</name>
        <param>
          <type>bool</type>
          <declname>generateEvent</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Dismisses the popup window. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>generateEvent</parametername>
</parameternamelist>
<parameterdescription>
<para>Set this to true in order to generate <computeroutput>wxEVT_COMBOBOX_CLOSEUP</computeroutput> event.</para></parameterdescription>
</parameteritem>
</parameterlist>
<xrefsect id="deprecated_1_deprecated000007"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use <ref refid="classwx_combo_ctrl_1a56867b1c18641c21fcd518ce43efbf99" kindref="member">Dismiss()</ref> instead. </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/combo.h" line="615" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1afb29fcf34147d9c38694806e1afc1dde" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxComboCtrl::IsPopupShown</definition>
        <argsstring>() const</argsstring>
        <name>IsPopupShown</name>
        <briefdescription>
<para>Returns true if the popup is currently shown. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/combo.h" line="620" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1a499f87e1aa355eb69b1a61bea9165965" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxComboCtrl::IsPopupWindowState</definition>
        <argsstring>(int state) const</argsstring>
        <name>IsPopupWindowState</name>
        <param>
          <type>int</type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Returns true if the popup window is in the given state. </para>        </briefdescription>
        <detaileddescription>
<para>Possible values are:</para><para><table rows="3" cols="2"><row>
<entry thead="no"><para>wxComboCtrl::Hidden </para></entry><entry thead="no"><para>Popup window is hidden. </para></entry></row>
<row>
<entry thead="no"><para>wxComboCtrl::Animating </para></entry><entry thead="no"><para>Popup window is being shown, but the popup animation has not yet finished. </para></entry></row>
<row>
<entry thead="no"><para>wxComboCtrl::Visible </para></entry><entry thead="no"><para>Popup window is fully visible. </para></entry></row>
</table>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/combo.h" line="633" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1a3ce1fce108f3a84216fa9983d6b89a37" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxComboCtrl::OnButtonClick</definition>
        <argsstring>()</argsstring>
        <name>OnButtonClick</name>
        <briefdescription>
<para>Implement in a derived class to define what happens on dropdown button click. </para>        </briefdescription>
        <detaileddescription>
<para>Default action is to show the popup.</para><para><simplesect kind="note"><para>If you implement this to do something else than show the popup, you must then also implement <ref refid="classwx_combo_ctrl_1a0df7ddd8eb5454a2d3f72eb805848fa9" kindref="member">DoSetPopupControl()</ref> to always return NULL. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/combo.h" line="643" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1a361e1a0db2dceb5aa7749ad5a158e49c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxComboCtrl::Paste</definition>
        <argsstring>()</argsstring>
        <name>Paste</name>
        <reimplements refid="classwx_text_entry_1a5889d0d240e603e32c11bd580b65b3d7">Paste</reimplements>
        <briefdescription>
<para>Pastes text from the clipboard to the text field. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/combo.h" line="648" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1afda0208f5c2a31d504e230c36546fe8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxComboCtrl::Popup</definition>
        <argsstring>()</argsstring>
        <name>Popup</name>
        <briefdescription>
<para>Shows the popup portion of the combo control. </para>        </briefdescription>
        <detaileddescription>
<para>Notice that calling this function will generate a <computeroutput>wxEVT_COMBOBOX_DROPDOWN</computeroutput> event.</para><para><simplesect kind="since"><para>2.9.2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/combo.h" line="658" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1a20b2fecf36f2c5559fe1333f706681ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxComboCtrl::Remove</definition>
        <argsstring>(long from, long to)</argsstring>
        <name>Remove</name>
        <reimplements refid="classwx_text_entry_1ab38f2786becabdacf27c7e31a2922bcc">Remove</reimplements>
        <param>
          <type>long</type>
          <declname>from</declname>
        </param>
        <param>
          <type>long</type>
          <declname>to</declname>
        </param>
        <briefdescription>
<para>Removes the text between the two positions in the combo control text field. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>from</parametername>
</parameternamelist>
<parameterdescription>
<para>The first position. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>to</parametername>
</parameternamelist>
<parameterdescription>
<para>The last position. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/combo.h" line="669" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1ab3c5214e81069bb594fa230a77b02da8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxComboCtrl::Replace</definition>
        <argsstring>(long from, long to, const wxString &amp;text)</argsstring>
        <name>Replace</name>
        <reimplements refid="classwx_text_entry_1a1fb3ac76d270b2c64cff595497815f8d">Replace</reimplements>
        <param>
          <type>long</type>
          <declname>from</declname>
        </param>
        <param>
          <type>long</type>
          <declname>to</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>text</declname>
        </param>
        <briefdescription>
<para>Replaces the text between two positions with the given text, in the combo control text field. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>from</parametername>
</parameternamelist>
<parameterdescription>
<para>The first position. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>to</parametername>
</parameternamelist>
<parameterdescription>
<para>The second position. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>text</parametername>
</parameternamelist>
<parameterdescription>
<para>The text to insert. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/combo.h" line="682" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1adc5fdec92913ba1ffdec20548106376b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxComboCtrl::SetButtonBitmaps</definition>
        <argsstring>(const wxBitmap &amp;bmpNormal, bool pushButtonBg=false, const wxBitmap &amp;bmpPressed=wxNullBitmap, const wxBitmap &amp;bmpHover=wxNullBitmap, const wxBitmap &amp;bmpDisabled=wxNullBitmap)</argsstring>
        <name>SetButtonBitmaps</name>
        <param>
          <type>const <ref refid="classwx_bitmap" kindref="compound">wxBitmap</ref> &amp;</type>
          <declname>bmpNormal</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>pushButtonBg</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>const <ref refid="classwx_bitmap" kindref="compound">wxBitmap</ref> &amp;</type>
          <declname>bmpPressed</declname>
          <defval><ref refid="interface_2wx_2bitmap_8h_1a2947690e84b8fdb2e37b79a4af8f8a21" kindref="member">wxNullBitmap</ref></defval>
        </param>
        <param>
          <type>const <ref refid="classwx_bitmap" kindref="compound">wxBitmap</ref> &amp;</type>
          <declname>bmpHover</declname>
          <defval><ref refid="interface_2wx_2bitmap_8h_1a2947690e84b8fdb2e37b79a4af8f8a21" kindref="member">wxNullBitmap</ref></defval>
        </param>
        <param>
          <type>const <ref refid="classwx_bitmap" kindref="compound">wxBitmap</ref> &amp;</type>
          <declname>bmpDisabled</declname>
          <defval><ref refid="interface_2wx_2bitmap_8h_1a2947690e84b8fdb2e37b79a4af8f8a21" kindref="member">wxNullBitmap</ref></defval>
        </param>
        <briefdescription>
<para>Sets custom dropdown button graphics. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bmpNormal</parametername>
</parameternamelist>
<parameterdescription>
<para>Default button image. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pushButtonBg</parametername>
</parameternamelist>
<parameterdescription>
<para>If true, blank push button background is painted below the image. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bmpPressed</parametername>
</parameternamelist>
<parameterdescription>
<para>Depressed button image. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bmpHover</parametername>
</parameternamelist>
<parameterdescription>
<para>Button image when mouse hovers above it. This should be ignored on platforms and themes that do not generally draw different kind of button on mouse hover. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bmpDisabled</parametername>
</parameternamelist>
<parameterdescription>
<para>Disabled button image. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/combo.h" line="700" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1aa0ffd3528d66f15bfd3c0da78117ebad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxComboCtrl::SetButtonPosition</definition>
        <argsstring>(int width=-1, int height=-1, int side=wxRIGHT, int spacingX=0)</argsstring>
        <name>SetButtonPosition</name>
        <param>
          <type>int</type>
          <declname>width</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>int</type>
          <declname>side</declname>
          <defval><ref refid="defs_8h_1ac0f30319732dcceda470516918ff3556a2b2d18b748d21a493f82e589f1a05746" kindref="member">wxRIGHT</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>spacingX</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Sets size and position of dropdown button. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>Button width. Value = 0 specifies default. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>Button height. Value = 0 specifies default. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>side</parametername>
</parameternamelist>
<parameterdescription>
<para>Indicates which side the button will be placed. Value can be wxLEFT or wxRIGHT. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>spacingX</parametername>
</parameternamelist>
<parameterdescription>
<para>Horizontal spacing around the button. Default is 0. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/combo.h" line="719" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1af0b54e5e4f71efc63464ceb44f1497d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxComboCtrl::SetCustomPaintWidth</definition>
        <argsstring>(int width)</argsstring>
        <name>SetCustomPaintWidth</name>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <briefdescription>
<para>Set width, in pixels, of custom painted area in control without <computeroutput>wxCB_READONLY</computeroutput> style. </para>        </briefdescription>
        <detaileddescription>
<para>In read-only <ref refid="classwx_owner_drawn_combo_box" kindref="compound">wxOwnerDrawnComboBox</ref>, this is used to indicate area that is not covered by the focus rectangle. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/combo.h" line="727" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1a68221bdd4af63abfd9840e5de13f4ba6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxComboCtrl::SetHint</definition>
        <argsstring>(const wxString &amp;hint)</argsstring>
        <name>SetHint</name>
        <reimplements refid="classwx_text_entry_1a4e9dfe958dbd1918c54b45be83f1bed4">SetHint</reimplements>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>hint</declname>
        </param>
        <briefdescription>
<para>Sets a hint shown in an empty unfocused combo control. </para>        </briefdescription>
        <detaileddescription>
<para>Notice that hints are known as <emphasis>cue banners</emphasis> under MSW or <emphasis>placeholder strings</emphasis> under OS X.</para><para><simplesect kind="see"><para><ref refid="classwx_text_entry_1a4e9dfe958dbd1918c54b45be83f1bed4" kindref="member">wxTextEntry::SetHint()</ref></para></simplesect>
<simplesect kind="since"><para>2.9.1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/combo.h" line="739" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1a9ac49217e13edeb905cf640aac627bba" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxComboCtrl::SetInsertionPoint</definition>
        <argsstring>(long pos)</argsstring>
        <name>SetInsertionPoint</name>
        <reimplements refid="classwx_text_entry_1a6e5460ec6e893ecb3e3ce90300373de8">SetInsertionPoint</reimplements>
        <param>
          <type>long</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
<para>Sets the insertion point in the text field. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The new insertion point. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/combo.h" line="747" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1a3b4d25c9166d51a95973176df1b05be4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxComboCtrl::SetInsertionPointEnd</definition>
        <argsstring>()</argsstring>
        <name>SetInsertionPointEnd</name>
        <reimplements refid="classwx_text_entry_1a954a065a2f20da350ae830faff1fff95">SetInsertionPointEnd</reimplements>
        <briefdescription>
<para>Sets the insertion point at the end of the combo control text field. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/combo.h" line="752" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1aac64729c09efde24fbc14d43aa688202" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxComboCtrl::SetPopupAnchor</definition>
        <argsstring>(int anchorSide)</argsstring>
        <name>SetPopupAnchor</name>
        <param>
          <type>int</type>
          <declname>anchorSide</declname>
        </param>
        <briefdescription>
<para>Set side of the control to which the popup will align itself. </para>        </briefdescription>
        <detaileddescription>
<para>Valid values are <computeroutput>wxLEFT</computeroutput>, <computeroutput>wxRIGHT</computeroutput> and 0. The default value 0 means that the most appropriate side is used (which, currently, is always <computeroutput>wxLEFT</computeroutput>). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/combo.h" line="775" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1afb0b22cb38395040699eebcb679fd86a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxComboCtrl::SetPopupControl</definition>
        <argsstring>(wxComboPopup *popup)</argsstring>
        <name>SetPopupControl</name>
        <param>
          <type><ref refid="classwx_combo_popup" kindref="compound">wxComboPopup</ref> *</type>
          <declname>popup</declname>
        </param>
        <briefdescription>
<para>Set popup interface class derived from <ref refid="classwx_combo_popup" kindref="compound">wxComboPopup</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>This method should be called as soon as possible after the control has been created, unless <ref refid="classwx_combo_ctrl_1a3ce1fce108f3a84216fa9983d6b89a37" kindref="member">OnButtonClick()</ref> has been overridden. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/combo.h" line="782" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1add059c3997d6697bc98365f039da17f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxComboCtrl::SetPopupExtents</definition>
        <argsstring>(int extLeft, int extRight)</argsstring>
        <name>SetPopupExtents</name>
        <param>
          <type>int</type>
          <declname>extLeft</declname>
        </param>
        <param>
          <type>int</type>
          <declname>extRight</declname>
        </param>
        <briefdescription>
<para>Extends popup size horizontally, relative to the edges of the combo control. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>extLeft</parametername>
</parameternamelist>
<parameterdescription>
<para>How many pixel to extend beyond the left edge of the control. Default is 0. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>extRight</parametername>
</parameternamelist>
<parameterdescription>
<para>How many pixel to extend beyond the right edge of the control. Default is 0.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="remark"><para>Popup minimum width may override arguments. It is up to the popup to fully take this into account. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/combo.h" line="798" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1a24f043ce5c1287904a899c22f2dc7ce9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxComboCtrl::SetPopupMaxHeight</definition>
        <argsstring>(int height)</argsstring>
        <name>SetPopupMaxHeight</name>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <briefdescription>
<para>Sets preferred maximum height of the popup. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para>Value -1 indicates the default. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/combo.h" line="805" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1aef690d395a8ef2500d2c4ddd2d345d6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxComboCtrl::SetPopupMinWidth</definition>
        <argsstring>(int width)</argsstring>
        <name>SetPopupMinWidth</name>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <briefdescription>
<para>Sets minimum width of the popup. </para>        </briefdescription>
        <detaileddescription>
<para>If wider than combo control, it will extend to the left.</para><para><simplesect kind="remark"><para>Value -1 indicates the default. Also, popup implementation may choose to ignore this. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/combo.h" line="814" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1a62f78126cae07f006685349851340b29" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxComboCtrl::SetSelection</definition>
        <argsstring>(long from, long to)</argsstring>
        <name>SetSelection</name>
        <reimplements refid="classwx_text_entry_1af7e298bc2a34bd646328f53efab766aa">SetSelection</reimplements>
        <param>
          <type>long</type>
          <declname>from</declname>
        </param>
        <param>
          <type>long</type>
          <declname>to</declname>
        </param>
        <briefdescription>
<para>Selects the text between the two positions, in the combo control text field. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>from</parametername>
</parameternamelist>
<parameterdescription>
<para>The first position. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>to</parametername>
</parameternamelist>
<parameterdescription>
<para>The second position. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/combo.h" line="825" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1a738267959dcf2b73430bd310173ebedb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxComboCtrl::SetText</definition>
        <argsstring>(const wxString &amp;value)</argsstring>
        <name>SetText</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets the text for the text field without affecting the popup. </para>        </briefdescription>
        <detaileddescription>
<para>Thus, unlike <ref refid="classwx_combo_ctrl_1a4202edbc9fc83623c658a83fe4c6d7be" kindref="member">SetValue()</ref>, it works equally well with combo control using <computeroutput>wxCB_READONLY</computeroutput> style. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/combo.h" line="832" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1a00188332f7b6200c98f5f65966d5b151" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxComboCtrl::SetTextCtrlStyle</definition>
        <argsstring>(int style)</argsstring>
        <name>SetTextCtrlStyle</name>
        <param>
          <type>int</type>
          <declname>style</declname>
        </param>
        <briefdescription>
<para>Set a custom window style for the embedded <ref refid="classwx_text_ctrl" kindref="compound">wxTextCtrl</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>Usually you will need to use this during two-step creation, just before <ref refid="classwx_combo_ctrl_1aab2390bd7650a56e3d2c243140d28f98" kindref="member">Create()</ref>. For example:</para><para><programlisting><codeline><highlight class="normal">wxComboCtrl*<sp/>comboCtrl<sp/>=<sp/>new<sp/>wxComboCtrl();</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Let&apos;s<sp/>make<sp/>the<sp/>text<sp/>right-aligned</highlight></codeline>
<codeline><highlight class="normal">comboCtrl-&gt;SetTextCtrlStyle(wxTE_RIGHT);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">comboCtrl-&gt;Create(parent,<sp/>wxID_ANY,<sp/>wxEmptyString);</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/combo.h" line="848" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1ae38353a81954d02af302ba103e984cb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxComboCtrl::SetTextIndent</definition>
        <argsstring>(int indent)</argsstring>
        <name>SetTextIndent</name>
        <param>
          <type>int</type>
          <declname>indent</declname>
        </param>
        <briefdescription>
<para>This will set the space in pixels between left edge of the control and the text, regardless whether control is read-only or not. </para>        </briefdescription>
        <detaileddescription>
<para>Value -1 can be given to indicate platform default.</para><para><xrefsect id="deprecated_1_deprecated000008"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use <ref refid="classwx_combo_ctrl_1ae2b983f401d92ccc38f2bed47fb4d76b" kindref="member">SetMargins()</ref> instead. </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/combo.h" line="857" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1a4202edbc9fc83623c658a83fe4c6d7be" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxComboCtrl::SetValue</definition>
        <argsstring>(const wxString &amp;value)</argsstring>
        <name>SetValue</name>
        <reimplements refid="classwx_text_entry_1a90f876b2dd83ba5c97ba0c193b386e9f">SetValue</reimplements>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets the text for the combo control text field. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>For a combo control with <computeroutput>wxCB_READONLY</computeroutput> style the string must be accepted by the popup (for instance, exist in the dropdown list), otherwise the call to <ref refid="classwx_combo_ctrl_1a4202edbc9fc83623c658a83fe4c6d7be" kindref="member">SetValue()</ref> is ignored. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/combo.h" line="866" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1aaa42a7fdfb9061e4901086abcc7120e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxComboCtrl::SetValueByUser</definition>
        <argsstring>(const wxString &amp;value)</argsstring>
        <name>SetValueByUser</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Changes value of the control as if user had done it by selecting an item from a combo box drop-down list. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/combo.h" line="872" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1ae87a04c471bfcac5ab0d370ac9edddbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxComboCtrl::ShowPopup</definition>
        <argsstring>()</argsstring>
        <name>ShowPopup</name>
        <briefdescription>
<para>Show the popup. </para>        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000009"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use <ref refid="classwx_combo_ctrl_1afda0208f5c2a31d504e230c36546fe8d" kindref="member">Popup()</ref> instead. </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/combo.h" line="879" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1a9da1ff37488b9c33ed02ba2064ad6d85" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxComboCtrl::Undo</definition>
        <argsstring>()</argsstring>
        <name>Undo</name>
        <reimplements refid="classwx_text_entry_1ad3784d539a2554c6eec76c80aa6d97de">Undo</reimplements>
        <briefdescription>
<para>Undoes the last edit in the text field. </para>        </briefdescription>
        <detaileddescription>
<para>Windows only. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/combo.h" line="884" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1a5b8f90d12149fe7e3f1e38e0dd0b839a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxComboCtrl::UseAltPopupWindow</definition>
        <argsstring>(bool enable=true)</argsstring>
        <name>UseAltPopupWindow</name>
        <param>
          <type>bool</type>
          <declname>enable</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Enable or disable usage of an alternative popup window, which guarantees ability to focus the popup control, and allows common native controls to function normally. </para>        </briefdescription>
        <detaileddescription>
<para>This alternative popup window is usually a <ref refid="classwx_dialog" kindref="compound">wxDialog</ref>, and as such, when it is shown, its parent top-level window will appear as if the focus has been lost from it. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/combo.h" line="893" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classwx_combo_ctrl_1a10be4d02e6e2bb6a3708aa19ebf45b97" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int wxComboCtrl::GetFeatures</definition>
        <argsstring>()</argsstring>
        <name>GetFeatures</name>
        <briefdescription>
<para>Returns features supported by <ref refid="classwx_combo_ctrl" kindref="compound">wxComboCtrl</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>If needed feature is missing, you need to instead use wxGenericComboCtrl, which however may lack a native look and feel (but otherwise sports identical API).</para><para><simplesect kind="return"><para>Value returned is a combination of the flags defined in <ref refid="structwx_combo_ctrl_features" kindref="compound">wxComboCtrlFeatures</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/combo.h" line="534" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classwx_combo_ctrl_1aa398643bec7f53aa8442b10c6b6782de" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxComboCtrl::AnimateShow</definition>
        <argsstring>(const wxRect &amp;rect, int flags)</argsstring>
        <name>AnimateShow</name>
        <param>
          <type>const <ref refid="classwx_rect" kindref="compound">wxRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>This member function is not normally called in application code. </para>        </briefdescription>
        <detaileddescription>
<para>Instead, it can be implemented in a derived class to create a custom popup animation.</para><para>The parameters are the same as those for <ref refid="classwx_combo_ctrl_1a1c7a534296a4668e49737f599d54aa14" kindref="member">DoShowPopup()</ref>.</para><para><simplesect kind="return"><para>true if animation finishes before the function returns, false otherwise. In the latter case you need to manually call <ref refid="classwx_combo_ctrl_1a1c7a534296a4668e49737f599d54aa14" kindref="member">DoShowPopup()</ref> after the animation ends. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/combo.h" line="908" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1a0df7ddd8eb5454a2d3f72eb805848fa9" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxComboCtrl::DoSetPopupControl</definition>
        <argsstring>(wxComboPopup *popup)</argsstring>
        <name>DoSetPopupControl</name>
        <param>
          <type><ref refid="classwx_combo_popup" kindref="compound">wxComboPopup</ref> *</type>
          <declname>popup</declname>
        </param>
        <briefdescription>
<para>This member function is not normally called in application code. </para>        </briefdescription>
        <detaileddescription>
<para>Instead, it can be implemented in a derived class to return default <ref refid="classwx_combo_popup" kindref="compound">wxComboPopup</ref>, in case <emphasis>popup</emphasis> is NULL.</para><para><simplesect kind="note"><para>If you have implemented <ref refid="classwx_combo_ctrl_1a3ce1fce108f3a84216fa9983d6b89a37" kindref="member">OnButtonClick()</ref> to do something else than show the popup, then <ref refid="classwx_combo_ctrl_1a0df7ddd8eb5454a2d3f72eb805848fa9" kindref="member">DoSetPopupControl()</ref> must always set <emphasis>popup</emphasis> to NULL. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/combo.h" line="919" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_combo_ctrl_1a1c7a534296a4668e49737f599d54aa14" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxComboCtrl::DoShowPopup</definition>
        <argsstring>(const wxRect &amp;rect, int flags)</argsstring>
        <name>DoShowPopup</name>
        <param>
          <type>const <ref refid="classwx_rect" kindref="compound">wxRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>This member function is not normally called in application code. </para>        </briefdescription>
        <detaileddescription>
<para>Instead, it must be called in a derived class to make sure popup is properly shown after a popup animation has finished (but only if <ref refid="classwx_combo_ctrl_1aa398643bec7f53aa8442b10c6b6782de" kindref="member">AnimateShow()</ref> did not finish the animation within its function scope).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rect</parametername>
</parameternamelist>
<parameterdescription>
<para>Position to show the popup window at, in screen coordinates. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Combination of any of the following: <table rows="2" cols="2"><row>
<entry thead="no"><para>wxComboCtrl::ShowAbove </para></entry><entry thead="no"><para>Popup is shown above the control instead of below. </para></entry></row>
<row>
<entry thead="no"><para>wxComboCtrl::CanDeferShow </para></entry><entry thead="no"><para>Showing the popup can be deferred to happen sometime after <ref refid="classwx_combo_ctrl_1ae87a04c471bfcac5ab0d370ac9edddbc" kindref="member">ShowPopup()</ref> has finished. In this case, <ref refid="classwx_combo_ctrl_1aa398643bec7f53aa8442b10c6b6782de" kindref="member">AnimateShow()</ref> must return false. </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/combo.h" line="940" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A combo control is a generic combobox that allows totally custom popup. </para>    </briefdescription>
    <detaileddescription>
<para>In addition it has other customization features. For instance, position and size of the dropdown button can be changed.</para><sect1 id="classwx_combo_ctrl_1comboctrl_custompopup">
<title>Setting Custom Popup for wxComboCtrl</title>
<para><ref refid="classwx_combo_ctrl" kindref="compound">wxComboCtrl</ref> needs to be told somehow which control to use and this is done by <ref refid="classwx_combo_ctrl_1afb0b22cb38395040699eebcb679fd86a" kindref="member">SetPopupControl()</ref>. However, we need something more than just a <ref refid="classwx_control" kindref="compound">wxControl</ref> in this method as, for example, we need to call SetStringValue(&quot;initial text value&quot;) and <ref refid="classwx_control" kindref="compound">wxControl</ref> doesn&apos;t have such method. So we also need a <ref refid="classwx_combo_popup" kindref="compound">wxComboPopup</ref> which is an interface which must be implemented by a control to be usable as a popup.</para><para>We couldn&apos;t derive <ref refid="classwx_combo_popup" kindref="compound">wxComboPopup</ref> from <ref refid="classwx_control" kindref="compound">wxControl</ref> as this would make it impossible to have a class deriving from a wxWidgets control and from it, so instead it is just a mix-in.</para><para>Here&apos;s a minimal sample of <ref refid="classwx_list_view" kindref="compound">wxListView</ref> popup:</para><para><programlisting><codeline><highlight class="normal">#include<sp/>&lt;wx/combo.h&gt;</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&lt;wx/listctrl.h&gt;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">class<sp/>wxListViewComboPopup<sp/>:<sp/>public<sp/>wxListView,<sp/>public<sp/>wxComboPopup</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal">public:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Initialize<sp/>member<sp/>variables</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>virtual<sp/>void<sp/>Init()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_value<sp/>=<sp/>-1;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Create<sp/>popup<sp/>control</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>virtual<sp/>bool<sp/>Create(wxWindow*<sp/>parent)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>wxListView::Create(parent,1,wxPoint(0,0),wxDefaultSize);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Return<sp/>pointer<sp/>to<sp/>the<sp/>created<sp/>control</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>virtual<sp/>wxWindow<sp/>*GetControl()<sp/>{<sp/>return<sp/>this;<sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Translate<sp/>string<sp/>into<sp/>a<sp/>list<sp/>selection</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>virtual<sp/>void<sp/>SetStringValue(const<sp/>wxString&amp;<sp/>s)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>n<sp/>=<sp/>wxListView::FindItem(-1,s);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(<sp/>n<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>n<sp/>&lt;<sp/>wxListView::GetItemCount()<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxListView::Select(n);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Get<sp/>list<sp/>selection<sp/>as<sp/>a<sp/>string</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>virtual<sp/>wxString<sp/>GetStringValue()<sp/>const</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(<sp/>m_value<sp/>&gt;=<sp/>0<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>wxListView::GetItemText(m_value);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>wxEmptyString;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Do<sp/>mouse<sp/>hot-tracking<sp/>(which<sp/>is<sp/>typical<sp/>in<sp/>list<sp/>popups)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>OnMouseMove(wxMouseEvent&amp;<sp/>event)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>TODO:<sp/>Move<sp/>selection<sp/>to<sp/>cursor</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>On<sp/>mouse<sp/>left<sp/>up,<sp/>set<sp/>the<sp/>value<sp/>and<sp/>close<sp/>the<sp/>popup</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>OnMouseClick(wxMouseEvent&amp;<sp/>WXUNUSED(event))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_value<sp/>=<sp/>wxListView::GetFirstSelected();</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>TODO:<sp/>Send<sp/>event<sp/>as<sp/>well</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Dismiss();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">protected:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>m_value;<sp/>//<sp/>current<sp/>item<sp/>index</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">private:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>wxDECLARE_EVENT_TABLE();</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">wxBEGIN_EVENT_TABLE(wxListViewComboPopup,<sp/>wxListView)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>EVT_MOTION(wxListViewComboPopup::OnMouseMove)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>EVT_LEFT_UP(wxListViewComboPopup::OnMouseClick)</highlight></codeline>
<codeline><highlight class="normal">wxEND_EVENT_TABLE()</highlight></codeline>
</programlisting></para><para>Here&apos;s how you would create and populate it in a dialog constructor:</para><para><programlisting><codeline><highlight class="normal">wxComboCtrl*<sp/>comboCtrl<sp/>=<sp/>new<sp/>wxComboCtrl(this,<sp/>wxID_ANY,<sp/>wxEmptyString);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">wxListViewComboPopup*<sp/>popupCtrl<sp/>=<sp/>new<sp/>wxListViewComboPopup();</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>It<sp/>is<sp/>important<sp/>to<sp/>call<sp/>SetPopupControl()<sp/>as<sp/>soon<sp/>as<sp/>possible</highlight></codeline>
<codeline><highlight class="normal">comboCtrl-&gt;SetPopupControl(popupCtrl);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Populate<sp/>using<sp/>wxListView<sp/>methods</highlight></codeline>
<codeline><highlight class="normal">popupCtrl-&gt;InsertItem(popupCtrl-&gt;GetItemCount(),<sp/>&quot;First<sp/>Item&quot;);</highlight></codeline>
<codeline><highlight class="normal">popupCtrl-&gt;InsertItem(popupCtrl-&gt;GetItemCount(),<sp/>&quot;Second<sp/>Item&quot;);</highlight></codeline>
<codeline><highlight class="normal">popupCtrl-&gt;InsertItem(popupCtrl-&gt;GetItemCount(),<sp/>&quot;Third<sp/>Item&quot;);</highlight></codeline>
</programlisting></para><para><linebreak/>
<heading level="2">Styles</heading>
</para><para>This class supports the following styles:</para><para> <itemizedlist>
<listitem><para>wxCB_READONLY: Text will not be editable. </para></listitem>
<listitem><para>wxCB_SORT: Sorts the entries in the list alphabetically. </para></listitem>
<listitem><para>wxTE_PROCESS_ENTER: The control will generate the event <computeroutput>wxEVT_TEXT_ENTER</computeroutput> (otherwise pressing Enter key is either processed internally by the control or used for navigation between dialog controls). Windows only. </para></listitem>
<listitem><para>wxCC_SPECIAL_DCLICK: Double-clicking triggers a call to popup&apos;s OnComboDoubleClick. Actual behaviour is defined by a derived class. For instance, <ref refid="classwx_owner_drawn_combo_box" kindref="compound">wxOwnerDrawnComboBox</ref> will cycle an item. This style only applies if wxCB_READONLY is used as well. </para></listitem>
<listitem><para>wxCC_STD_BUTTON: Drop button will behave more like a standard push button. <linebreak/>
 <linebreak/>
<heading level="2">Events emitted by this class</heading>
</para></listitem>
</itemizedlist>
</para><para>The following event handler macros redirect the events to member function handlers &apos;<bold>func</bold>&apos; with prototypes like: void<nonbreakablespace/>handlerFuncName(<ref refid="classwx_command_event" kindref="compound">wxCommandEvent</ref>&amp;<nonbreakablespace/>event)</para><para>Event macros for events emitted by this class: <itemizedlist>
<listitem><para>EVT_TEXT(id,  func): Process a <computeroutput>wxEVT_TEXT</computeroutput> event, when the text changes. </para></listitem>
<listitem><para>EVT_TEXT_ENTER(id,  func): Process a <computeroutput>wxEVT_TEXT_ENTER</computeroutput> event, when RETURN is pressed in the combo control. </para></listitem>
<listitem><para>EVT_COMBOBOX_DROPDOWN(id,  func): Process a <computeroutput>wxEVT_COMBOBOX_DROPDOWN</computeroutput> event, which is generated when the popup window is shown (drops down). </para></listitem>
<listitem><para>EVT_COMBOBOX_CLOSEUP(id,  func): Process a <computeroutput>wxEVT_COMBOBOX_CLOSEUP</computeroutput> event, which is generated when the popup window of the combo control disappears (closes up). You should avoid adding or deleting items in this event. <linebreak/>
 <heading level="2"></heading>
</para></listitem>
</itemizedlist>
Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxcore" kindref="member">wxCore</ref> &lt;&gt;&lt; =&apos;&apos;&gt;:&lt;/&gt;&amp;;&amp;;&lt; =&apos;&apos;&gt;\ &lt;/&gt;&lt;/&gt; <linebreak/>
<image type="html" name="appear-comboctrl-msw.png">wxMSW Appearance</image>
<linebreak/>
<linebreak/>
<image type="html" name="appear-comboctrl-gtk.png">wxGTK Appearance</image>
<linebreak/>
<linebreak/>
<image type="html" name="appear-comboctrl-mac.png">wxOSX Appearance</image>
<linebreak/>
</para><para><simplesect kind="see"><para><ref refid="classwx_combo_box" kindref="compound">wxComboBox</ref>, <ref refid="classwx_choice" kindref="compound">wxChoice</ref>, <ref refid="classwx_owner_drawn_combo_box" kindref="compound">wxOwnerDrawnComboBox</ref>, <ref refid="classwx_combo_popup" kindref="compound">wxComboPopup</ref>, <ref refid="classwx_command_event" kindref="compound">wxCommandEvent</ref> </para></simplesect>
</para></sect1>
    </detaileddescription>
    <inheritancegraph>
      <node id="966">
        <label>wxObject</label>
        <link refid="classwx_object"/>
      </node>
      <node id="965">
        <label>wxEvtHandler</label>
        <link refid="classwx_evt_handler"/>
        <childnode refid="966" relation="public-inheritance">
        </childnode>
        <childnode refid="967" relation="public-inheritance">
        </childnode>
      </node>
      <node id="967">
        <label>wxTrackable</label>
        <link refid="classwx_trackable"/>
      </node>
      <node id="968">
        <label>wxTextEntry</label>
        <link refid="classwx_text_entry"/>
      </node>
      <node id="963">
        <label>wxControl</label>
        <link refid="classwx_control"/>
        <childnode refid="964" relation="public-inheritance">
        </childnode>
      </node>
      <node id="964">
        <label>wxWindow</label>
        <link refid="classwx_window"/>
        <childnode refid="965" relation="public-inheritance">
        </childnode>
      </node>
      <node id="962">
        <label>wxComboCtrl</label>
        <link refid="classwx_combo_ctrl"/>
        <childnode refid="963" relation="public-inheritance">
        </childnode>
        <childnode refid="968" relation="public-inheritance">
        </childnode>
      </node>
      <node id="969">
        <label>wxOwnerDrawnComboBox</label>
        <link refid="classwx_owner_drawn_combo_box"/>
        <childnode refid="962" relation="public-inheritance">
        </childnode>
      </node>
      <node id="970">
        <label>wxRichTextStyleComboCtrl</label>
        <link refid="classwx_rich_text_style_combo_ctrl"/>
        <childnode refid="962" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="975">
        <label>wxObject</label>
        <link refid="classwx_object"/>
        <childnode refid="976" relation="usage">
          <edgelabel>m_refData</edgelabel>
        </childnode>
      </node>
      <node id="974">
        <label>wxEvtHandler</label>
        <link refid="classwx_evt_handler"/>
        <childnode refid="975" relation="public-inheritance">
        </childnode>
        <childnode refid="977" relation="public-inheritance">
        </childnode>
      </node>
      <node id="977">
        <label>wxTrackable</label>
        <link refid="classwx_trackable"/>
      </node>
      <node id="978">
        <label>wxTextEntry</label>
        <link refid="classwx_text_entry"/>
      </node>
      <node id="972">
        <label>wxControl</label>
        <link refid="classwx_control"/>
        <childnode refid="973" relation="public-inheritance">
        </childnode>
      </node>
      <node id="973">
        <label>wxWindow</label>
        <link refid="classwx_window"/>
        <childnode refid="974" relation="public-inheritance">
        </childnode>
      </node>
      <node id="971">
        <label>wxComboCtrl</label>
        <link refid="classwx_combo_ctrl"/>
        <childnode refid="972" relation="public-inheritance">
        </childnode>
        <childnode refid="978" relation="public-inheritance">
        </childnode>
      </node>
      <node id="976">
        <label>wxObjectRefData</label>
        <link refid="classwx_object_ref_data"/>
      </node>
    </collaborationgraph>
    <location file="interface/wx/combo.h" line="369" column="1" bodyfile="interface/wx/combo.h" bodystart="367" bodyend="941"/>
    <listofallmembers>
      <member refid="classwx_window_1a1da8baa734b9872d0c085b86a7b5d817" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>AcceptsFocus</name></member>
      <member refid="classwx_window_1a3a0cb3bd5e82462b19df9f24ad6d9ac4" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>AcceptsFocusFromKeyboard</name></member>
      <member refid="classwx_window_1af0c30b930ecf57f94b8cfc8871e8fd94" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>AcceptsFocusRecursively</name></member>
      <member refid="classwx_window_1abf60159278059a5bb397eb8647227bb3" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>AddChild</name></member>
      <member refid="classwx_evt_handler_1a7dc3c701781f4044372049de5004137e" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>AddFilter</name></member>
      <member refid="classwx_window_1a774b5b5548a6258727b5e2099e63ae9a" prot="protected" virt="virtual"><scope>wxComboCtrl</scope><name>AddPendingEvent</name></member>
      <member refid="classwx_window_1a71d1daa71f1ad1f6cbaac54db7e71af3" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>AdjustForLayoutDirection</name></member>
      <member refid="classwx_object_1a60204063f3cc3aa2fa1c7ff5bda9eb13" prot="protected" virt="non-virtual"><scope>wxComboCtrl</scope><name>AllocExclusive</name></member>
      <member refid="classwx_window_1aae29552806a328c6a55ef8f07647f5ba" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>AlwaysShowScrollbars</name></member>
      <member refid="classwx_combo_ctrl_1aa398643bec7f53aa8442b10c6b6782de" prot="protected" virt="virtual"><scope>wxComboCtrl</scope><name>AnimateShow</name></member>
      <member refid="classwx_text_entry_1af80b5a51906ca9c65fa6cdaa9640768b" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>AppendText</name></member>
      <member refid="classwx_text_entry_1ad911d59d6b381a20b0a6c34df2ac1d9f" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>AutoComplete</name></member>
      <member refid="classwx_text_entry_1ae8ca40185ba6bbaacb4715039d73342b" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>AutoComplete</name></member>
      <member refid="classwx_text_entry_1ab02338d68d51f103551454298578851c" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>AutoCompleteDirectories</name></member>
      <member refid="classwx_text_entry_1ad40d7e35d8bb9c9ab8e4ffa1b801a5d5" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>AutoCompleteFileNames</name></member>
      <member refid="classwx_window_1ab4cea6ace96193b5c4282e097a6fbfee" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>BeginRepositioningChildren</name></member>
      <member refid="classwx_evt_handler_1a0f30c8fa5583b4a5f661897d63de3b62" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>Bind</name></member>
      <member refid="classwx_evt_handler_1a03cc68ca201fb79c7e837919025be71a" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>Bind</name></member>
      <member refid="classwx_window_1a11b5d8d94efd0ab52eb2c95a6aa88cdf" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>CacheBestSize</name></member>
      <member refid="classwx_evt_handler_1a63c7351618fd77330d80a250b3719519" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>CallAfter</name></member>
      <member refid="classwx_evt_handler_1a910416e4d0b1f38cec02213b8a0c6a12" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>CallAfter</name></member>
      <member refid="classwx_window_1acc4e456ed056a27ec61cd296b96c1e3e" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>CanAcceptFocus</name></member>
      <member refid="classwx_window_1ade15bb13dc6d51a8e6ecd49eb3f0f99b" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>CanAcceptFocusFromKeyboard</name></member>
      <member refid="classwx_text_entry_1a620eaa062c530c194dd3a079991c1167" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>CanCopy</name></member>
      <member refid="classwx_text_entry_1a5f680c7b00d718f295e09288d3a16b66" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>CanCut</name></member>
      <member refid="classwx_text_entry_1ae03fe0c746bd7230fc02eb7df8d7650c" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>CanPaste</name></member>
      <member refid="classwx_text_entry_1ab99240d67d8c82511ea3954a1c68ca77" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>CanRedo</name></member>
      <member refid="classwx_window_1a6b5bbd3bf890f98897187879152ad97a" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>CanScroll</name></member>
      <member refid="classwx_window_1a64f7f6fb75bf4b7281e1d33542d523c7" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>CanSetTransparent</name></member>
      <member refid="classwx_text_entry_1a7c7e533085c5e4cf61450ccf2ea7a5ed" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>CanUndo</name></member>
      <member refid="classwx_window_1a5c72c6260a73ef77bb0b1f7ec85fcfef" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>CaptureMouse</name></member>
      <member refid="classwx_window_1a06c0ecb262995b40083bfb446a6cff99" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>Center</name></member>
      <member refid="classwx_window_1a2dc4e0a85d33fc55cc9650eaea1da0a4" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>CenterOnParent</name></member>
      <member refid="classwx_window_1a4a1819eeee3f2143cdde4f329ffde787" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>Centre</name></member>
      <member refid="classwx_window_1ab8e9b91b0e2db344fd71259616dfd433" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>CentreOnParent</name></member>
      <member refid="classwx_text_entry_1a8c52ab71f51c8f80556c2c8e763cbca1" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>ChangeValue</name></member>
      <member refid="classwx_text_entry_1a98b8e3fab8a5ac9944c2cefbb09ab3a7" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>Clear</name></member>
      <member refid="classwx_window_1a61e833684ee5c89775e91e88be1a9a52" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>ClearBackground</name></member>
      <member refid="classwx_window_1af5e852c8695297c0328f1dfe3908605a" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>ClientToScreen</name></member>
      <member refid="classwx_window_1add6f5472d0d8fe0074145a886568721c" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>ClientToScreen</name></member>
      <member refid="classwx_window_1a5c72ca7de40d4e99aff55e79aad3962e" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>ClientToWindowSize</name></member>
      <member refid="classwx_object_1a436fc8fe68cf8a31000296d9cd3d2427" prot="protected" virt="virtual"><scope>wxComboCtrl</scope><name>CloneRefData</name></member>
      <member refid="classwx_window_1a3e44f4a494fc9ef4346c4fba70c8de0c" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>Close</name></member>
      <member refid="classwx_control_1a8cd7ac81debaf506d6d146528c3d9a82" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>Command</name></member>
      <member refid="classwx_evt_handler_1a78719e8b82c9f9c6e4056b3449df1943" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>Connect</name></member>
      <member refid="classwx_evt_handler_1a1e8b5fc4c7e7f6d32d40bc00d4108ba4" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>Connect</name></member>
      <member refid="classwx_evt_handler_1aa290d9b67348e74c1da8497955a4e35c" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>Connect</name></member>
      <member refid="classwx_window_1a3dbe034120d742c4f5f6d64dc5d69590" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>ConvertDialogToPixels</name></member>
      <member refid="classwx_window_1ad70d63964459bb21f81bc0b1f09e84f4" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>ConvertDialogToPixels</name></member>
      <member refid="classwx_window_1a321de67666eff37b39556802c8029201" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>ConvertPixelsToDialog</name></member>
      <member refid="classwx_window_1a533552c4673c7a11f05bf9261b4dff5c" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>ConvertPixelsToDialog</name></member>
      <member refid="classwx_combo_ctrl_1a6feecca8942afd49ac29ff62936299c4" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>Copy</name></member>
      <member refid="classwx_combo_ctrl_1aab2390bd7650a56e3d2c243140d28f98" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>Create</name></member>
      <member refid="classwx_control_1abe23789c94c86907463a0e8434be822a" prot="public" virt="non-virtual" ambiguityscope="wxControl::"><scope>wxComboCtrl</scope><name>Create</name></member>
      <member refid="classwx_window_1a95b7ca8faa033f5ab35458887c07bf38" prot="public" virt="non-virtual" ambiguityscope="wxWindow::"><scope>wxComboCtrl</scope><name>Create</name></member>
      <member refid="classwx_object_1a3f4f497c65cef611e121c41f21dd5ccc" prot="protected" virt="virtual"><scope>wxComboCtrl</scope><name>CreateRefData</name></member>
      <member refid="classwx_combo_ctrl_1a201dce519059e37ad35901f7603afa56" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>Cut</name></member>
      <member refid="classwx_evt_handler_1a6e7f9cf4ebd0623c1d94979855d096f8" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>DeletePendingEvents</name></member>
      <member refid="classwx_window_1a6bf0c5be864544d9ce0560087667b7fc" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>Destroy</name></member>
      <member refid="classwx_window_1aff47b32c8d42d515ea0bb6a6c2fea917" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>DestroyChildren</name></member>
      <member refid="classwx_window_1a26d7329a9a753fa0445501f01f66c41e" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>Disable</name></member>
      <member refid="classwx_evt_handler_1a13061cf0ed01ac10a804ac057ef4bdbc" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>Disconnect</name></member>
      <member refid="classwx_evt_handler_1a2f171e19444b9c4034c5e11f24fa9c91" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>Disconnect</name></member>
      <member refid="classwx_evt_handler_1a16a6f823853e4b74b43dd9a2cf3abee6" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>Disconnect</name></member>
      <member refid="classwx_combo_ctrl_1a56867b1c18641c21fcd518ce43efbf99" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>Dismiss</name></member>
      <member refid="classwx_window_1a2d10b472a4962d1c852c83d55252c44b" prot="protected" virt="virtual"><scope>wxComboCtrl</scope><name>DoCentre</name></member>
      <member refid="classwx_window_1ae07ab0b5cabb750f4e396b6c95e4abf7" prot="protected" virt="virtual"><scope>wxComboCtrl</scope><name>DoGetBestClientHeight</name></member>
      <member refid="classwx_window_1a68f3ec28a29b2a514b20c3e80255d82e" prot="protected" virt="virtual"><scope>wxComboCtrl</scope><name>DoGetBestClientSize</name></member>
      <member refid="classwx_window_1ac68cb9912dc456e2faa8c745b2437b75" prot="protected" virt="virtual"><scope>wxComboCtrl</scope><name>DoGetBestClientWidth</name></member>
      <member refid="classwx_window_1aac6408f1814dce3f8332cc69fe5104f1" prot="protected" virt="virtual"><scope>wxComboCtrl</scope><name>DoGetBestSize</name></member>
      <member refid="classwx_combo_ctrl_1a0df7ddd8eb5454a2d3f72eb805848fa9" prot="protected" virt="virtual"><scope>wxComboCtrl</scope><name>DoSetPopupControl</name></member>
      <member refid="classwx_combo_ctrl_1a1c7a534296a4668e49737f599d54aa14" prot="protected" virt="virtual"><scope>wxComboCtrl</scope><name>DoShowPopup</name></member>
      <member refid="classwx_window_1ae8a84a80645e99f4d24a22e5c386f626" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>DoUpdateWindowUI</name></member>
      <member refid="classwx_window_1a7e7015bc61bd79b6821d2dccaecf9eda" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>DragAcceptFiles</name></member>
      <member refid="classwx_control_1a0bb834cae2a8986aceddb89f84ef4ed1" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>Ellipsize</name></member>
      <member refid="classwx_window_1a4e933aa891f42fbb3b87438057c573af" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>Enable</name></member>
      <member refid="classwx_combo_ctrl_1ae90d978c054d1ce215758c6073c43d31" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>EnablePopupAnimation</name></member>
      <member refid="classwx_window_1a1203fbd238d781253b44e0e459532301" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>EndRepositioningChildren</name></member>
      <member refid="classwx_control_1abdbd9c0684856546671e759dd95b23d4" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>EscapeMnemonics</name></member>
      <member refid="classwx_window_1a777258379a3eef1b0530f12db6b77cab" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>FindFocus</name></member>
      <member refid="classwx_window_1a619b5743645b86054aa3fff12ba4c7ce" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>FindWindow</name></member>
      <member refid="classwx_window_1a3b2f2c9b6346bdb3dcba0edfd9a7f224" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>FindWindow</name></member>
      <member refid="classwx_window_1a101201b12ccd5fba49fa06ed19b5c6fb" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>FindWindowById</name></member>
      <member refid="classwx_window_1ab8eb148fffae109e0fac86e88d569670" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>FindWindowByLabel</name></member>
      <member refid="classwx_window_1adbe4eea02f615313c12a2c00557a44c3" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>FindWindowByName</name></member>
      <member refid="classwx_window_1a2bf38a6cbd1f82fb46f274396f482994" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>Fit</name></member>
      <member refid="classwx_window_1a55aca401aab29d59f7cc53f89ba2e38d" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>FitInside</name></member>
      <member refid="classwx_window_1a15c678314cfc1d807196bc298b713ed3" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>Freeze</name></member>
      <member refid="classwx_window_1aefc02d7275010ebb8d5b66569e7287c4" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetAcceleratorTable</name></member>
      <member refid="classwx_window_1ae0469b554e9c501b356b3ed4b6d8a3af" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetAccessible</name></member>
      <member refid="classwx_window_1a64e3f936ab812d24966827ea4e0f15c0" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetAutoLayout</name></member>
      <member refid="classwx_window_1af51668ec32e9e44db45574a15ec215b4" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetBackgroundColour</name></member>
      <member refid="classwx_window_1a4f09e6a20858a0667df3dda44715d6b9" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>GetBackgroundStyle</name></member>
      <member refid="classwx_window_1a9ec151255cbb44935136d9bbff31a082" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetBestHeight</name></member>
      <member refid="classwx_window_1ae507a81d682023383e465d8e913595b6" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetBestSize</name></member>
      <member refid="classwx_window_1a1e4b09c35c0e5495905da45c1580709d" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>GetBestVirtualSize</name></member>
      <member refid="classwx_window_1a5c797a38418a6f2fb79f800112ec73b0" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetBestWidth</name></member>
      <member refid="classwx_combo_ctrl_1af385dc87ddb020d13ae9c882436afaf5" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetBitmapDisabled</name></member>
      <member refid="classwx_combo_ctrl_1aa49862ed4b6d30ab8d41edc1a23ab964" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetBitmapHover</name></member>
      <member refid="classwx_combo_ctrl_1a07bcb9503da831f64ac36379bbbbbe42" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetBitmapNormal</name></member>
      <member refid="classwx_combo_ctrl_1aa9d68d8f73b9bb4b5594ce86d0b06f51" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetBitmapPressed</name></member>
      <member refid="classwx_window_1a42908ba076f2a93ee81201dc151c3b23" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetBorder</name></member>
      <member refid="classwx_window_1a94e3a0ce6c1aae57562678996adbf2fd" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetBorder</name></member>
      <member refid="classwx_combo_ctrl_1ab6e1596a4b709465e0b07362a3c7dad2" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetButtonSize</name></member>
      <member refid="classwx_window_1a483d3f73925bd38c3964dad058672f0a" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetCapture</name></member>
      <member refid="classwx_window_1a2ee3eba6dbfb37944ed0ce03383bfc34" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetCaret</name></member>
      <member refid="classwx_window_1aa488520238094f858bea3c3a2c6b9809" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>GetCharHeight</name></member>
      <member refid="classwx_window_1a8f92c15635a44b85392d16f5906c31ef" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>GetCharWidth</name></member>
      <member refid="classwx_window_1ad500085ad0511879b5e018706c91a494" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetChildren</name></member>
      <member refid="classwx_window_1afcd1cf1f16e375d00b8d0885997adc90" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetChildren</name></member>
      <member refid="classwx_window_1a170d85e4aa0cbacbfcdd0728120e1417" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetClassDefaultAttributes</name></member>
      <member refid="classwx_object_1ae6d365f2556b26767ced8410c5e839d0" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>GetClassInfo</name></member>
      <member refid="classwx_window_1a4a1b567002d1039bc630885fc09808ae" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>GetClientAreaOrigin</name></member>
      <member refid="classwx_evt_handler_1a291bc92c1bea8abfff276a8e333d46db" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetClientData</name></member>
      <member refid="classwx_evt_handler_1a371742bda1686e82065f3a1f2acb31c8" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetClientObject</name></member>
      <member refid="classwx_window_1a5c6428c6aa8634b5c5963d1d0eaa75c7" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetClientRect</name></member>
      <member refid="classwx_window_1ad34d4bbd6d3064aa56e7a2cc3ee97be3" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetClientSize</name></member>
      <member refid="classwx_window_1a13d04f24ab78611f895bc40776118e90" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetClientSize</name></member>
      <member refid="classwx_window_1ade068146db3eea2adcde2533de17473b" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetConstraints</name></member>
      <member refid="classwx_window_1aec50a3057efbfb35ad16f433603f6f00" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetContainingSizer</name></member>
      <member refid="classwx_window_1a7070700104b0f739260a8d803c64e0e1" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>GetContentScaleFactor</name></member>
      <member refid="classwx_window_1aa467591bdb0ae14a625045553e62a120" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetCursor</name></member>
      <member refid="classwx_combo_ctrl_1ae4d95947e551ad7818b60aabf718e84c" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetCustomPaintWidth</name></member>
      <member refid="classwx_window_1a377de92ac032b60a9241fab88efdbf11" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>GetDefaultAttributes</name></member>
      <member refid="classwx_window_1ae4bec3096f7e13eec8a537aa24cd6112" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>GetDropTarget</name></member>
      <member refid="classwx_window_1aa88f6c4946d1ae4821aca652efbf7c62" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>GetEffectiveMinSize</name></member>
      <member refid="classwx_window_1ad54b0c1662006da89d7e5bf8a64f93eb" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetEventHandler</name></member>
      <member refid="classwx_evt_handler_1a7742d81c5eb7849a0ad75b9de8575153" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetEvtHandlerEnabled</name></member>
      <member refid="classwx_window_1a0db5cd18ab5166b44da9d07f92bb5070" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetExtraStyle</name></member>
      <member refid="classwx_combo_ctrl_1a10be4d02e6e2bb6a3708aa19ebf45b97" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetFeatures</name></member>
      <member refid="classwx_window_1af25f8a799106d61b50d3ee796ba43728" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetFont</name></member>
      <member refid="classwx_window_1ad9a607b86d9175d395f245ecbe00f38b" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetForegroundColour</name></member>
      <member refid="classwx_window_1abe0d47e5d63394b098bdad64eb1a60d2" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetGrandParent</name></member>
      <member refid="classwx_window_1a108426e918ac377fef17662885a7a459" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>GetHandle</name></member>
      <member refid="classwx_window_1acb28971fe25abd1f5c6d768e203a042a" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetHelpText</name></member>
      <member refid="classwx_window_1a7d11a419fede5049d7c12c337e5f5dfc" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>GetHelpTextAtPoint</name></member>
      <member refid="classwx_combo_ctrl_1a0ae5cde4ff44626baad45eac7dbce363" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>GetHint</name></member>
      <member refid="classwx_window_1a79037f68b290bba5811628ec67bf3b24" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetId</name></member>
      <member refid="classwx_combo_ctrl_1a57c790282e3fb7b6f15309f5c9ee4a9a" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>GetInsertionPoint</name></member>
      <member refid="classwx_control_1a9d03cd7f44c4bb1722f39fbc7a5d8cbd" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>GetLabel</name></member>
      <member refid="classwx_control_1a4ec6a7ee61553cd1df77d50491cee820" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetLabelText</name></member>
      <member refid="classwx_control_1ae892fefe6b88168c158e11e975633665" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetLabelText</name></member>
      <member refid="classwx_combo_ctrl_1a9d65dd2965b5cbb81dd8e972cac4379b" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>GetLastPosition</name></member>
      <member refid="classwx_window_1afafd17cbb5dd6d899b25360255e0bdae" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>GetLayoutDirection</name></member>
      <member refid="classwx_combo_ctrl_1a3ee7141dc6069fa9b520cd994d176eff" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetMargins</name></member>
      <member refid="classwx_window_1a6690ee82a5a246e070bf0a7dc4bcb5b3" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>GetMaxClientSize</name></member>
      <member refid="classwx_window_1a98bbe53eddb91b508b0082783402d954" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetMaxHeight</name></member>
      <member refid="classwx_window_1a107966aa1b2d50107b3b95cf0d7d9901" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>GetMaxSize</name></member>
      <member refid="classwx_window_1afde7288b24e48f2d0b5d2c7376f10426" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetMaxWidth</name></member>
      <member refid="classwx_window_1a24d22aacd834cbe6cd5b252fa91c3bd9" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>GetMinClientSize</name></member>
      <member refid="classwx_window_1a81bfd762272d33850c0511d65d896ca3" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetMinHeight</name></member>
      <member refid="classwx_window_1a90ce6ffc8e0af7476157c9e1e6b616df" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>GetMinSize</name></member>
      <member refid="classwx_window_1a327e1a8054d604a34cc5473a8c415e4d" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetMinWidth</name></member>
      <member refid="classwx_window_1a93b9ec7d9eaf152c17f3bf2698551ef4" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>GetName</name></member>
      <member refid="classwx_evt_handler_1addedbed1c9f970c2b1e2893a42805b6a" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetNextHandler</name></member>
      <member refid="classwx_window_1ad256ad684063935d897956a87c932b38" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetNextSibling</name></member>
      <member refid="classwx_window_1a6cd311a6c6ca7329714b969834f679f9" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetParent</name></member>
      <member refid="classwx_combo_ctrl_1aedb72a461632fa31ca5ea84e47fb5433" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetPopupControl</name></member>
      <member refid="classwx_window_1a9b7de6ea85ca926b668ba0682a61a93e" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetPopupMenuSelectionFromUser</name></member>
      <member refid="classwx_window_1a00f5cb3cac003205317a565a33d4bb27" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetPopupMenuSelectionFromUser</name></member>
      <member refid="classwx_combo_ctrl_1a9aaac896e82856aa10aacbeef8a5c198" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetPopupWindow</name></member>
      <member refid="classwx_window_1ac2eece00a4b4b83e1433b59a5d31584f" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetPosition</name></member>
      <member refid="classwx_window_1abfeeca6db664c24603f6371811397e0d" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetPosition</name></member>
      <member refid="classwx_evt_handler_1a69bfde9623d89eb91e363c53616e4587" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetPreviousHandler</name></member>
      <member refid="classwx_window_1a02b3a109f926c86fa1f34a00c1b5ec67" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetPrevSibling</name></member>
      <member refid="classwx_text_entry_1ae568ccd892e44bf89f9918f9ed187af3" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>GetRange</name></member>
      <member refid="classwx_window_1a68e83a724887b18525fdbd947b2d8c88" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetRect</name></member>
      <member refid="classwx_object_1af3c6c76a775864832f1536d3c0de3a2b" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetRefData</name></member>
      <member refid="classwx_window_1a285a81f00ed59fa09938343708938566" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetScreenPosition</name></member>
      <member refid="classwx_window_1a5786c420fd2958bde726c923621700aa" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetScreenPosition</name></member>
      <member refid="classwx_window_1ae8f6c4a201650ad63bb5ebe4f35eb41e" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetScreenRect</name></member>
      <member refid="classwx_window_1add5f4e225e16154f9148451a7d32d0b3" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>GetScrollPos</name></member>
      <member refid="classwx_window_1a23b41cf939ab67a002d8f404ac4cf76b" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>GetScrollRange</name></member>
      <member refid="classwx_window_1ac34f47fef73e3a178e8c335aa38ce567" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>GetScrollThumb</name></member>
      <member refid="classwx_text_entry_1af8d6ff4ff8376bb762987069a69b984b" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>GetSelection</name></member>
      <member refid="classwx_window_1a36ea282508dd55d6f3981ec205ed0449" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetSize</name></member>
      <member refid="classwx_window_1a36bf1ac809da1b0cd9c67fd806c4d9b5" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetSize</name></member>
      <member refid="classwx_control_1a252c7408d6dfa8d70e8dbe88cea9695d" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetSizeFromTextSize</name></member>
      <member refid="classwx_control_1a4d9169af074418aa3528f7b5fca61f94" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetSizeFromTextSize</name></member>
      <member refid="classwx_window_1a01e9d43576615166ee309f4358bdd26d" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetSizer</name></member>
      <member refid="classwx_text_entry_1adac8cae1eef10e198d3f8777d91b2607" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>GetStringSelection</name></member>
      <member refid="classwx_combo_ctrl_1abc9a3ff4939e2cb21e683e15a1389946" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetTextCtrl</name></member>
      <member refid="classwx_window_1a4220668e42f3a173bf29d335da4db2c3" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetTextExtent</name></member>
      <member refid="classwx_window_1a69fc79069821a633eba9c5d917fd8b7b" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetTextExtent</name></member>
      <member refid="classwx_combo_ctrl_1aa7e582babb6a4e0379bccd7d2def16f6" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetTextIndent</name></member>
      <member refid="classwx_combo_ctrl_1a1d6d5a638fd3d653b8f94bdb2e78d944" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetTextRect</name></member>
      <member refid="classwx_window_1a578145344f92cfee755a9c87f6703432" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>GetThemeEnabled</name></member>
      <member refid="classwx_window_1a44eecb46979b528c184e26ce6c52b3fa" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetToolTip</name></member>
      <member refid="classwx_window_1a7e7c9a92f9efbb47073704646db1344e" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetToolTipText</name></member>
      <member refid="classwx_window_1a23370688a951ed60ac25146af854d2ec" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetUpdateClientRect</name></member>
      <member refid="classwx_window_1a522f73fd32e54b11466284acc43f76f3" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetUpdateRegion</name></member>
      <member refid="classwx_window_1a6a332586346cb9ece4a8fe058a7b88c4" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>GetValidator</name></member>
      <member refid="classwx_combo_ctrl_1a105ca33172777b4722d62f1b8a6bb3cd" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>GetValue</name></member>
      <member refid="classwx_window_1a557f92e6c66b6654c95315d4461d0e11" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetVirtualSize</name></member>
      <member refid="classwx_window_1a24cefbb69173899ec4d62460b2932ed9" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetVirtualSize</name></member>
      <member refid="classwx_window_1a21c97d5bcf61c4c664bd33066f5567b1" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>GetWindowBorderSize</name></member>
      <member refid="classwx_window_1a418007123fec131b47d9841ac6d34891" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetWindowStyle</name></member>
      <member refid="classwx_window_1ad67a731cd937a21e561593d4a0c44979" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>GetWindowStyleFlag</name></member>
      <member refid="classwx_window_1a9027305e391de617259407f2c12a54bf" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>GetWindowVariant</name></member>
      <member refid="classwx_window_1a89d1b079de97aac170e999692095872c" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>HandleAsNavigationKey</name></member>
      <member refid="classwx_window_1a89816f1b78c125c59418463caea35c9a" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>HandleWindowEvent</name></member>
      <member refid="classwx_window_1a41e1b77ac82c7420d34b8030d5f26046" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>HasCapture</name></member>
      <member refid="classwx_window_1aeee5333e672a3a510db48d2af37ddee9" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>HasExtraStyle</name></member>
      <member refid="classwx_window_1a3d1d00b4cd51fa3c187e9d609d022aa4" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>HasFlag</name></member>
      <member refid="classwx_window_1adaf042744bdbb8a5f9feccbe7749468a" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>HasFocus</name></member>
      <member refid="classwx_window_1a55c7b73596f2eec2694e8f512013ee81" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>HasMultiplePages</name></member>
      <member refid="classwx_window_1ae50c259b165d9366729734bc124cf184" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>HasScrollbar</name></member>
      <member refid="classwx_window_1ab9cbcb6d6f4a272c2f0342e69a13b59a" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>HasTransparentBackground</name></member>
      <member refid="classwx_window_1a7ed103df04014cb3c59c6a3fb4d95328" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>Hide</name></member>
      <member refid="classwx_combo_ctrl_1a73d2d6ede7bdc0db63c08f81cd09a5e7" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>HidePopup</name></member>
      <member refid="classwx_window_1a5326fbb26557a224507a1c06e5640e89" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>HideWithEffect</name></member>
      <member refid="classwx_window_1ae8705e241daca73105921b72326258b5" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>HitTest</name></member>
      <member refid="classwx_window_1ace65f76df096662bd15722d10c1905c9" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>HitTest</name></member>
      <member refid="classwx_window_1a9fd5b6520c1b30eb8e82bb5d56bc24c0" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>InformFirstDirection</name></member>
      <member refid="classwx_window_1a6b1bf9e099704e7a493b8c4666b1f7f7" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>InheritAttributes</name></member>
      <member refid="classwx_window_1af05b95cfeed0bee6f44797572367b26e" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>InheritsBackgroundColour</name></member>
      <member refid="classwx_window_1aa90a260c0a835a133043460b7d0024a8" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>InitDialog</name></member>
      <member refid="classwx_window_1ae1b56ca87d8590ee5e576012229a380a" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>InvalidateBestSize</name></member>
      <member refid="classwx_window_1a5fd3fba5d43efb67a834c0483a9c3d0e" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>IsBeingDeleted</name></member>
      <member refid="classwx_window_1ab7f60a0c4acdd832a46aabf0d09cd54a" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>IsDescendant</name></member>
      <member refid="classwx_window_1abe7a8c61796262b517f5e0765374cc2b" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>IsDoubleBuffered</name></member>
      <member refid="classwx_text_entry_1ac7191f01863c91397ac844883e588b43" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>IsEditable</name></member>
      <member refid="classwx_text_entry_1ad8353636538ddf3552a074e597b14c2d" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>IsEmpty</name></member>
      <member refid="classwx_window_1a0c186513884fb2020c6af3c62f0913d2" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>IsEnabled</name></member>
      <member refid="classwx_window_1a687120c4b7095481bbc6d483187d0c56" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>IsExposed</name></member>
      <member refid="classwx_window_1afde1844b856787b95afbb686aaaa206d" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>IsExposed</name></member>
      <member refid="classwx_window_1a3017e9cdde376d567ee37b2a96913eca" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>IsExposed</name></member>
      <member refid="classwx_window_1ac4653d89376b9e88afbec8c342d32530" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>IsExposed</name></member>
      <member refid="classwx_window_1ad78eb073c4fe8271caa4c65301a24ee2" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>IsFocusable</name></member>
      <member refid="classwx_window_1adf34f121a9a94fd7159a8818355f2b67" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>IsFrozen</name></member>
      <member refid="classwx_combo_ctrl_1a523036a15ae181059d03f97969fd123b" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>IsKeyPopupToggle</name></member>
      <member refid="classwx_object_1a3c7115ef4132dcee0c4fc34e84d7fced" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>IsKindOf</name></member>
      <member refid="classwx_combo_ctrl_1afb29fcf34147d9c38694806e1afc1dde" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>IsPopupShown</name></member>
      <member refid="classwx_combo_ctrl_1a499f87e1aa355eb69b1a61bea9165965" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>IsPopupWindowState</name></member>
      <member refid="classwx_window_1a77443cb35d15b5006b96a8c5ea0944f6" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>IsRetained</name></member>
      <member refid="classwx_object_1a059373c494c2369d7db2a556efef8ecf" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>IsSameAs</name></member>
      <member refid="classwx_window_1abf4f5068ebf648197ed9ca8ca58f38df" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>IsScrollbarAlwaysShown</name></member>
      <member refid="classwx_window_1ad3544f9c364b7952ac0676217e400061" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>IsShown</name></member>
      <member refid="classwx_window_1ac2722709783e89e76b2eeb7f9f93236a" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>IsShownOnScreen</name></member>
      <member refid="classwx_window_1a1c6a83e5421bb7cfb8a9ad804d251b65" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>IsThisEnabled</name></member>
      <member refid="classwx_window_1afe04dba2155b58429d6c4e0a5a5e1664" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>IsTopLevel</name></member>
      <member refid="classwx_window_1a21c6e2be327062520d9d0aae55b1e8b0" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>IsTransparentBackgroundSupported</name></member>
      <member refid="classwx_evt_handler_1ac0734578a8d929b8b0be440ce0b53ad6" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>IsUnlinked</name></member>
      <member refid="classwx_window_1a1b143c3e72bd0af533b76db4830a6113" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>Layout</name></member>
      <member refid="classwx_window_1ade808784f0e64d9985e2f279b5ca8c02" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>LineDown</name></member>
      <member refid="classwx_window_1afc0816a174ceee6d36d1995c6824a273" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>LineUp</name></member>
      <member refid="classwx_window_1a124944524f36b71385dad8fddaad8ded" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>Lower</name></member>
      <member refid="classwx_object_1a9e31954530a0abd54982effc443ed2b8" prot="protected" virt="non-virtual"><scope>wxComboCtrl</scope><name>m_refData</name></member>
      <member refid="classwx_window_1ab1cb98c8d25b9e6ff7b706b1446c3df7" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>Move</name></member>
      <member refid="classwx_window_1a22a22c1e23ca05776707e7999d8047fe" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>Move</name></member>
      <member refid="classwx_window_1a79e66079125e8420de269811bdb6f2b6" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>MoveAfterInTabOrder</name></member>
      <member refid="classwx_window_1af2b92f61cd9f9e2e0efe4cce307e25b1" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>MoveBeforeInTabOrder</name></member>
      <member refid="classwx_window_1a86904f6785df4af6036b33383490a805" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>Navigate</name></member>
      <member refid="classwx_window_1aa58039c8fc65e19160becf510ee1d1d5" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>NavigateIn</name></member>
      <member refid="classwx_window_1a8175da594e6045635a1d1cfe775cdddb" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>NewControlId</name></member>
      <member refid="classwx_combo_ctrl_1a3ce1fce108f3a84216fa9983d6b89a37" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>OnButtonClick</name></member>
      <member refid="classwx_window_1a6b5654c0c6c6245d592c279521f7099c" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>OnInternalIdle</name></member>
      <member refid="classwx_object_1a07b8f34f5afc5743195c5fed052f55d3" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>operator delete</name></member>
      <member refid="classwx_object_1a96fa423a1dbc212c8227a5d83825971f" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>operator new</name></member>
      <member refid="classwx_window_1a61e78cb48ece3e9e989e37b475ac1e35" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>PageDown</name></member>
      <member refid="classwx_window_1aa7c2bbc480d8863d9f139c01d7abc1b1" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>PageUp</name></member>
      <member refid="classwx_combo_ctrl_1a361e1a0db2dceb5aa7749ad5a158e49c" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>Paste</name></member>
      <member refid="classwx_window_1ac45c1f4cf96c70779764c14cf528790b" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>PopEventHandler</name></member>
      <member refid="classwx_combo_ctrl_1afda0208f5c2a31d504e230c36546fe8d" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>Popup</name></member>
      <member refid="classwx_window_1a8f715d238cf74a845488b0e2645e98df" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>PopupMenu</name></member>
      <member refid="classwx_window_1a834bcdfd41f5e5370ebd9ea401c92900" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>PopupMenu</name></member>
      <member refid="classwx_window_1ab1943463e6661f97e072b43337c6cc09" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>PostSizeEvent</name></member>
      <member refid="classwx_window_1aa080d8dcda58bcc6ea2abd8bea592e3e" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>PostSizeEventToParent</name></member>
      <member refid="classwx_combo_ctrl_1abd4fb20092e56779c74c7910a0c0ce9b" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>PrepareBackground</name></member>
      <member refid="classwx_window_1a5ebdbd87c28644149a07f1742996df96" prot="protected" virt="virtual"><scope>wxComboCtrl</scope><name>ProcessEvent</name></member>
      <member refid="classwx_evt_handler_1ac0f5d2cb29a04c1f7f82eb6b351f79fb" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>ProcessEventLocally</name></member>
      <member refid="classwx_window_1a7cbee38944dab02d753a4dba74230443" prot="protected" virt="non-virtual"><scope>wxComboCtrl</scope><name>ProcessPendingEvents</name></member>
      <member refid="classwx_window_1a9350b3a9c2e380707eaea92cedad12a5" prot="protected" virt="non-virtual"><scope>wxComboCtrl</scope><name>ProcessThreadEvent</name></member>
      <member refid="classwx_window_1a0a76891d726ad5f9a729e27e4eab2b57" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>ProcessWindowEvent</name></member>
      <member refid="classwx_window_1a0a11aa4a50491d051f947e2618e52178" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>ProcessWindowEventLocally</name></member>
      <member refid="classwx_window_1a398c11ab9af7956067a964f560d1978c" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>PushEventHandler</name></member>
      <member refid="classwx_window_1a69e450f21b0d7013269ec1a4771f043b" prot="protected" virt="virtual"><scope>wxComboCtrl</scope><name>QueueEvent</name></member>
      <member refid="classwx_window_1a54808c933f22a891c5db646f6209fa4d" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>Raise</name></member>
      <member refid="classwx_text_entry_1a3aa0d89ddb8a922c941818dafe4852a4" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>Redo</name></member>
      <member refid="classwx_object_1a2f6f1aa51fe9fc2b1415ca4211a90e9e" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>Ref</name></member>
      <member refid="classwx_window_1a29dc7251746154c821b17841b9877830" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>Refresh</name></member>
      <member refid="classwx_window_1ab0ae6b9898cd261c39ebeb2891aa3d67" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>RefreshRect</name></member>
      <member refid="classwx_window_1a53ca57872dac5851ea6ba55a494b899b" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>RegisterHotKey</name></member>
      <member refid="classwx_window_1adcc538819c11ecb3bd3e4e5d13c5ba7a" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>ReleaseMouse</name></member>
      <member refid="classwx_combo_ctrl_1a20b2fecf36f2c5559fe1333f706681ce" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>Remove</name></member>
      <member refid="classwx_window_1acee332ed4368d26e8bc3db5767c1240a" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>RemoveChild</name></member>
      <member refid="classwx_window_1aacbfe424fa527966b954229a1db96ab5" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>RemoveEventHandler</name></member>
      <member refid="classwx_evt_handler_1a67a57b759c447b121bf70a7c9804c8f2" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>RemoveFilter</name></member>
      <member refid="classwx_control_1ab7df4ca0dfde3a6409833cf470ee02e6" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>RemoveMnemonics</name></member>
      <member refid="classwx_window_1a7977b749284e65aecfed2ce146799cb9" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>Reparent</name></member>
      <member refid="classwx_combo_ctrl_1ab3c5214e81069bb594fa230a77b02da8" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>Replace</name></member>
      <member refid="classwx_window_1a0f9814efc50316b4c57b7ec2bf78b716" prot="protected" virt="non-virtual"><scope>wxComboCtrl</scope><name>SafelyProcessEvent</name></member>
      <member refid="classwx_window_1a09aca554d41d6e771d3dc72f26b9cacc" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>ScreenToClient</name></member>
      <member refid="classwx_window_1a5f4dab599fda780823841bb2fe5f2f99" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>ScreenToClient</name></member>
      <member refid="classwx_window_1aa5c5b683bd11a0d9771bd2fcdf643c64" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>ScrollLines</name></member>
      <member refid="classwx_window_1adc0ed5e1c4925223cb901ced14b8343d" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>ScrollPages</name></member>
      <member refid="classwx_window_1ab7be4956ff22da37fff2b8aaa581045c" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>ScrollWindow</name></member>
      <member refid="classwx_evt_handler_1a3c07426130d2868a5ae7fa918a251f49" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>SearchEventTable</name></member>
      <member refid="classwx_text_entry_1a2f7cb6fe4a1c2d1cd79edec6391ea91e" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>SelectAll</name></member>
      <member refid="classwx_text_entry_1a7ab161521fee2982118f109cfeaa4f22" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>SelectNone</name></member>
      <member refid="classwx_window_1a7e21eb6a0819281b29134a6432d064fe" prot="protected" virt="non-virtual"><scope>wxComboCtrl</scope><name>SendDestroyEvent</name></member>
      <member refid="classwx_window_1a1afc1653413957537073c074dcc3eade" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>SendIdleEvents</name></member>
      <member refid="classwx_window_1a237f739b21937d3e8f1bff5fa82ba4c2" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>SendSizeEvent</name></member>
      <member refid="classwx_window_1af7987987978fd8a93df88b29b19a6388" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SendSizeEventToParent</name></member>
      <member refid="classwx_window_1a0af5e9aa4dee6a4e92c0700f92605642" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>SetAcceleratorTable</name></member>
      <member refid="classwx_window_1a413220ead41f05a2ec2cfe10b3d573df" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetAccessible</name></member>
      <member refid="classwx_window_1ad369fe1db5c20f9d9edff7b5eb1f7226" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetAutoLayout</name></member>
      <member refid="classwx_window_1a37219df52734626e23401fd83b25d8a0" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>SetBackgroundColour</name></member>
      <member refid="classwx_window_1af14f8fd2ed2d30a9bbb5d4f9fd6594ec" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>SetBackgroundStyle</name></member>
      <member refid="classwx_combo_ctrl_1adc5fdec92913ba1ffdec20548106376b" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetButtonBitmaps</name></member>
      <member refid="classwx_combo_ctrl_1aa0ffd3528d66f15bfd3c0da78117ebad" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetButtonPosition</name></member>
      <member refid="classwx_window_1a2b8b2e99231a0ec1a05f5066f1b7f3d8" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>SetCanFocus</name></member>
      <member refid="classwx_window_1acfef5e1cada92c73e2937b84ff57ff57" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetCaret</name></member>
      <member refid="classwx_evt_handler_1a82c74f2cebfa02cb3c1563d459c872bf" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetClientData</name></member>
      <member refid="classwx_evt_handler_1af1e33a06087b8b2ddc43c7d15a91b326" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetClientObject</name></member>
      <member refid="classwx_window_1aa59f715217fffa5bcf14cd97f92e7840" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetClientSize</name></member>
      <member refid="classwx_window_1ab2aadc857ee7f55f47ab9a8669e3beb7" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetClientSize</name></member>
      <member refid="classwx_window_1a582d4d1f60a3f777627773b2da0bb2ef" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetClientSize</name></member>
      <member refid="classwx_window_1afa75d111bbd9a68f837101a5fbed60a7" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetConstraints</name></member>
      <member refid="classwx_window_1a0ccf78fe06722b500adfb7f36b8ce443" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetContainingSizer</name></member>
      <member refid="classwx_window_1ad83f9c51c6f31e0e05f598b47a19ed98" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>SetCursor</name></member>
      <member refid="classwx_combo_ctrl_1af0b54e5e4f71efc63464ceb44f1497d5" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetCustomPaintWidth</name></member>
      <member refid="classwx_window_1a5477a89c17fdcc3ec6c90274796eb1c3" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetDoubleBuffered</name></member>
      <member refid="classwx_window_1ae34b4d45433ca8287df0e47d46411e58" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>SetDropTarget</name></member>
      <member refid="classwx_text_entry_1a7d95c0f42b5e1dc0559ae1ec56cb8b86" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>SetEditable</name></member>
      <member refid="classwx_window_1af6c84b7679183b377ba27a52a2f708b4" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetEventHandler</name></member>
      <member refid="classwx_evt_handler_1a7388ae19c8657e5656471b658c320036" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetEvtHandlerEnabled</name></member>
      <member refid="classwx_window_1ae9655f7c35ce7ac89cac2f6c0054b103" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>SetExtraStyle</name></member>
      <member refid="classwx_window_1a697f9f8d3ff389790f1c74b59bcb1d75" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>SetFocus</name></member>
      <member refid="classwx_window_1a6fa03f82d7917dff482754d0d2e2b1c8" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>SetFocusFromKbd</name></member>
      <member refid="classwx_window_1a9ab11e7da57a1d08918aa75fc33f6ad3" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>SetFont</name></member>
      <member refid="classwx_window_1a69f1e1c7ddd370d72e68c70f13ac8de9" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>SetForegroundColour</name></member>
      <member refid="classwx_window_1a4c1a2cbc7363237b3a7c70af4e702c72" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetHelpText</name></member>
      <member refid="classwx_combo_ctrl_1a68221bdd4af63abfd9840e5de13f4ba6" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>SetHint</name></member>
      <member refid="classwx_window_1a7f27d0faed14effa013381bdc40e1bcd" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetId</name></member>
      <member refid="classwx_window_1ae6dfe0b0d4a8c666b21ce8df8d96727b" prot="protected" virt="virtual"><scope>wxComboCtrl</scope><name>SetInitialBestSize</name></member>
      <member refid="classwx_window_1a1b309ca50ba87e34f968c83b79af1397" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetInitialSize</name></member>
      <member refid="classwx_combo_ctrl_1a9ac49217e13edeb905cf640aac627bba" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>SetInsertionPoint</name></member>
      <member refid="classwx_combo_ctrl_1a3b4d25c9166d51a95973176df1b05be4" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>SetInsertionPointEnd</name></member>
      <member refid="classwx_control_1a2c2ae20554e7db5e765f163022ce09c0" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>SetLabel</name></member>
      <member refid="classwx_control_1afeb308dc3b54d8d735b33cb250395503" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetLabelMarkup</name></member>
      <member refid="classwx_control_1ae092899c3fe658831a9c796755a65eb7" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetLabelText</name></member>
      <member refid="classwx_window_1a7d494549f7fcfed44af95f8ee364c1f9" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>SetLayoutDirection</name></member>
      <member refid="classwx_combo_ctrl_1ae2b983f401d92ccc38f2bed47fb4d76b" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetMargins</name></member>
      <member refid="classwx_combo_ctrl_1a61fb396d486c81bcb733ff0b35301904" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetMargins</name></member>
      <member refid="classwx_window_1a664e5b2ddd817d9c58788269fe1d8479" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>SetMaxClientSize</name></member>
      <member refid="classwx_text_entry_1a5b9dea0d1adeb9cc14309600de6aff50" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>SetMaxLength</name></member>
      <member refid="classwx_window_1a38b496214d728a3212afadee5ed51606" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>SetMaxSize</name></member>
      <member refid="classwx_window_1a6e35ba44b97e374dfffa460d41d94b31" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>SetMinClientSize</name></member>
      <member refid="classwx_window_1a3fc066f4d8083319f004ac43811d545d" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>SetMinSize</name></member>
      <member refid="classwx_window_1af80875cda5e1af98dcd7c8e712e3c800" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>SetName</name></member>
      <member refid="classwx_window_1aeab905f61df7004c1b76a3351dca9e96" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>SetNextHandler</name></member>
      <member refid="classwx_window_1a9a3f9d8477aab1d9176cd66ee56e75d9" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetOwnBackgroundColour</name></member>
      <member refid="classwx_window_1a89a4f62f23c1e7c845b8d07cecae4c43" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetOwnFont</name></member>
      <member refid="classwx_window_1a53f4a878e4e2d440bd00543f8014aaaa" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetOwnForegroundColour</name></member>
      <member refid="classwx_window_1aee57358435d6bd33f598c81354b47425" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetPalette</name></member>
      <member refid="classwx_combo_ctrl_1aac64729c09efde24fbc14d43aa688202" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetPopupAnchor</name></member>
      <member refid="classwx_combo_ctrl_1afb0b22cb38395040699eebcb679fd86a" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetPopupControl</name></member>
      <member refid="classwx_combo_ctrl_1add059c3997d6697bc98365f039da17f5" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetPopupExtents</name></member>
      <member refid="classwx_combo_ctrl_1a24f043ce5c1287904a899c22f2dc7ce9" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetPopupMaxHeight</name></member>
      <member refid="classwx_combo_ctrl_1aef690d395a8ef2500d2c4ddd2d345d6d" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetPopupMinWidth</name></member>
      <member refid="classwx_window_1a81f23590239934fa10fded0566a65d8c" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetPosition</name></member>
      <member refid="classwx_window_1a07f5f7ed3f78e0ef7b3dee3f4da81001" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>SetPreviousHandler</name></member>
      <member refid="classwx_object_1afab780710f2adc1bb33310e27590140b" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetRefData</name></member>
      <member refid="classwx_window_1aa842d59529f873683e55cd8392ec46e9" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>SetScrollbar</name></member>
      <member refid="classwx_window_1afbf4dc9064cf70cfe6884554b97a27bf" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>SetScrollPos</name></member>
      <member refid="classwx_combo_ctrl_1a62f78126cae07f006685349851340b29" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>SetSelection</name></member>
      <member refid="classwx_window_1a180312d5ad4a4a5ad805b8d52d67a74e" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetSize</name></member>
      <member refid="classwx_window_1a8e383bc6d5ca008965922a36c676aea0" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetSize</name></member>
      <member refid="classwx_window_1a030a928cd854de3def97c5720f14695b" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetSize</name></member>
      <member refid="classwx_window_1a2ea9b25296d591aea4470c8fd99ff7cb" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetSize</name></member>
      <member refid="classwx_window_1a307329dc3b10f5584aeb2cbce9293ffd" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>SetSizeHints</name></member>
      <member refid="classwx_window_1ae813c640e1e2bc6014423247050846cf" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>SetSizeHints</name></member>
      <member refid="classwx_window_1abc95691b45e29a52c24aa9d33d46dec1" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetSizer</name></member>
      <member refid="classwx_window_1a29938af9828fd35da666536cdfb6b73c" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetSizerAndFit</name></member>
      <member refid="classwx_combo_ctrl_1a738267959dcf2b73430bd310173ebedb" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetText</name></member>
      <member refid="classwx_combo_ctrl_1a00188332f7b6200c98f5f65966d5b151" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetTextCtrlStyle</name></member>
      <member refid="classwx_combo_ctrl_1ae38353a81954d02af302ba103e984cb7" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetTextIndent</name></member>
      <member refid="classwx_window_1a41dd19ed8809fd8ec662e2aa2a9579c3" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>SetThemeEnabled</name></member>
      <member refid="classwx_window_1a81a9fb74e3c6c7f4416e882f5e589b8c" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetToolTip</name></member>
      <member refid="classwx_window_1a494e0b7cfca9299caa40e847767e7357" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetToolTip</name></member>
      <member refid="classwx_window_1ac8cf4398cec50ac36634760f45a0656f" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>SetTransparent</name></member>
      <member refid="classwx_window_1a00066c70049a7be3ce6b648d206e6432" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>SetValidator</name></member>
      <member refid="classwx_combo_ctrl_1a4202edbc9fc83623c658a83fe4c6d7be" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>SetValue</name></member>
      <member refid="classwx_combo_ctrl_1aaa42a7fdfb9061e4901086abcc7120e7" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetValueByUser</name></member>
      <member refid="classwx_window_1a37f293b7904bc6668b86cccb0aea5669" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetVirtualSize</name></member>
      <member refid="classwx_window_1a8e95201edebe43b9623bd3bdc555af4d" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetVirtualSize</name></member>
      <member refid="classwx_window_1a306af30adec68689f74ed537b4f9d5fd" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetWindowStyle</name></member>
      <member refid="classwx_window_1aee2cf342f80523432e7f2299d299451b" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>SetWindowStyleFlag</name></member>
      <member refid="classwx_window_1acd955418c336e73b3e32cadf1ca46e29" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>SetWindowVariant</name></member>
      <member refid="classwx_combo_ctrl_1af7d1e035c5ed8d0e34baf6e483e855bb" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>ShouldDrawFocus</name></member>
      <member refid="classwx_window_1aa51b169745cda1746c1a45b4ffe3217a" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>ShouldInheritColours</name></member>
      <member refid="classwx_window_1a7fbc92ce240a8d4f6956b6e0276ef07f" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>Show</name></member>
      <member refid="classwx_combo_ctrl_1ae87a04c471bfcac5ab0d370ac9edddbc" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>ShowPopup</name></member>
      <member refid="classwx_window_1a596b1715edfc7609f352b2e000ecbaec" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>ShowWithEffect</name></member>
      <member refid="classwx_window_1a279a532124073261b28131b6afb59a1e" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>Thaw</name></member>
      <member refid="classwx_window_1a8a4fa47129de552bfec37db8c69688a2" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>ToggleWindowStyle</name></member>
      <member refid="classwx_window_1ab8e51f36e7d8790b361c8d8c6f37b1ad" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>TransferDataFromWindow</name></member>
      <member refid="classwx_window_1a88cc65e424a129d9b0057756cdb67ec9" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>TransferDataToWindow</name></member>
      <member refid="classwx_evt_handler_1a5e25fece1cb6cbc11fd1d41ec140319c" prot="protected" virt="virtual"><scope>wxComboCtrl</scope><name>TryAfter</name></member>
      <member refid="classwx_evt_handler_1ad4b0eac704dd005ac6a88fdb1e673c13" prot="protected" virt="virtual"><scope>wxComboCtrl</scope><name>TryBefore</name></member>
      <member refid="classwx_evt_handler_1a2b7df8272075a96daea78cdd799c00da" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>Unbind</name></member>
      <member refid="classwx_evt_handler_1aa49f9c4ad4462456b4fe4bd1ab53533d" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>Unbind</name></member>
      <member refid="classwx_combo_ctrl_1a9da1ff37488b9c33ed02ba2064ad6d85" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>Undo</name></member>
      <member refid="classwx_evt_handler_1a22e5db2ec1d19c8252c056fd116975d7" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>Unlink</name></member>
      <member refid="classwx_object_1af51efc6b1ae632fc7f0cd7ebbce9fa36" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>UnRef</name></member>
      <member refid="classwx_window_1a695f60d65f8f6c12e3c3645ad9c0c35b" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>UnregisterHotKey</name></member>
      <member refid="classwx_window_1ad9bc342d1e38d221e37f0f6396950c8c" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>UnreserveControlId</name></member>
      <member refid="classwx_window_1ae75712451673658b0a533480bf5eeaa4" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>UnsetToolTip</name></member>
      <member refid="classwx_object_1a74b40e42d19a4b9e9bec0b57d62a5725" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>UnShare</name></member>
      <member refid="classwx_window_1abaf28f1a075fd1b10f761a8febe597ec" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>Update</name></member>
      <member refid="classwx_window_1adf0a4987728bd0bf69f922641b3efbfc" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>UpdateWindowUI</name></member>
      <member refid="classwx_combo_ctrl_1a5b8f90d12149fe7e3f1e38e0dd0b839a" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>UseAltPopupWindow</name></member>
      <member refid="classwx_window_1a9131e424ddc3b332a08377e5ad713c60" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>UseBgCol</name></member>
      <member refid="classwx_window_1ac87f253253a0c5eb498871c83afa40fd" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>Validate</name></member>
      <member refid="classwx_window_1ac500152d1eca3a2ee98a68e7ea7372b5" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>WarpPointer</name></member>
      <member refid="classwx_window_1a75e9c29023e441305574056cd5a725ff" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>WindowToClientSize</name></member>
      <member refid="classwx_text_entry_1aa1b9419f95878c44234ff812b528c17b" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>WriteText</name></member>
      <member refid="classwx_combo_ctrl_1af31b505e73047689dc4d2948eaa13a3d" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>wxComboCtrl</name></member>
      <member refid="classwx_combo_ctrl_1a0f9d6b21d3728f135dbe0d01ee4bf865" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>wxComboCtrl</name></member>
      <member refid="classwx_control_1adb8f3edf807efa9159de826bf92d6a44" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>wxControl</name></member>
      <member refid="classwx_control_1a08428de2ba5cc988a86fe17071d49522" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>wxControl</name></member>
      <member refid="classwx_evt_handler_1a3f0166c4154227d05575b01eb2c8d4be" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>wxEvtHandler</name></member>
      <member refid="classwx_object_1acaa378363a28af421ab56ad7b46eadf0" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>wxObject</name></member>
      <member refid="classwx_object_1a4721b4dc9b7aff0f30904ba2ea3954cf" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>wxObject</name></member>
      <member refid="classwx_window_1a695200a4915b934926dcf32afa44544c" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>wxWindow</name></member>
      <member refid="classwx_window_1a7799009b10d1765d1bbb6db4994f922e" prot="public" virt="non-virtual"><scope>wxComboCtrl</scope><name>wxWindow</name></member>
      <member refid="classwx_combo_ctrl_1a542d88ad981a8dd2a53ca9cc03c2daaa" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>~wxComboCtrl</name></member>
      <member refid="classwx_evt_handler_1a372d2239d91521eddc8fd2715fcab584" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>~wxEvtHandler</name></member>
      <member refid="classwx_object_1a2a51aa8bfbab47ca2f051bcf84b3f35b" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>~wxObject</name></member>
      <member refid="classwx_window_1a0c2a46181a89c349327f0b276f5ef8d7" prot="public" virt="virtual"><scope>wxComboCtrl</scope><name>~wxWindow</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
