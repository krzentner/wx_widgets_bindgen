<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classwx_query_layout_info_event" kind="class" language="C++" prot="public">
    <compoundname>wxQueryLayoutInfoEvent</compoundname>
    <basecompoundref refid="classwx_event" prot="public" virt="non-virtual">wxEvent</basecompoundref>
    <includes local="no">wx/laywin.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_query_layout_info_event_1ae49fe2e9f1e59fa1bcb24380b76c5f09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxQueryLayoutInfoEvent::wxQueryLayoutInfoEvent</definition>
        <argsstring>(wxWindowID id=0)</argsstring>
        <name>wxQueryLayoutInfoEvent</name>
        <param>
          <type><ref refid="windowid_8h_1ae8091432cc2cb2485d45f2302fb51133" kindref="member">wxWindowID</ref></type>
          <declname>id</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/laywin.h" line="311" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_query_layout_info_event_1a0535ef2c7e80dd0d5dd5a913e9c0efa0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="laywin_8h_1aa71c9fda256582eb60acb5f99ed9de95" kindref="member">wxLayoutAlignment</ref></type>
        <definition>wxLayoutAlignment wxQueryLayoutInfoEvent::GetAlignment</definition>
        <argsstring>() const</argsstring>
        <name>GetAlignment</name>
        <briefdescription>
<para>Specifies the alignment of the window (which side of the remaining parent client area the window sticks to). </para>        </briefdescription>
        <detaileddescription>
<para>One of wxLAYOUT_TOP, wxLAYOUT_LEFT, wxLAYOUT_RIGHT, wxLAYOUT_BOTTOM. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/laywin.h" line="318" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_query_layout_info_event_1a5473a15165e30136dbd3f37df3c56214" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxQueryLayoutInfoEvent::GetFlags</definition>
        <argsstring>() const</argsstring>
        <name>GetFlags</name>
        <briefdescription>
<para>Returns the flags associated with this event. </para>        </briefdescription>
        <detaileddescription>
<para>Not currently used. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/laywin.h" line="323" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_query_layout_info_event_1ac81b192a70decf95f1689c3dd3bab406" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="laywin_8h_1a2ce484ea253c6640705f6c33a9b7d16b" kindref="member">wxLayoutOrientation</ref></type>
        <definition>wxLayoutOrientation wxQueryLayoutInfoEvent::GetOrientation</definition>
        <argsstring>() const</argsstring>
        <name>GetOrientation</name>
        <briefdescription>
<para>Returns the orientation that the event handler specified to the event object. </para>        </briefdescription>
        <detaileddescription>
<para>May be one of wxLAYOUT_HORIZONTAL, wxLAYOUT_VERTICAL. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/laywin.h" line="329" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_query_layout_info_event_1ad21f4fce3a1843e868bf6dabf200e491" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxQueryLayoutInfoEvent::GetRequestedLength</definition>
        <argsstring>() const</argsstring>
        <name>GetRequestedLength</name>
        <briefdescription>
<para>Returns the requested length of the window in the direction of the window orientation. </para>        </briefdescription>
        <detaileddescription>
<para>This information is not yet used. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/laywin.h" line="335" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_query_layout_info_event_1a6350973483b59a95f172f64926936c36" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_size" kindref="compound">wxSize</ref></type>
        <definition>wxSize wxQueryLayoutInfoEvent::GetSize</definition>
        <argsstring>() const</argsstring>
        <name>GetSize</name>
        <briefdescription>
<para>Returns the size that the event handler specified to the event object as being the requested size of the window. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/laywin.h" line="341" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_query_layout_info_event_1af64b80ffa35bcb89a4a3ffa2a08df1e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxQueryLayoutInfoEvent::SetAlignment</definition>
        <argsstring>(wxLayoutAlignment alignment)</argsstring>
        <name>SetAlignment</name>
        <param>
          <type><ref refid="laywin_8h_1aa71c9fda256582eb60acb5f99ed9de95" kindref="member">wxLayoutAlignment</ref></type>
          <declname>alignment</declname>
        </param>
        <briefdescription>
<para>Call this to specify the alignment of the window (which side of the remaining parent client area the window sticks to). </para>        </briefdescription>
        <detaileddescription>
<para>May be one of wxLAYOUT_TOP, wxLAYOUT_LEFT, wxLAYOUT_RIGHT, wxLAYOUT_BOTTOM. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/laywin.h" line="348" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_query_layout_info_event_1a5cefb50301df556df7841cd33be945c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxQueryLayoutInfoEvent::SetFlags</definition>
        <argsstring>(int flags)</argsstring>
        <name>SetFlags</name>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Sets the flags associated with this event. </para>        </briefdescription>
        <detaileddescription>
<para>Not currently used. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/laywin.h" line="353" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_query_layout_info_event_1a91de3a17d98698f7423d73e13e55e0c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxQueryLayoutInfoEvent::SetOrientation</definition>
        <argsstring>(wxLayoutOrientation orientation)</argsstring>
        <name>SetOrientation</name>
        <param>
          <type><ref refid="laywin_8h_1a2ce484ea253c6640705f6c33a9b7d16b" kindref="member">wxLayoutOrientation</ref></type>
          <declname>orientation</declname>
        </param>
        <briefdescription>
<para>Call this to specify the orientation of the window. </para>        </briefdescription>
        <detaileddescription>
<para>May be one of wxLAYOUT_HORIZONTAL, wxLAYOUT_VERTICAL. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/laywin.h" line="359" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_query_layout_info_event_1ad844a6dfbe69cf48303823d2573810cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxQueryLayoutInfoEvent::SetRequestedLength</definition>
        <argsstring>(int length)</argsstring>
        <name>SetRequestedLength</name>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Sets the requested length of the window in the direction of the window orientation. </para>        </briefdescription>
        <detaileddescription>
<para>This information is not yet used. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/laywin.h" line="365" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_query_layout_info_event_1a47ec467f4476fb22fccebb2ad7365bb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxQueryLayoutInfoEvent::SetSize</definition>
        <argsstring>(const wxSize &amp;size)</argsstring>
        <name>SetSize</name>
        <param>
          <type>const <ref refid="classwx_size" kindref="compound">wxSize</ref> &amp;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Call this to let the calling code know what the size of the window is. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/laywin.h" line="370" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This event is sent when <ref refid="classwx_layout_algorithm" kindref="compound">wxLayoutAlgorithm</ref> wishes to get the size, orientation and alignment of a window. </para>    </briefdescription>
    <detaileddescription>
<para>More precisely, the event is sent by the OnCalculateLayout handler which is itself invoked by <ref refid="classwx_layout_algorithm" kindref="compound">wxLayoutAlgorithm</ref>.</para><para><linebreak/>
<heading level="2">Events using this class</heading>
</para><para>The following event handler macros redirect the events to member function handlers &apos;<bold>func</bold>&apos; with prototypes like: void<nonbreakablespace/>handlerFuncName(<ref refid="classwx_query_layout_info_event" kindref="compound">wxQueryLayoutInfoEvent</ref>&amp;<nonbreakablespace/>event)</para><para>Event macros: <itemizedlist>
<listitem><para>EVT_QUERY_LAYOUT_INFO(func): Process a <computeroutput>wxEVT_QUERY_LAYOUT_INFO</computeroutput> event, to get size, orientation and alignment from a window. <linebreak/>
 <heading level="2"></heading>
</para></listitem>
</itemizedlist>
Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxadv" kindref="member">wxAdvanced</ref> &lt;&gt;&lt; =&apos;&apos;&gt;:&lt;/&gt;&amp;;&amp;;&lt; =&apos;&apos;&gt;\ &lt;/&gt;&lt;/&gt;</para><para><simplesect kind="see"><para><ref refid="classwx_calculate_layout_event" kindref="compound">wxCalculateLayoutEvent</ref>, <ref refid="classwx_sash_layout_window" kindref="compound">wxSashLayoutWindow</ref>, <ref refid="classwx_layout_algorithm" kindref="compound">wxLayoutAlgorithm</ref>. </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="5806">
        <label>wxObject</label>
        <link refid="classwx_object"/>
      </node>
      <node id="5804">
        <label>wxQueryLayoutInfoEvent</label>
        <link refid="classwx_query_layout_info_event"/>
        <childnode refid="5805" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5805">
        <label>wxEvent</label>
        <link refid="classwx_event"/>
        <childnode refid="5806" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5809">
        <label>wxObject</label>
        <link refid="classwx_object"/>
        <childnode refid="5810" relation="usage">
          <edgelabel>m_refData</edgelabel>
        </childnode>
      </node>
      <node id="5807">
        <label>wxQueryLayoutInfoEvent</label>
        <link refid="classwx_query_layout_info_event"/>
        <childnode refid="5808" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5808">
        <label>wxEvent</label>
        <link refid="classwx_event"/>
        <childnode refid="5809" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5810">
        <label>wxObjectRefData</label>
        <link refid="classwx_object_ref_data"/>
      </node>
    </collaborationgraph>
    <location file="interface/wx/laywin.h" line="306" column="1" bodyfile="interface/wx/laywin.h" bodystart="305" bodyend="371"/>
    <listofallmembers>
      <member refid="classwx_object_1a60204063f3cc3aa2fa1c7ff5bda9eb13" prot="protected" virt="non-virtual"><scope>wxQueryLayoutInfoEvent</scope><name>AllocExclusive</name></member>
      <member refid="classwx_event_1a26878097a702e8d0368da150125d4158" prot="public" virt="pure-virtual"><scope>wxQueryLayoutInfoEvent</scope><name>Clone</name></member>
      <member refid="classwx_object_1a436fc8fe68cf8a31000296d9cd3d2427" prot="protected" virt="virtual"><scope>wxQueryLayoutInfoEvent</scope><name>CloneRefData</name></member>
      <member refid="classwx_object_1a3f4f497c65cef611e121c41f21dd5ccc" prot="protected" virt="virtual"><scope>wxQueryLayoutInfoEvent</scope><name>CreateRefData</name></member>
      <member refid="classwx_query_layout_info_event_1a0535ef2c7e80dd0d5dd5a913e9c0efa0" prot="public" virt="non-virtual"><scope>wxQueryLayoutInfoEvent</scope><name>GetAlignment</name></member>
      <member refid="classwx_object_1ae6d365f2556b26767ced8410c5e839d0" prot="public" virt="virtual"><scope>wxQueryLayoutInfoEvent</scope><name>GetClassInfo</name></member>
      <member refid="classwx_event_1ac4958ff6ec32b7f4b23066932d611131" prot="public" virt="virtual"><scope>wxQueryLayoutInfoEvent</scope><name>GetEventCategory</name></member>
      <member refid="classwx_event_1a424a4ffaaaf95164d8952ef9ab2ef444" prot="public" virt="non-virtual"><scope>wxQueryLayoutInfoEvent</scope><name>GetEventObject</name></member>
      <member refid="classwx_event_1a01c89719ef6241a6e612a313a259c1c2" prot="public" virt="non-virtual"><scope>wxQueryLayoutInfoEvent</scope><name>GetEventType</name></member>
      <member refid="classwx_event_1ae7d3e088f0f165ad0421717dd33e4460" prot="public" virt="non-virtual"><scope>wxQueryLayoutInfoEvent</scope><name>GetEventUserData</name></member>
      <member refid="classwx_query_layout_info_event_1a5473a15165e30136dbd3f37df3c56214" prot="public" virt="non-virtual"><scope>wxQueryLayoutInfoEvent</scope><name>GetFlags</name></member>
      <member refid="classwx_event_1ac5fa5c10d4845d903e58026a42b403c7" prot="public" virt="non-virtual"><scope>wxQueryLayoutInfoEvent</scope><name>GetId</name></member>
      <member refid="classwx_query_layout_info_event_1ac81b192a70decf95f1689c3dd3bab406" prot="public" virt="non-virtual"><scope>wxQueryLayoutInfoEvent</scope><name>GetOrientation</name></member>
      <member refid="classwx_object_1af3c6c76a775864832f1536d3c0de3a2b" prot="public" virt="non-virtual"><scope>wxQueryLayoutInfoEvent</scope><name>GetRefData</name></member>
      <member refid="classwx_query_layout_info_event_1ad21f4fce3a1843e868bf6dabf200e491" prot="public" virt="non-virtual"><scope>wxQueryLayoutInfoEvent</scope><name>GetRequestedLength</name></member>
      <member refid="classwx_query_layout_info_event_1a6350973483b59a95f172f64926936c36" prot="public" virt="non-virtual"><scope>wxQueryLayoutInfoEvent</scope><name>GetSize</name></member>
      <member refid="classwx_event_1aa770dbcd0f1714ba097836af6534b4c5" prot="public" virt="non-virtual"><scope>wxQueryLayoutInfoEvent</scope><name>GetSkipped</name></member>
      <member refid="classwx_event_1a48662230971127737d2500cef7be549d" prot="public" virt="non-virtual"><scope>wxQueryLayoutInfoEvent</scope><name>GetTimestamp</name></member>
      <member refid="classwx_event_1a31f6a4377d6d36964b8eae4e56ec43e0" prot="public" virt="non-virtual"><scope>wxQueryLayoutInfoEvent</scope><name>IsCommandEvent</name></member>
      <member refid="classwx_object_1a3c7115ef4132dcee0c4fc34e84d7fced" prot="public" virt="non-virtual"><scope>wxQueryLayoutInfoEvent</scope><name>IsKindOf</name></member>
      <member refid="classwx_object_1a059373c494c2369d7db2a556efef8ecf" prot="public" virt="non-virtual"><scope>wxQueryLayoutInfoEvent</scope><name>IsSameAs</name></member>
      <member refid="classwx_event_1ac81911194f1f59e1454c0397b87975d4" prot="protected" virt="non-virtual"><scope>wxQueryLayoutInfoEvent</scope><name>m_propagationLevel</name></member>
      <member refid="classwx_object_1a9e31954530a0abd54982effc443ed2b8" prot="protected" virt="non-virtual"><scope>wxQueryLayoutInfoEvent</scope><name>m_refData</name></member>
      <member refid="classwx_object_1a07b8f34f5afc5743195c5fed052f55d3" prot="public" virt="non-virtual"><scope>wxQueryLayoutInfoEvent</scope><name>operator delete</name></member>
      <member refid="classwx_object_1a96fa423a1dbc212c8227a5d83825971f" prot="public" virt="non-virtual"><scope>wxQueryLayoutInfoEvent</scope><name>operator new</name></member>
      <member refid="classwx_object_1a2f6f1aa51fe9fc2b1415ca4211a90e9e" prot="public" virt="non-virtual"><scope>wxQueryLayoutInfoEvent</scope><name>Ref</name></member>
      <member refid="classwx_event_1a0acb5c75f6e67b8822ad8ba3c5bdc4fe" prot="public" virt="non-virtual"><scope>wxQueryLayoutInfoEvent</scope><name>ResumePropagation</name></member>
      <member refid="classwx_query_layout_info_event_1af64b80ffa35bcb89a4a3ffa2a08df1e7" prot="public" virt="non-virtual"><scope>wxQueryLayoutInfoEvent</scope><name>SetAlignment</name></member>
      <member refid="classwx_event_1a3460217d04c36393ab868ba453fde13d" prot="public" virt="non-virtual"><scope>wxQueryLayoutInfoEvent</scope><name>SetEventObject</name></member>
      <member refid="classwx_event_1aa29fb7459d64602e09837fea1e516d27" prot="public" virt="non-virtual"><scope>wxQueryLayoutInfoEvent</scope><name>SetEventType</name></member>
      <member refid="classwx_query_layout_info_event_1a5cefb50301df556df7841cd33be945c7" prot="public" virt="non-virtual"><scope>wxQueryLayoutInfoEvent</scope><name>SetFlags</name></member>
      <member refid="classwx_event_1ab9973f687bfa8a60318d8d9bd629d0d4" prot="public" virt="non-virtual"><scope>wxQueryLayoutInfoEvent</scope><name>SetId</name></member>
      <member refid="classwx_query_layout_info_event_1a91de3a17d98698f7423d73e13e55e0c2" prot="public" virt="non-virtual"><scope>wxQueryLayoutInfoEvent</scope><name>SetOrientation</name></member>
      <member refid="classwx_object_1afab780710f2adc1bb33310e27590140b" prot="public" virt="non-virtual"><scope>wxQueryLayoutInfoEvent</scope><name>SetRefData</name></member>
      <member refid="classwx_query_layout_info_event_1ad844a6dfbe69cf48303823d2573810cf" prot="public" virt="non-virtual"><scope>wxQueryLayoutInfoEvent</scope><name>SetRequestedLength</name></member>
      <member refid="classwx_query_layout_info_event_1a47ec467f4476fb22fccebb2ad7365bb4" prot="public" virt="non-virtual"><scope>wxQueryLayoutInfoEvent</scope><name>SetSize</name></member>
      <member refid="classwx_event_1ad4380dff3144a986cb960473051a1d8d" prot="public" virt="non-virtual"><scope>wxQueryLayoutInfoEvent</scope><name>SetTimestamp</name></member>
      <member refid="classwx_event_1ac7a178c3c781c80f1308945042f76e7f" prot="public" virt="non-virtual"><scope>wxQueryLayoutInfoEvent</scope><name>ShouldPropagate</name></member>
      <member refid="classwx_event_1a98eb20b76106f9a933c2eb3ee119f66c" prot="public" virt="non-virtual"><scope>wxQueryLayoutInfoEvent</scope><name>Skip</name></member>
      <member refid="classwx_event_1a060a7d222404daff4d3cef30cddeaae3" prot="public" virt="non-virtual"><scope>wxQueryLayoutInfoEvent</scope><name>StopPropagation</name></member>
      <member refid="classwx_object_1af51efc6b1ae632fc7f0cd7ebbce9fa36" prot="public" virt="non-virtual"><scope>wxQueryLayoutInfoEvent</scope><name>UnRef</name></member>
      <member refid="classwx_object_1a74b40e42d19a4b9e9bec0b57d62a5725" prot="public" virt="non-virtual"><scope>wxQueryLayoutInfoEvent</scope><name>UnShare</name></member>
      <member refid="classwx_event_1aaf2a5cf056d006859cea36689ba13d36" prot="public" virt="non-virtual"><scope>wxQueryLayoutInfoEvent</scope><name>wxEvent</name></member>
      <member refid="classwx_object_1acaa378363a28af421ab56ad7b46eadf0" prot="public" virt="non-virtual"><scope>wxQueryLayoutInfoEvent</scope><name>wxObject</name></member>
      <member refid="classwx_object_1a4721b4dc9b7aff0f30904ba2ea3954cf" prot="public" virt="non-virtual"><scope>wxQueryLayoutInfoEvent</scope><name>wxObject</name></member>
      <member refid="classwx_query_layout_info_event_1ae49fe2e9f1e59fa1bcb24380b76c5f09" prot="public" virt="non-virtual"><scope>wxQueryLayoutInfoEvent</scope><name>wxQueryLayoutInfoEvent</name></member>
      <member refid="classwx_object_1a2a51aa8bfbab47ca2f051bcf84b3f35b" prot="public" virt="virtual"><scope>wxQueryLayoutInfoEvent</scope><name>~wxObject</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
