<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classwx_archive_entry" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>wxArchiveEntry</compoundname>
    <basecompoundref refid="classwx_object" prot="public" virt="non-virtual">wxObject</basecompoundref>
    <derivedcompoundref refid="classwx_tar_entry" prot="public" virt="non-virtual">wxTarEntry</derivedcompoundref>
    <derivedcompoundref refid="classwx_zip_entry" prot="public" virt="non-virtual">wxZipEntry</derivedcompoundref>
    <includes local="no">wx/archive.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_archive_entry_1a050464c6e0be5d7fbcf0f7a1e5acd3f5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_archive_entry" kindref="compound">wxArchiveEntry</ref> *</type>
        <definition>wxArchiveEntry* wxArchiveEntry::Clone</definition>
        <argsstring>() const</argsstring>
        <name>Clone</name>
        <briefdescription>
<para>Returns a copy of this entry object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/archive.h" line="191" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_archive_entry_1acb1e2dd308429c6afba02ec6d24c43f3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classwx_date_time" kindref="compound">wxDateTime</ref></type>
        <definition>virtual wxDateTime wxArchiveEntry::GetDateTime</definition>
        <argsstring>() const =0</argsstring>
        <name>GetDateTime</name>
        <briefdescription>
<para>Gets the entry&apos;s timestamp. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/archive.h" line="196" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_archive_entry_1a2de48b81c6513c2884b35d606d9b1ffa" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void wxArchiveEntry::SetDateTime</definition>
        <argsstring>(const wxDateTime &amp;dt)=0</argsstring>
        <name>SetDateTime</name>
        <param>
          <type>const <ref refid="classwx_date_time" kindref="compound">wxDateTime</ref> &amp;</type>
          <declname>dt</declname>
        </param>
        <briefdescription>
<para>Sets the entry&apos;s timestamp. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/archive.h" line="201" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_archive_entry_1a7f7c8fc858136626dcdf1865e646cef9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>virtual wxString wxArchiveEntry::GetName</definition>
        <argsstring>(wxPathFormat format=wxPATH_NATIVE) const =0</argsstring>
        <name>GetName</name>
        <param>
          <type><ref refid="filename_8h_1a0f0d9c04938ef2820d1ff7ed6b97bf00" kindref="member">wxPathFormat</ref></type>
          <declname>format</declname>
          <defval><ref refid="filename_8h_1a0f0d9c04938ef2820d1ff7ed6b97bf00a82373989c22bc22b15025a7900f4324e" kindref="member">wxPATH_NATIVE</ref></defval>
        </param>
        <briefdescription>
<para>Returns the entry&apos;s name, by default in the native format. </para>        </briefdescription>
        <detaileddescription>
<para>The name can include directory components, i.e. it can be a full path.</para><para>If this is a directory entry, (i.e. if <ref refid="classwx_archive_entry_1a548d3b6f4aeba699dc0d1ec1c21b7ce2" kindref="member">IsDir()</ref> is true) then the returned string is the name with a trailing path separator. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/archive.h" line="210" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_archive_entry_1afd7cfa9a05e971ee0355bafbeff8c93d" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void wxArchiveEntry::SetName</definition>
        <argsstring>(const wxString &amp;name, wxPathFormat format=wxPATH_NATIVE)=0</argsstring>
        <name>SetName</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="filename_8h_1a0f0d9c04938ef2820d1ff7ed6b97bf00" kindref="member">wxPathFormat</ref></type>
          <declname>format</declname>
          <defval><ref refid="filename_8h_1a0f0d9c04938ef2820d1ff7ed6b97bf00a82373989c22bc22b15025a7900f4324e" kindref="member">wxPATH_NATIVE</ref></defval>
        </param>
        <briefdescription>
<para>Sets the entry&apos;s name. </para>        </briefdescription>
        <detaileddescription>
<para>Setting a name with a trailing path separator sets <ref refid="classwx_archive_entry_1a548d3b6f4aeba699dc0d1ec1c21b7ce2" kindref="member">IsDir()</ref>.</para><para><simplesect kind="see"><para><ref refid="classwx_archive_entry_1a7f7c8fc858136626dcdf1865e646cef9" kindref="member">GetName()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/archive.h" line="218" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_archive_entry_1a05d8c0618a80cb1ada5c37a58042ec32" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="group__group__funcmacro__file_1ga69d831b3febabc149c67b716c8e22de5" kindref="member">wxFileOffset</ref></type>
        <definition>virtual wxFileOffset wxArchiveEntry::GetSize</definition>
        <argsstring>() const =0</argsstring>
        <name>GetSize</name>
        <reimplementedby refid="classwx_tar_entry_1a521dda6a657aff6e16d80ede50e4d792">GetSize</reimplementedby>
        <briefdescription>
<para>Returns the size of the entry&apos;s data in bytes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/archive.h" line="224" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_archive_entry_1ac5f34334ab1895a923354bd4da755364" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void wxArchiveEntry::SetSize</definition>
        <argsstring>(wxFileOffset size)=0</argsstring>
        <name>SetSize</name>
        <reimplementedby refid="classwx_tar_entry_1a4c6ea65856ecc69cb3a33753a7f35027">SetSize</reimplementedby>
        <param>
          <type><ref refid="group__group__funcmacro__file_1ga69d831b3febabc149c67b716c8e22de5" kindref="member">wxFileOffset</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Sets the size of the entry&apos;s data in bytes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/archive.h" line="229" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_archive_entry_1a3e93b7e12487636f903956935d92c7b2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="filename_8h_1a0f0d9c04938ef2820d1ff7ed6b97bf00" kindref="member">wxPathFormat</ref></type>
        <definition>virtual wxPathFormat wxArchiveEntry::GetInternalFormat</definition>
        <argsstring>() const =0</argsstring>
        <name>GetInternalFormat</name>
        <briefdescription>
<para>Returns the path format used internally within the archive to store filenames. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/archive.h" line="235" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_archive_entry_1a53486cf23696bd7b910a652c27af0a38" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>virtual wxString wxArchiveEntry::GetInternalName</definition>
        <argsstring>() const =0</argsstring>
        <name>GetInternalName</name>
        <reimplementedby refid="classwx_zip_entry_1ad8f72d27b65c6d90d3530d08d499b112">GetInternalName</reimplementedby>
        <reimplementedby refid="classwx_tar_entry_1abc46e348fa6569bb179daef72725ee34">GetInternalName</reimplementedby>
        <briefdescription>
<para>Returns the entry&apos;s filename in the internal format used within the archive. </para>        </briefdescription>
        <detaileddescription>
<para>The name can include directory components, i.e. it can be a full path.</para><para>The names of directory entries are returned without any trailing path separator. This gives a canonical name that can be used in comparisons.</para><para><simplesect kind="see"><para><ref refid="overview_archive_1overview_archive_byname" kindref="member">Looking Up an Archive Entry by Name</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/archive.h" line="247" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_archive_entry_1ab36942e9cbadced7476b4bceb21b7e08" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="group__group__funcmacro__file_1ga69d831b3febabc149c67b716c8e22de5" kindref="member">wxFileOffset</ref></type>
        <definition>virtual wxFileOffset wxArchiveEntry::GetOffset</definition>
        <argsstring>() const =0</argsstring>
        <name>GetOffset</name>
        <briefdescription>
<para>Returns a numeric value unique to the entry within the archive. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/archive.h" line="252" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_archive_entry_1a548d3b6f4aeba699dc0d1ec1c21b7ce2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool wxArchiveEntry::IsDir</definition>
        <argsstring>() const =0</argsstring>
        <name>IsDir</name>
        <briefdescription>
<para>Returns true if this is a directory entry. </para>        </briefdescription>
        <detaileddescription>
<para>Directory entries are entries with no data, which are used to store the meta-data of directories. They also make it possible for completely empty directories to be stored.</para><para><simplesect kind="note"><para>The names of entries within an archive can be complete paths, and unarchivers typically create whatever directories are necessary as they restore files, even if the archive contains no explicit directory entries. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/archive.h" line="266" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_archive_entry_1ab01182fe22c8eeefa05740e68d12ced0" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void wxArchiveEntry::SetIsDir</definition>
        <argsstring>(bool isDir=true)=0</argsstring>
        <name>SetIsDir</name>
        <param>
          <type>bool</type>
          <declname>isDir</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Marks this entry as a directory if <emphasis>isDir</emphasis> is true. </para>        </briefdescription>
        <detaileddescription>
<para>See <ref refid="classwx_archive_entry_1a548d3b6f4aeba699dc0d1ec1c21b7ce2" kindref="member">IsDir()</ref> for more info. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/archive.h" line="271" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_archive_entry_1abe30c2532550d23136cf6e1390007073" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool wxArchiveEntry::IsReadOnly</definition>
        <argsstring>() const =0</argsstring>
        <name>IsReadOnly</name>
        <briefdescription>
<para>Returns true if the entry is a read-only file. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/archive.h" line="276" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_archive_entry_1a0ed675785f6d0ddaf36664951f4430b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void wxArchiveEntry::SetIsReadOnly</definition>
        <argsstring>(bool isReadOnly=true)=0</argsstring>
        <name>SetIsReadOnly</name>
        <param>
          <type>bool</type>
          <declname>isReadOnly</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Sets this entry as a read-only file. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/archive.h" line="281" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_archive_entry_1a14fe1a270dbb1d0e9a76e2c3c8dd32a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxArchiveEntry::SetNotifier</definition>
        <argsstring>(wxArchiveNotifier &amp;notifier)</argsstring>
        <name>SetNotifier</name>
        <param>
          <type><ref refid="classwx_archive_notifier" kindref="compound">wxArchiveNotifier</ref> &amp;</type>
          <declname>notifier</declname>
        </param>
        <briefdescription>
<para>Sets the notifier (see <ref refid="classwx_archive_notifier" kindref="compound">wxArchiveNotifier</ref>) for this entry. </para>        </briefdescription>
        <detaileddescription>
<para>Whenever the <ref refid="classwx_archive_input_stream" kindref="compound">wxArchiveInputStream</ref> updates this entry, it will then invoke the associated notifier&apos;s <ref refid="classwx_archive_notifier_1aabc8d85fc2f85b38a761e3b4ccf74f5a" kindref="member">wxArchiveNotifier::OnEntryUpdated</ref> method.</para><para>Setting a notifier is not usually necessary. It is used to handle certain cases when modifying an archive in a pipeline (i.e. between non-seekable streams). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/archive.h" line="293" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_archive_entry_1aaa3a489d4a7038170318e7384a27941b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxArchiveEntry::UnsetNotifier</definition>
        <argsstring>()</argsstring>
        <name>UnsetNotifier</name>
        <reimplementedby refid="classwx_zip_entry_1a86eb2049bacf2398b878ff4021c9259f">UnsetNotifier</reimplementedby>
        <briefdescription>
<para>Unsets the notifier eventually attached to this entry. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/archive.h" line="298" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This is an abstract base class which serves as a common interface to archive entry classes such as <ref refid="classwx_zip_entry" kindref="compound">wxZipEntry</ref>. </para>    </briefdescription>
    <detaileddescription>
<para>These hold the meta-data (filename, timestamp, etc.), for entries in archive files such as zips and tars.</para><sect1 id="classwx_archive_entry_1archiveentry_nonseekable">
<title>About non-seekable streams</title>
<para>This information applies only when reading archives from non-seekable streams. When the stream is seekable GetNextEntry() returns a fully populated <ref refid="classwx_archive_entry" kindref="compound">wxArchiveEntry</ref>. See <ref refid="overview_archive_1overview_archive_noseek" kindref="member">Archives on Non-Seekable Streams</ref> for more information.</para><para>For generic programming, when the worst case must be assumed, you can rely on all the fields of <ref refid="classwx_archive_entry" kindref="compound">wxArchiveEntry</ref> being fully populated when <ref refid="classwx_archive_input_stream_1a87615df48e5f57305aa360098f5dae26" kindref="member">wxArchiveInputStream::GetNextEntry()</ref> returns, with the following exceptions:</para><para><itemizedlist>
<listitem><para><ref refid="classwx_archive_entry_1a05d8c0618a80cb1ada5c37a58042ec32" kindref="member">GetSize()</ref>: guaranteed to be available after the entry has been read to Eof(), or CloseEntry() has been called; </para></listitem>
<listitem><para><ref refid="classwx_archive_entry_1abe30c2532550d23136cf6e1390007073" kindref="member">IsReadOnly()</ref>: guaranteed to be available after the end of the archive has been reached, i.e. after GetNextEntry() returns NULL and Eof() is true.</para></listitem>
</itemizedlist>
<heading level="2"></heading>
</para><para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxbase" kindref="member">wxBase</ref> &lt;&gt;&lt; =&apos;&apos;&gt;:&lt;/&gt;&amp;;&amp;;&lt; =&apos;&apos;&gt;\ , \ &lt;/&gt;&lt;/&gt;</para><para><simplesect kind="see"><para><ref refid="overview_archive" kindref="compound">Archive Formats</ref>, <ref refid="overview_archive_1overview_archive_generic" kindref="member">Generic Archive Programming</ref>, <ref refid="classwx_archive_input_stream" kindref="compound">wxArchiveInputStream</ref>, <ref refid="classwx_archive_output_stream" kindref="compound">wxArchiveOutputStream</ref>, <ref refid="classwx_archive_notifier" kindref="compound">wxArchiveNotifier</ref> </para></simplesect>
</para></sect1>
    </detaileddescription>
    <inheritancegraph>
      <node id="143">
        <label>wxArchiveEntry</label>
        <link refid="classwx_archive_entry"/>
        <childnode refid="144" relation="public-inheritance">
        </childnode>
      </node>
      <node id="144">
        <label>wxObject</label>
        <link refid="classwx_object"/>
      </node>
      <node id="146">
        <label>wxZipEntry</label>
        <link refid="classwx_zip_entry"/>
        <childnode refid="143" relation="public-inheritance">
        </childnode>
      </node>
      <node id="145">
        <label>wxTarEntry</label>
        <link refid="classwx_tar_entry"/>
        <childnode refid="143" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="147">
        <label>wxArchiveEntry</label>
        <link refid="classwx_archive_entry"/>
        <childnode refid="148" relation="public-inheritance">
        </childnode>
      </node>
      <node id="148">
        <label>wxObject</label>
        <link refid="classwx_object"/>
        <childnode refid="149" relation="usage">
          <edgelabel>m_refData</edgelabel>
        </childnode>
      </node>
      <node id="149">
        <label>wxObjectRefData</label>
        <link refid="classwx_object_ref_data"/>
      </node>
    </collaborationgraph>
    <location file="interface/wx/archive.h" line="186" column="1" bodyfile="interface/wx/archive.h" bodystart="185" bodyend="299"/>
    <listofallmembers>
      <member refid="classwx_object_1a60204063f3cc3aa2fa1c7ff5bda9eb13" prot="protected" virt="non-virtual"><scope>wxArchiveEntry</scope><name>AllocExclusive</name></member>
      <member refid="classwx_archive_entry_1a050464c6e0be5d7fbcf0f7a1e5acd3f5" prot="public" virt="non-virtual"><scope>wxArchiveEntry</scope><name>Clone</name></member>
      <member refid="classwx_object_1a436fc8fe68cf8a31000296d9cd3d2427" prot="protected" virt="virtual"><scope>wxArchiveEntry</scope><name>CloneRefData</name></member>
      <member refid="classwx_object_1a3f4f497c65cef611e121c41f21dd5ccc" prot="protected" virt="virtual"><scope>wxArchiveEntry</scope><name>CreateRefData</name></member>
      <member refid="classwx_object_1ae6d365f2556b26767ced8410c5e839d0" prot="public" virt="virtual"><scope>wxArchiveEntry</scope><name>GetClassInfo</name></member>
      <member refid="classwx_archive_entry_1acb1e2dd308429c6afba02ec6d24c43f3" prot="public" virt="pure-virtual"><scope>wxArchiveEntry</scope><name>GetDateTime</name></member>
      <member refid="classwx_archive_entry_1a3e93b7e12487636f903956935d92c7b2" prot="public" virt="pure-virtual"><scope>wxArchiveEntry</scope><name>GetInternalFormat</name></member>
      <member refid="classwx_archive_entry_1a53486cf23696bd7b910a652c27af0a38" prot="public" virt="pure-virtual"><scope>wxArchiveEntry</scope><name>GetInternalName</name></member>
      <member refid="classwx_archive_entry_1a7f7c8fc858136626dcdf1865e646cef9" prot="public" virt="pure-virtual"><scope>wxArchiveEntry</scope><name>GetName</name></member>
      <member refid="classwx_archive_entry_1ab36942e9cbadced7476b4bceb21b7e08" prot="public" virt="pure-virtual"><scope>wxArchiveEntry</scope><name>GetOffset</name></member>
      <member refid="classwx_object_1af3c6c76a775864832f1536d3c0de3a2b" prot="public" virt="non-virtual"><scope>wxArchiveEntry</scope><name>GetRefData</name></member>
      <member refid="classwx_archive_entry_1a05d8c0618a80cb1ada5c37a58042ec32" prot="public" virt="pure-virtual"><scope>wxArchiveEntry</scope><name>GetSize</name></member>
      <member refid="classwx_archive_entry_1a548d3b6f4aeba699dc0d1ec1c21b7ce2" prot="public" virt="pure-virtual"><scope>wxArchiveEntry</scope><name>IsDir</name></member>
      <member refid="classwx_object_1a3c7115ef4132dcee0c4fc34e84d7fced" prot="public" virt="non-virtual"><scope>wxArchiveEntry</scope><name>IsKindOf</name></member>
      <member refid="classwx_archive_entry_1abe30c2532550d23136cf6e1390007073" prot="public" virt="pure-virtual"><scope>wxArchiveEntry</scope><name>IsReadOnly</name></member>
      <member refid="classwx_object_1a059373c494c2369d7db2a556efef8ecf" prot="public" virt="non-virtual"><scope>wxArchiveEntry</scope><name>IsSameAs</name></member>
      <member refid="classwx_object_1a9e31954530a0abd54982effc443ed2b8" prot="protected" virt="non-virtual"><scope>wxArchiveEntry</scope><name>m_refData</name></member>
      <member refid="classwx_object_1a07b8f34f5afc5743195c5fed052f55d3" prot="public" virt="non-virtual"><scope>wxArchiveEntry</scope><name>operator delete</name></member>
      <member refid="classwx_object_1a96fa423a1dbc212c8227a5d83825971f" prot="public" virt="non-virtual"><scope>wxArchiveEntry</scope><name>operator new</name></member>
      <member refid="classwx_object_1a2f6f1aa51fe9fc2b1415ca4211a90e9e" prot="public" virt="non-virtual"><scope>wxArchiveEntry</scope><name>Ref</name></member>
      <member refid="classwx_archive_entry_1a2de48b81c6513c2884b35d606d9b1ffa" prot="public" virt="pure-virtual"><scope>wxArchiveEntry</scope><name>SetDateTime</name></member>
      <member refid="classwx_archive_entry_1ab01182fe22c8eeefa05740e68d12ced0" prot="public" virt="pure-virtual"><scope>wxArchiveEntry</scope><name>SetIsDir</name></member>
      <member refid="classwx_archive_entry_1a0ed675785f6d0ddaf36664951f4430b6" prot="public" virt="pure-virtual"><scope>wxArchiveEntry</scope><name>SetIsReadOnly</name></member>
      <member refid="classwx_archive_entry_1afd7cfa9a05e971ee0355bafbeff8c93d" prot="public" virt="pure-virtual"><scope>wxArchiveEntry</scope><name>SetName</name></member>
      <member refid="classwx_archive_entry_1a14fe1a270dbb1d0e9a76e2c3c8dd32a8" prot="public" virt="non-virtual"><scope>wxArchiveEntry</scope><name>SetNotifier</name></member>
      <member refid="classwx_object_1afab780710f2adc1bb33310e27590140b" prot="public" virt="non-virtual"><scope>wxArchiveEntry</scope><name>SetRefData</name></member>
      <member refid="classwx_archive_entry_1ac5f34334ab1895a923354bd4da755364" prot="public" virt="pure-virtual"><scope>wxArchiveEntry</scope><name>SetSize</name></member>
      <member refid="classwx_object_1af51efc6b1ae632fc7f0cd7ebbce9fa36" prot="public" virt="non-virtual"><scope>wxArchiveEntry</scope><name>UnRef</name></member>
      <member refid="classwx_archive_entry_1aaa3a489d4a7038170318e7384a27941b" prot="public" virt="virtual"><scope>wxArchiveEntry</scope><name>UnsetNotifier</name></member>
      <member refid="classwx_object_1a74b40e42d19a4b9e9bec0b57d62a5725" prot="public" virt="non-virtual"><scope>wxArchiveEntry</scope><name>UnShare</name></member>
      <member refid="classwx_object_1acaa378363a28af421ab56ad7b46eadf0" prot="public" virt="non-virtual"><scope>wxArchiveEntry</scope><name>wxObject</name></member>
      <member refid="classwx_object_1a4721b4dc9b7aff0f30904ba2ea3954cf" prot="public" virt="non-virtual"><scope>wxArchiveEntry</scope><name>wxObject</name></member>
      <member refid="classwx_object_1a2a51aa8bfbab47ca2f051bcf84b3f35b" prot="public" virt="virtual"><scope>wxArchiveEntry</scope><name>~wxObject</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
