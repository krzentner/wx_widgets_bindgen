<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classwx_list_event" kind="class" language="C++" prot="public">
    <compoundname>wxListEvent</compoundname>
    <basecompoundref refid="classwx_notify_event" prot="public" virt="non-virtual">wxNotifyEvent</basecompoundref>
    <includes local="no">wx/listctrl.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_list_event_1a1b66e99f86c172366c8548c655f25b84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxListEvent::wxListEvent</definition>
        <argsstring>(wxEventType commandType=wxEVT_NULL, int id=0)</argsstring>
        <name>wxListEvent</name>
        <param>
          <type><ref refid="group__group__funcmacro__events_1ga6a7fd172612c0d6d9029bfa3aa91aca0" kindref="member">wxEventType</ref></type>
          <declname>commandType</declname>
          <defval><ref refid="group__group__funcmacro__events_1ga310bc3f7977ae79ac1198c7a287dbffe" kindref="member">wxEVT_NULL</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/listctrl.h" line="1356" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_list_event_1a5e643c082b091490d5a3fa4eaca63582" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long wxListEvent::GetCacheFrom</definition>
        <argsstring>() const</argsstring>
        <name>GetCacheFrom</name>
        <briefdescription>
<para>For <computeroutput>EVT_LIST_CACHE_HINT</computeroutput> event only: return the first item which the list control advises us to cache. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/listctrl.h" line="1362" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_list_event_1a89d6e5bfec88d1da90d1f95a24b8a0ba" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long wxListEvent::GetCacheTo</definition>
        <argsstring>() const</argsstring>
        <name>GetCacheTo</name>
        <briefdescription>
<para>For <computeroutput>EVT_LIST_CACHE_HINT</computeroutput> event only: return the last item (inclusive) which the list control advises us to cache. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/listctrl.h" line="1368" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_list_event_1a299056538a8aa23f318bd49420cb80ca" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxListEvent::GetColumn</definition>
        <argsstring>() const</argsstring>
        <name>GetColumn</name>
        <briefdescription>
<para>The column position: it is only used with <computeroutput>COL</computeroutput> events. </para>        </briefdescription>
        <detaileddescription>
<para>For the column dragging events, it is the column to the left of the divider being dragged, for the column click events it may be -1 if the user clicked in the list control header outside any column. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/listctrl.h" line="1377" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_list_event_1aa3c4e522c4be72b22094bec43fd94d9f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="defs_8h_1a74cc3a4753ec135e9e2ee6b155c97216" kindref="member">wxUIntPtr</ref></type>
        <definition>wxUIntPtr wxListEvent::GetData</definition>
        <argsstring>() const</argsstring>
        <name>GetData</name>
        <briefdescription>
<para>The data. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/listctrl.h" line="1382" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_list_event_1a466b53ba7611757a327b8fe9d8600b3a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxListEvent::GetImage</definition>
        <argsstring>() const</argsstring>
        <name>GetImage</name>
        <briefdescription>
<para>The image. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/listctrl.h" line="1387" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_list_event_1adbfa912ed37faa860c988d4ebe0a976f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long wxListEvent::GetIndex</definition>
        <argsstring>() const</argsstring>
        <name>GetIndex</name>
        <briefdescription>
<para>The item index. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/listctrl.h" line="1392" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_list_event_1a7c13d6af1b7946ac1fbb0822fb9ae093" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classwx_list_item" kindref="compound">wxListItem</ref> &amp;</type>
        <definition>const wxListItem&amp; wxListEvent::GetItem</definition>
        <argsstring>() const</argsstring>
        <name>GetItem</name>
        <briefdescription>
<para>An item object, used by some events. </para>        </briefdescription>
        <detaileddescription>
<para>See also <ref refid="classwx_list_ctrl_1a65a4d9f5fa5bc363e4a93317777d57b4" kindref="member">wxListCtrl::SetItem</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/listctrl.h" line="1397" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_list_event_1aae42616e1339d2a3716943bacf36cb43" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxListEvent::GetKeyCode</definition>
        <argsstring>() const</argsstring>
        <name>GetKeyCode</name>
        <briefdescription>
<para>Key code if the event is a keypress event. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/listctrl.h" line="1402" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_list_event_1a699a5e13a8489796e24eae3274cc4329" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
        <definition>const wxString&amp; wxListEvent::GetLabel</definition>
        <argsstring>() const</argsstring>
        <name>GetLabel</name>
        <briefdescription>
<para>The (new) item label for <computeroutput>EVT_LIST_END_LABEL_EDIT</computeroutput> event. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/listctrl.h" line="1407" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_list_event_1aae0fdeb8a268a8554df044616cfe8e70" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long wxListEvent::GetMask</definition>
        <argsstring>() const</argsstring>
        <name>GetMask</name>
        <briefdescription>
<para>The mask. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/listctrl.h" line="1412" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_list_event_1ae67f9aaec8dddd51224948e6a27527ce" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_point" kindref="compound">wxPoint</ref></type>
        <definition>wxPoint wxListEvent::GetPoint</definition>
        <argsstring>() const</argsstring>
        <name>GetPoint</name>
        <briefdescription>
<para>The position of the mouse pointer if the event is a drag event. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/listctrl.h" line="1417" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_list_event_1af4bef53b9a884cd72b73c08036499951" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
        <definition>const wxString&amp; wxListEvent::GetText</definition>
        <argsstring>() const</argsstring>
        <name>GetText</name>
        <briefdescription>
<para>The text. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/listctrl.h" line="1422" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_list_event_1a5777db14d2fdf3f0e45940d525239ca6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxListEvent::IsEditCancelled</definition>
        <argsstring>() const</argsstring>
        <name>IsEditCancelled</name>
        <briefdescription>
<para>This method only makes sense for <computeroutput>EVT_LIST_END_LABEL_EDIT</computeroutput> message and returns true if it the label editing has been cancelled by the user (<ref refid="classwx_list_event_1a699a5e13a8489796e24eae3274cc4329" kindref="member">GetLabel()</ref> returns an empty string in this case but it doesn&apos;t allow the application to distinguish between really cancelling the edit and the admittedly rare case when the user wants to rename it to an empty string). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/listctrl.h" line="1431" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_list_event_1ab0f010e03c879a4339022d55f8225a55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxListEvent::SetKeyCode</definition>
        <argsstring>(int code)</argsstring>
        <name>SetKeyCode</name>
        <param>
          <type>int</type>
          <declname>code</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classwx_list_event_1aae42616e1339d2a3716943bacf36cb43" kindref="member">GetKeyCode()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/listctrl.h" line="1437" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_list_event_1a5d37c0181944bf5a7fba2c16a4ef697c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxListEvent::SetIndex</definition>
        <argsstring>(long index)</argsstring>
        <name>SetIndex</name>
        <param>
          <type>long</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classwx_list_event_1adbfa912ed37faa860c988d4ebe0a976f" kindref="member">GetIndex()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/listctrl.h" line="1442" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_list_event_1acc4827b22db3c75be8385b1fd154ec64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxListEvent::SetColumn</definition>
        <argsstring>(int col)</argsstring>
        <name>SetColumn</name>
        <param>
          <type>int</type>
          <declname>col</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classwx_list_event_1a299056538a8aa23f318bd49420cb80ca" kindref="member">GetColumn()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/listctrl.h" line="1447" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_list_event_1a940ea698bd2d49f0185beccb293495f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxListEvent::SetPoint</definition>
        <argsstring>(const wxPoint &amp;point)</argsstring>
        <name>SetPoint</name>
        <param>
          <type>const <ref refid="classwx_point" kindref="compound">wxPoint</ref> &amp;</type>
          <declname>point</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classwx_list_event_1ae67f9aaec8dddd51224948e6a27527ce" kindref="member">GetPoint()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/listctrl.h" line="1452" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_list_event_1ab74d9e8fc977e0f01dfa046a53748ea6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxListEvent::SetItem</definition>
        <argsstring>(const wxListItem &amp;item)</argsstring>
        <name>SetItem</name>
        <param>
          <type>const <ref refid="classwx_list_item" kindref="compound">wxListItem</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classwx_list_event_1a7c13d6af1b7946ac1fbb0822fb9ae093" kindref="member">GetItem()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/listctrl.h" line="1457" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_list_event_1ab2af06d15f3dcf206c96a43ed493c339" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxListEvent::SetCacheFrom</definition>
        <argsstring>(long cacheFrom)</argsstring>
        <name>SetCacheFrom</name>
        <param>
          <type>long</type>
          <declname>cacheFrom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classwx_list_event_1a5e643c082b091490d5a3fa4eaca63582" kindref="member">GetCacheFrom()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/listctrl.h" line="1463" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_list_event_1a204a2d5f615e94e099148aeac3cf2c17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxListEvent::SetCacheTo</definition>
        <argsstring>(long cacheTo)</argsstring>
        <name>SetCacheTo</name>
        <param>
          <type>long</type>
          <declname>cacheTo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classwx_list_event_1a89d6e5bfec88d1da90d1f95a24b8a0ba" kindref="member">GetCacheTo()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/listctrl.h" line="1468" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A list event holds information about events associated with <ref refid="classwx_list_ctrl" kindref="compound">wxListCtrl</ref> objects. </para>    </briefdescription>
    <detaileddescription>
<para><linebreak/>
<heading level="2">Events using this class</heading>
</para><para>The following event handler macros redirect the events to member function handlers &apos;<bold>func</bold>&apos; with prototypes like: void<nonbreakablespace/>handlerFuncName(<ref refid="classwx_list_event" kindref="compound">wxListEvent</ref>&amp;<nonbreakablespace/>event)</para><para>Event macros: <itemizedlist>
<listitem><para>EVT_LIST_BEGIN_DRAG(id,  func): Begin dragging with the left mouse button. </para></listitem>
<listitem><para>EVT_LIST_BEGIN_RDRAG(id,  func): Begin dragging with the right mouse button. </para></listitem>
<listitem><para>EVT_LIST_BEGIN_LABEL_EDIT(id,  func): Begin editing a label. This can be prevented by calling <ref refid="classwx_notify_event_1a49e4502414a11e273f51a34a21d2acd3" kindref="member">Veto()</ref>. </para></listitem>
<listitem><para>EVT_LIST_END_LABEL_EDIT(id,  func): Finish editing a label. This can be prevented by calling <ref refid="classwx_notify_event_1a49e4502414a11e273f51a34a21d2acd3" kindref="member">Veto()</ref>. </para></listitem>
<listitem><para>EVT_LIST_DELETE_ITEM(id,  func): Delete an item. </para></listitem>
<listitem><para>EVT_LIST_DELETE_ALL_ITEMS(id,  func): Delete all items. </para></listitem>
<listitem><para>EVT_LIST_ITEM_SELECTED(id,  func): The item has been selected. </para></listitem>
<listitem><para>EVT_LIST_ITEM_DESELECTED(id,  func): The item has been deselected. </para></listitem>
<listitem><para>EVT_LIST_ITEM_ACTIVATED(id,  func): The item has been activated (ENTER or double click). </para></listitem>
<listitem><para>EVT_LIST_ITEM_FOCUSED(id,  func): The currently focused item has changed. </para></listitem>
<listitem><para>EVT_LIST_ITEM_MIDDLE_CLICK(id,  func): The middle mouse button has been clicked on an item. </para></listitem>
<listitem><para>EVT_LIST_ITEM_RIGHT_CLICK(id,  func): The right mouse button has been clicked on an item. </para></listitem>
<listitem><para>EVT_LIST_KEY_DOWN(id,  func): A key has been pressed. <ref refid="classwx_list_event_1adbfa912ed37faa860c988d4ebe0a976f" kindref="member">GetIndex()</ref> may be -1 if no item is selected. </para></listitem>
<listitem><para>EVT_LIST_INSERT_ITEM(id,  func): An item has been inserted. </para></listitem>
<listitem><para>EVT_LIST_COL_CLICK(id,  func): A column (m_col) has been left-clicked. </para></listitem>
<listitem><para>EVT_LIST_COL_RIGHT_CLICK(id,  func): A column (m_col) (which can be -1 if the click occurred outside any column) has been right-clicked. </para></listitem>
<listitem><para>EVT_LIST_COL_BEGIN_DRAG(id,  func): The user started resizing a column - can be vetoed. </para></listitem>
<listitem><para>EVT_LIST_COL_DRAGGING(id,  func): The divider between columns is being dragged. </para></listitem>
<listitem><para>EVT_LIST_COL_END_DRAG(id,  func): A column has been resized by the user. </para></listitem>
<listitem><para>EVT_LIST_CACHE_HINT(id,  func): Prepare cache for a virtual list control <linebreak/>
</para></listitem>
</itemizedlist>
<heading level="2"></heading>
</para><para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxcore" kindref="member">wxCore</ref> &lt;&gt;&lt; =&apos;&apos;&gt;:&lt;/&gt;&amp;;&amp;;&lt; =&apos;&apos;&gt;\ &lt;/&gt;&lt;/&gt;</para><para><simplesect kind="see"><para><ref refid="classwx_list_ctrl" kindref="compound">wxListCtrl</ref> </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="3913">
        <label>wxObject</label>
        <link refid="classwx_object"/>
      </node>
      <node id="3911">
        <label>wxCommandEvent</label>
        <link refid="classwx_command_event"/>
        <childnode refid="3912" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3909">
        <label>wxListEvent</label>
        <link refid="classwx_list_event"/>
        <childnode refid="3910" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3910">
        <label>wxNotifyEvent</label>
        <link refid="classwx_notify_event"/>
        <childnode refid="3911" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3912">
        <label>wxEvent</label>
        <link refid="classwx_event"/>
        <childnode refid="3913" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3918">
        <label>wxObject</label>
        <link refid="classwx_object"/>
        <childnode refid="3919" relation="usage">
          <edgelabel>m_refData</edgelabel>
        </childnode>
      </node>
      <node id="3916">
        <label>wxCommandEvent</label>
        <link refid="classwx_command_event"/>
        <childnode refid="3917" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3914">
        <label>wxListEvent</label>
        <link refid="classwx_list_event"/>
        <childnode refid="3915" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3915">
        <label>wxNotifyEvent</label>
        <link refid="classwx_notify_event"/>
        <childnode refid="3916" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3917">
        <label>wxEvent</label>
        <link refid="classwx_event"/>
        <childnode refid="3918" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3919">
        <label>wxObjectRefData</label>
        <link refid="classwx_object_ref_data"/>
      </node>
    </collaborationgraph>
    <location file="interface/wx/listctrl.h" line="1351" column="1" bodyfile="interface/wx/listctrl.h" bodystart="1350" bodyend="1470"/>
    <listofallmembers>
      <member refid="classwx_object_1a60204063f3cc3aa2fa1c7ff5bda9eb13" prot="protected" virt="non-virtual"><scope>wxListEvent</scope><name>AllocExclusive</name></member>
      <member refid="classwx_notify_event_1a7b23515f827b2ce1da1e6990d9aafe80" prot="public" virt="non-virtual"><scope>wxListEvent</scope><name>Allow</name></member>
      <member refid="classwx_event_1a26878097a702e8d0368da150125d4158" prot="public" virt="pure-virtual"><scope>wxListEvent</scope><name>Clone</name></member>
      <member refid="classwx_object_1a436fc8fe68cf8a31000296d9cd3d2427" prot="protected" virt="virtual"><scope>wxListEvent</scope><name>CloneRefData</name></member>
      <member refid="classwx_object_1a3f4f497c65cef611e121c41f21dd5ccc" prot="protected" virt="virtual"><scope>wxListEvent</scope><name>CreateRefData</name></member>
      <member refid="classwx_list_event_1a5e643c082b091490d5a3fa4eaca63582" prot="public" virt="non-virtual"><scope>wxListEvent</scope><name>GetCacheFrom</name></member>
      <member refid="classwx_list_event_1a89d6e5bfec88d1da90d1f95a24b8a0ba" prot="public" virt="non-virtual"><scope>wxListEvent</scope><name>GetCacheTo</name></member>
      <member refid="classwx_object_1ae6d365f2556b26767ced8410c5e839d0" prot="public" virt="virtual"><scope>wxListEvent</scope><name>GetClassInfo</name></member>
      <member refid="classwx_command_event_1a85c77819c73081dab3a43bfd2fe02e6a" prot="public" virt="non-virtual"><scope>wxListEvent</scope><name>GetClientData</name></member>
      <member refid="classwx_command_event_1adab474dc431edb70a05f470ba1b18b08" prot="public" virt="non-virtual"><scope>wxListEvent</scope><name>GetClientObject</name></member>
      <member refid="classwx_list_event_1a299056538a8aa23f318bd49420cb80ca" prot="public" virt="non-virtual"><scope>wxListEvent</scope><name>GetColumn</name></member>
      <member refid="classwx_list_event_1aa3c4e522c4be72b22094bec43fd94d9f" prot="public" virt="non-virtual"><scope>wxListEvent</scope><name>GetData</name></member>
      <member refid="classwx_event_1ac4958ff6ec32b7f4b23066932d611131" prot="public" virt="virtual"><scope>wxListEvent</scope><name>GetEventCategory</name></member>
      <member refid="classwx_event_1a424a4ffaaaf95164d8952ef9ab2ef444" prot="public" virt="non-virtual"><scope>wxListEvent</scope><name>GetEventObject</name></member>
      <member refid="classwx_event_1a01c89719ef6241a6e612a313a259c1c2" prot="public" virt="non-virtual"><scope>wxListEvent</scope><name>GetEventType</name></member>
      <member refid="classwx_event_1ae7d3e088f0f165ad0421717dd33e4460" prot="public" virt="non-virtual"><scope>wxListEvent</scope><name>GetEventUserData</name></member>
      <member refid="classwx_command_event_1abdba7c3e93f0dbf99f5382e60e7a461a" prot="public" virt="non-virtual"><scope>wxListEvent</scope><name>GetExtraLong</name></member>
      <member refid="classwx_event_1ac5fa5c10d4845d903e58026a42b403c7" prot="public" virt="non-virtual"><scope>wxListEvent</scope><name>GetId</name></member>
      <member refid="classwx_list_event_1a466b53ba7611757a327b8fe9d8600b3a" prot="public" virt="non-virtual"><scope>wxListEvent</scope><name>GetImage</name></member>
      <member refid="classwx_list_event_1adbfa912ed37faa860c988d4ebe0a976f" prot="public" virt="non-virtual"><scope>wxListEvent</scope><name>GetIndex</name></member>
      <member refid="classwx_command_event_1a24ad2aab26646c762ca3092a7ffd5ccd" prot="public" virt="non-virtual"><scope>wxListEvent</scope><name>GetInt</name></member>
      <member refid="classwx_list_event_1a7c13d6af1b7946ac1fbb0822fb9ae093" prot="public" virt="non-virtual"><scope>wxListEvent</scope><name>GetItem</name></member>
      <member refid="classwx_list_event_1aae42616e1339d2a3716943bacf36cb43" prot="public" virt="non-virtual"><scope>wxListEvent</scope><name>GetKeyCode</name></member>
      <member refid="classwx_list_event_1a699a5e13a8489796e24eae3274cc4329" prot="public" virt="non-virtual"><scope>wxListEvent</scope><name>GetLabel</name></member>
      <member refid="classwx_list_event_1aae0fdeb8a268a8554df044616cfe8e70" prot="public" virt="non-virtual"><scope>wxListEvent</scope><name>GetMask</name></member>
      <member refid="classwx_list_event_1ae67f9aaec8dddd51224948e6a27527ce" prot="public" virt="non-virtual"><scope>wxListEvent</scope><name>GetPoint</name></member>
      <member refid="classwx_object_1af3c6c76a775864832f1536d3c0de3a2b" prot="public" virt="non-virtual"><scope>wxListEvent</scope><name>GetRefData</name></member>
      <member refid="classwx_command_event_1a93609c04b8fd7001259efb5d65645fe6" prot="public" virt="non-virtual"><scope>wxListEvent</scope><name>GetSelection</name></member>
      <member refid="classwx_event_1aa770dbcd0f1714ba097836af6534b4c5" prot="public" virt="non-virtual"><scope>wxListEvent</scope><name>GetSkipped</name></member>
      <member refid="classwx_command_event_1a6aef039e72e358840a7c20da6473e9ae" prot="public" virt="non-virtual"><scope>wxListEvent</scope><name>GetString</name></member>
      <member refid="classwx_list_event_1af4bef53b9a884cd72b73c08036499951" prot="public" virt="non-virtual"><scope>wxListEvent</scope><name>GetText</name></member>
      <member refid="classwx_event_1a48662230971127737d2500cef7be549d" prot="public" virt="non-virtual"><scope>wxListEvent</scope><name>GetTimestamp</name></member>
      <member refid="classwx_notify_event_1a907334f4b322d93cf49304a939bba143" prot="public" virt="non-virtual"><scope>wxListEvent</scope><name>IsAllowed</name></member>
      <member refid="classwx_command_event_1a3e5510a00ebb9fb5e7bf7dc5e89f3588" prot="public" virt="non-virtual"><scope>wxListEvent</scope><name>IsChecked</name></member>
      <member refid="classwx_event_1a31f6a4377d6d36964b8eae4e56ec43e0" prot="public" virt="non-virtual"><scope>wxListEvent</scope><name>IsCommandEvent</name></member>
      <member refid="classwx_list_event_1a5777db14d2fdf3f0e45940d525239ca6" prot="public" virt="non-virtual"><scope>wxListEvent</scope><name>IsEditCancelled</name></member>
      <member refid="classwx_object_1a3c7115ef4132dcee0c4fc34e84d7fced" prot="public" virt="non-virtual"><scope>wxListEvent</scope><name>IsKindOf</name></member>
      <member refid="classwx_object_1a059373c494c2369d7db2a556efef8ecf" prot="public" virt="non-virtual"><scope>wxListEvent</scope><name>IsSameAs</name></member>
      <member refid="classwx_command_event_1a44f4144f027fcb7feadb4c23bcbfeb5f" prot="public" virt="non-virtual"><scope>wxListEvent</scope><name>IsSelection</name></member>
      <member refid="classwx_event_1ac81911194f1f59e1454c0397b87975d4" prot="protected" virt="non-virtual"><scope>wxListEvent</scope><name>m_propagationLevel</name></member>
      <member refid="classwx_object_1a9e31954530a0abd54982effc443ed2b8" prot="protected" virt="non-virtual"><scope>wxListEvent</scope><name>m_refData</name></member>
      <member refid="classwx_object_1a07b8f34f5afc5743195c5fed052f55d3" prot="public" virt="non-virtual"><scope>wxListEvent</scope><name>operator delete</name></member>
      <member refid="classwx_object_1a96fa423a1dbc212c8227a5d83825971f" prot="public" virt="non-virtual"><scope>wxListEvent</scope><name>operator new</name></member>
      <member refid="classwx_object_1a2f6f1aa51fe9fc2b1415ca4211a90e9e" prot="public" virt="non-virtual"><scope>wxListEvent</scope><name>Ref</name></member>
      <member refid="classwx_event_1a0acb5c75f6e67b8822ad8ba3c5bdc4fe" prot="public" virt="non-virtual"><scope>wxListEvent</scope><name>ResumePropagation</name></member>
      <member refid="classwx_list_event_1ab2af06d15f3dcf206c96a43ed493c339" prot="public" virt="non-virtual"><scope>wxListEvent</scope><name>SetCacheFrom</name></member>
      <member refid="classwx_list_event_1a204a2d5f615e94e099148aeac3cf2c17" prot="public" virt="non-virtual"><scope>wxListEvent</scope><name>SetCacheTo</name></member>
      <member refid="classwx_command_event_1a1778d16766134e08cafcdb49b06855ce" prot="public" virt="non-virtual"><scope>wxListEvent</scope><name>SetClientData</name></member>
      <member refid="classwx_command_event_1a752e5a0fb8992b062c4dec6866171586" prot="public" virt="non-virtual"><scope>wxListEvent</scope><name>SetClientObject</name></member>
      <member refid="classwx_list_event_1acc4827b22db3c75be8385b1fd154ec64" prot="public" virt="non-virtual"><scope>wxListEvent</scope><name>SetColumn</name></member>
      <member refid="classwx_event_1a3460217d04c36393ab868ba453fde13d" prot="public" virt="non-virtual"><scope>wxListEvent</scope><name>SetEventObject</name></member>
      <member refid="classwx_event_1aa29fb7459d64602e09837fea1e516d27" prot="public" virt="non-virtual"><scope>wxListEvent</scope><name>SetEventType</name></member>
      <member refid="classwx_command_event_1a13ac3c581b99d110bac2c6b74803d2df" prot="public" virt="non-virtual"><scope>wxListEvent</scope><name>SetExtraLong</name></member>
      <member refid="classwx_event_1ab9973f687bfa8a60318d8d9bd629d0d4" prot="public" virt="non-virtual"><scope>wxListEvent</scope><name>SetId</name></member>
      <member refid="classwx_list_event_1a5d37c0181944bf5a7fba2c16a4ef697c" prot="public" virt="non-virtual"><scope>wxListEvent</scope><name>SetIndex</name></member>
      <member refid="classwx_command_event_1aeaed91ffb1d02f07d7ea40f029f95a7c" prot="public" virt="non-virtual"><scope>wxListEvent</scope><name>SetInt</name></member>
      <member refid="classwx_list_event_1ab74d9e8fc977e0f01dfa046a53748ea6" prot="public" virt="non-virtual"><scope>wxListEvent</scope><name>SetItem</name></member>
      <member refid="classwx_list_event_1ab0f010e03c879a4339022d55f8225a55" prot="public" virt="non-virtual"><scope>wxListEvent</scope><name>SetKeyCode</name></member>
      <member refid="classwx_list_event_1a940ea698bd2d49f0185beccb293495f4" prot="public" virt="non-virtual"><scope>wxListEvent</scope><name>SetPoint</name></member>
      <member refid="classwx_object_1afab780710f2adc1bb33310e27590140b" prot="public" virt="non-virtual"><scope>wxListEvent</scope><name>SetRefData</name></member>
      <member refid="classwx_command_event_1a06ca56ac6680fe3b3178d8abd913d450" prot="public" virt="non-virtual"><scope>wxListEvent</scope><name>SetString</name></member>
      <member refid="classwx_event_1ad4380dff3144a986cb960473051a1d8d" prot="public" virt="non-virtual"><scope>wxListEvent</scope><name>SetTimestamp</name></member>
      <member refid="classwx_event_1ac7a178c3c781c80f1308945042f76e7f" prot="public" virt="non-virtual"><scope>wxListEvent</scope><name>ShouldPropagate</name></member>
      <member refid="classwx_event_1a98eb20b76106f9a933c2eb3ee119f66c" prot="public" virt="non-virtual"><scope>wxListEvent</scope><name>Skip</name></member>
      <member refid="classwx_event_1a060a7d222404daff4d3cef30cddeaae3" prot="public" virt="non-virtual"><scope>wxListEvent</scope><name>StopPropagation</name></member>
      <member refid="classwx_object_1af51efc6b1ae632fc7f0cd7ebbce9fa36" prot="public" virt="non-virtual"><scope>wxListEvent</scope><name>UnRef</name></member>
      <member refid="classwx_object_1a74b40e42d19a4b9e9bec0b57d62a5725" prot="public" virt="non-virtual"><scope>wxListEvent</scope><name>UnShare</name></member>
      <member refid="classwx_notify_event_1a49e4502414a11e273f51a34a21d2acd3" prot="public" virt="non-virtual"><scope>wxListEvent</scope><name>Veto</name></member>
      <member refid="classwx_command_event_1aad941347872cd71fedcfc765fae7b2f7" prot="public" virt="non-virtual"><scope>wxListEvent</scope><name>wxCommandEvent</name></member>
      <member refid="classwx_event_1aaf2a5cf056d006859cea36689ba13d36" prot="public" virt="non-virtual"><scope>wxListEvent</scope><name>wxEvent</name></member>
      <member refid="classwx_list_event_1a1b66e99f86c172366c8548c655f25b84" prot="public" virt="non-virtual"><scope>wxListEvent</scope><name>wxListEvent</name></member>
      <member refid="classwx_notify_event_1a4c97324fca04afe13beaa8a8a307ec7b" prot="public" virt="non-virtual"><scope>wxListEvent</scope><name>wxNotifyEvent</name></member>
      <member refid="classwx_object_1acaa378363a28af421ab56ad7b46eadf0" prot="public" virt="non-virtual"><scope>wxListEvent</scope><name>wxObject</name></member>
      <member refid="classwx_object_1a4721b4dc9b7aff0f30904ba2ea3954cf" prot="public" virt="non-virtual"><scope>wxListEvent</scope><name>wxObject</name></member>
      <member refid="classwx_object_1a2a51aa8bfbab47ca2f051bcf84b3f35b" prot="public" virt="virtual"><scope>wxListEvent</scope><name>~wxObject</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
