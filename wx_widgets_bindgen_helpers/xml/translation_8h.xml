<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="translation_8h" kind="file" language="C++">
    <compoundname>translation.h</compoundname>
    <innerclass refid="classwx_translations" prot="public">wxTranslations</innerclass>
    <innerclass refid="classwx_translations_loader" prot="public">wxTranslationsLoader</innerclass>
    <innerclass refid="classwx_file_translations_loader" prot="public">wxFileTranslationsLoader</innerclass>
    <innerclass refid="classwx_resource_translations_loader" prot="public">wxResourceTranslationsLoader</innerclass>
    <innerclass refid="classwx_msg_catalog" prot="public">wxMsgCatalog</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__group__funcmacro__string_1gadc7c2f1bab3914af93feb47945003409" prot="public" static="no">
        <name>wxPLURAL</name>
        <param><defname>string</defname></param>
        <param><defname>plural</defname></param>
        <param><defname>n</defname></param>
        <briefdescription>
<para>This macro is identical to <ref refid="group__group__funcmacro__string_1ga8a02b8875a521df57263a9e6f090f2d0" kindref="member">_()</ref> but for the plural variant of <ref refid="group__group__funcmacro__string_1ga223e9aea5b1a2252c7e632613c7b9a74" kindref="member">wxGetTranslation()</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A const <ref refid="classwx_string" kindref="compound">wxString</ref>.</para></simplesect>
Include file:<linebreak/>
 <verbatim>#include &lt;wx/intl.h&gt; </verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/translation.h" line="464" column="9" bodyfile="interface/wx/translation.h" bodystart="464" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__group__funcmacro__string_1gab8862de0f74049708bfea75ae9e14c45" prot="public" static="no">
        <name>wxTRANSLATE</name>
        <param><defname>string</defname></param>
        <briefdescription>
<para>This macro doesn&apos;t do anything in the program code <ndash/> it simply expands to the value of its argument. </para>        </briefdescription>
        <detaileddescription>
<para>However it does have a purpose which is to mark the literal strings for the extraction into the message catalog created by <computeroutput>xgettext</computeroutput> program. Usually this is achieved using <ref refid="group__group__funcmacro__string_1ga8a02b8875a521df57263a9e6f090f2d0" kindref="member">_()</ref> but that macro not only marks the string for extraction but also expands into a <ref refid="group__group__funcmacro__string_1ga223e9aea5b1a2252c7e632613c7b9a74" kindref="member">wxGetTranslation()</ref> call which means that it cannot be used in some situations, notably for static array initialization.</para><para>Here is an example which should make it more clear: suppose that you have a static array of strings containing the weekday names and which have to be translated (note that it is a bad example, really, as <ref refid="classwx_date_time" kindref="compound">wxDateTime</ref> already can be used to get the localized week day names already). If you write:</para><para><programlisting><codeline><highlight class="normal">static<sp/>const<sp/>char<sp/>*<sp/>const<sp/>weekdays[]<sp/>=<sp/>{<sp/>_(&quot;Mon&quot;),<sp/>...,<sp/>_(&quot;Sun&quot;)<sp/>};</highlight></codeline>
<codeline><highlight class="normal">...</highlight></codeline>
<codeline><highlight class="normal">//<sp/>use<sp/>weekdays[n]<sp/>as<sp/>usual</highlight></codeline>
</programlisting></para><para>The code wouldn&apos;t compile because the function calls are forbidden in the array initializer. So instead you should do this:</para><para><programlisting><codeline><highlight class="normal">static<sp/>const<sp/>char<sp/>*<sp/>const<sp/>weekdays[]<sp/>=<sp/>{<sp/>wxTRANSLATE(&quot;Mon&quot;),<sp/>...,</highlight></codeline>
<codeline><highlight class="normal">wxTRANSLATE(&quot;Sun&quot;)<sp/>};</highlight></codeline>
<codeline><highlight class="normal">...</highlight></codeline>
<codeline><highlight class="normal">//<sp/>use<sp/>wxGetTranslation(weekdays[n])</highlight></codeline>
</programlisting></para><para>Note that although the code <bold>would</bold> compile if you simply omit <ref refid="group__group__funcmacro__string_1gab8862de0f74049708bfea75ae9e14c45" kindref="member">wxTRANSLATE()</ref> in the above, it wouldn&apos;t work as expected because there would be no translations for the weekday names in the program message catalog and <ref refid="group__group__funcmacro__string_1ga223e9aea5b1a2252c7e632613c7b9a74" kindref="member">wxGetTranslation()</ref> wouldn&apos;t find them.</para><para><simplesect kind="return"><para>A const wxChar*.</para></simplesect>
Include file:<linebreak/>
 <verbatim>#include &lt;wx/intl.h&gt; </verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/translation.h" line="507" column="9" bodyfile="interface/wx/translation.h" bodystart="507" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__group__funcmacro__string_1ga223e9aea5b1a2252c7e632613c7b9a74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
        <definition>const wxString&amp; wxGetTranslation</definition>
        <argsstring>(const wxString &amp;string, const wxString &amp;domain=wxEmptyString)</argsstring>
        <name>wxGetTranslation</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>string</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>domain</declname>
          <defval><ref refid="interface_2wx_2string_8h_1a9a321d587166a30017b608dd2d234033" kindref="member">wxEmptyString</ref></defval>
        </param>
        <briefdescription>
<para>This function returns the translation of <emphasis>string</emphasis> in the current <computeroutput>locale()</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>If the string is not found in any of the loaded message catalogs (see <ref refid="overview_i18n" kindref="compound">Internationalization</ref>), the original string is returned. In debug build, an error message is logged <ndash/> this should help to find the strings which were not yet translated. If <emphasis>domain</emphasis> is specified then only that domain/catalog is searched for a matching string. As this function is used very often, an alternative (and also common in Unix world) syntax is provided: the <ref refid="group__group__funcmacro__string_1ga8a02b8875a521df57263a9e6f090f2d0" kindref="member">_()</ref> macro is defined to do the same thing as <ref refid="group__group__funcmacro__string_1ga223e9aea5b1a2252c7e632613c7b9a74" kindref="member">wxGetTranslation()</ref>.</para><para>This function is thread-safe.</para><para><simplesect kind="note"><para>This function is not suitable for literal strings in Unicode builds since the literal strings must be enclosed in <ref refid="group__group__funcmacro__string_1ga437ea6ba615b75dac8603e96ec864160" kindref="member">wxT()</ref> macro which makes them unrecognised by <computeroutput>xgettext</computeroutput>, and so they are not extracted to the message catalog. Instead, use the <ref refid="group__group__funcmacro__string_1ga8a02b8875a521df57263a9e6f090f2d0" kindref="member">_()</ref> and <ref refid="group__group__funcmacro__string_1gadc7c2f1bab3914af93feb47945003409" kindref="member">wxPLURAL()</ref> macro for all literal strings.</para></simplesect>
<simplesect kind="see"><para><ref refid="group__group__funcmacro__string_1ga6810b710e8860fa7088fc454feb9ecb1" kindref="member">wxGetTranslation(const wxString&amp;, const wxString&amp;, unsigned, const wxString&amp;)</ref></para></simplesect>
Include file:<linebreak/>
 <verbatim>#include &lt;wx/intl.h&gt; </verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/translation.h" line="532" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__group__funcmacro__string_1ga6810b710e8860fa7088fc454feb9ecb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
        <definition>const wxString&amp; wxGetTranslation</definition>
        <argsstring>(const wxString &amp;string, const wxString &amp;plural, unsigned n, const wxString &amp;domain=wxEmptyString)</argsstring>
        <name>wxGetTranslation</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>string</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>plural</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>domain</declname>
          <defval><ref refid="interface_2wx_2string_8h_1a9a321d587166a30017b608dd2d234033" kindref="member">wxEmptyString</ref></defval>
        </param>
        <briefdescription>
<para>This is an overloaded version of <ref refid="group__group__funcmacro__string_1ga223e9aea5b1a2252c7e632613c7b9a74" kindref="member">wxGetTranslation(const wxString&amp;, const wxString&amp;)</ref>, please see its documentation for general information. </para>        </briefdescription>
        <detaileddescription>
<para>This version is used when retrieving translation of string that has different singular and plural forms in English or different plural forms in some other language. Like <ref refid="group__group__funcmacro__string_1ga223e9aea5b1a2252c7e632613c7b9a74" kindref="member">wxGetTranslation(const wxString&amp;,const wxString&amp;)</ref>, the <emphasis>string</emphasis> parameter must contain the singular form of the string to be converted and is used as the key for the search in the catalog. The <emphasis>plural</emphasis> parameter is the plural form (in English). The parameter <emphasis>n</emphasis> is used to determine the plural form. If no message catalog is found, <emphasis>string</emphasis> is returned if &quot;n == 1&quot;, otherwise <emphasis>plural</emphasis> is returned.</para><para>See GNU gettext Manual for additional information on plural forms handling: <ulink url="http://www.gnu.org/software/gettext/manual/gettext.html#Plural-forms">http://www.gnu.org/software/gettext/manual/gettext.html#Plural-forms</ulink> For a shorter alternative see the <ref refid="group__group__funcmacro__string_1gadc7c2f1bab3914af93feb47945003409" kindref="member">wxPLURAL()</ref> macro.</para><para>This function is thread-safe.</para><para>Include file:<linebreak/>
 <verbatim>#include &lt;wx/intl.h&gt; </verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/translation.h" line="557" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__group__funcmacro__string_1ga8a02b8875a521df57263a9e6f090f2d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
        <definition>const wxString&amp; _</definition>
        <argsstring>(const wxString &amp;string)</argsstring>
        <name>_</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>string</declname>
        </param>
        <briefdescription>
<para>Macro to be used around all literal strings that should be translated. </para>        </briefdescription>
        <detaileddescription>
<para>This macro expands into a call to <ref refid="group__group__funcmacro__string_1ga223e9aea5b1a2252c7e632613c7b9a74" kindref="member">wxGetTranslation()</ref>, so it marks the message for the extraction by <computeroutput>xgettext</computeroutput> just as <ref refid="group__group__funcmacro__string_1gab8862de0f74049708bfea75ae9e14c45" kindref="member">wxTRANSLATE()</ref> does, but also returns the translation of the string for the current locale during execution.</para><para>This macro is thread-safe.</para><para>Include file:<linebreak/>
 <verbatim>#include &lt;wx/intl.h&gt; </verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/translation.h" line="573" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="interface/wx/translation.h"/>
  </compounddef>
</doxygen>
