<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classwx_t_c_p_server" kind="class" language="C++" prot="public">
    <compoundname>wxTCPServer</compoundname>
    <basecompoundref refid="classwx_object" prot="public" virt="non-virtual">wxObject</basecompoundref>
    <includes local="no">wx/sckipc.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_t_c_p_server_1a8f797f98f8a0394fe8d37ec4560653b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxTCPServer::wxTCPServer</definition>
        <argsstring>()</argsstring>
        <name>wxTCPServer</name>
        <briefdescription>
<para>Constructs a server object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/sckipc.h" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_t_c_p_server_1ac0dbb7a47a92e18400785d03f97bd575" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxTCPServer::Create</definition>
        <argsstring>(const wxString &amp;service)</argsstring>
        <name>Create</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>service</declname>
        </param>
        <briefdescription>
<para>Registers the server using the given service name. </para>        </briefdescription>
        <detaileddescription>
<para>Under Unix, the string must contain an integer id which is used as an Internet port number. false is returned if the call failed (for example, the port number is already in use). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/sckipc.h" line="67" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_t_c_p_server_1a7042468880f14ee549cbf75c91c889cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_connection_base" kindref="compound">wxConnectionBase</ref> *</type>
        <definition>virtual wxConnectionBase* wxTCPServer::OnAcceptConnection</definition>
        <argsstring>(const wxString &amp;topic)</argsstring>
        <name>OnAcceptConnection</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>topic</declname>
        </param>
        <briefdescription>
<para>When a client calls <bold>MakeConnection</bold>, the server receives the message and this member is called. </para>        </briefdescription>
        <detaileddescription>
<para>The application should derive a member to intercept this message and return a connection object of either the standard <ref refid="classwx_t_c_p_connection" kindref="compound">wxTCPConnection</ref> type, or of a user-derived type. If the topic is &quot;STDIO&quot;, the application may wish to refuse the connection. Under Unix, when a server is created the OnAcceptConnection message is always sent for standard input and output. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/sckipc.h" line="80" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A <ref refid="classwx_t_c_p_server" kindref="compound">wxTCPServer</ref> object represents the server part of a client-server conversation. </para>    </briefdescription>
    <detaileddescription>
<para>It emulates a DDE-style protocol, but uses TCP/IP which is available on most platforms.</para><para>A DDE-based implementation for Windows is available using <ref refid="classwx_d_d_e_server" kindref="compound">wxDDEServer</ref>.</para><para><heading level="2"></heading>
</para><para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxnet" kindref="member">wxNet</ref> &lt;&gt;&lt; =&apos;&apos;&gt;:&lt;/&gt;&amp;;&amp;;&lt; =&apos;&apos;&gt;\ &lt;/&gt;&lt;/&gt;</para><para><simplesect kind="see"><para><ref refid="classwx_t_c_p_client" kindref="compound">wxTCPClient</ref>, <ref refid="classwx_t_c_p_connection" kindref="compound">wxTCPConnection</ref>, <ref refid="overview_ipc" kindref="compound">Interprocess Communication</ref> </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="7808">
        <label>wxObject</label>
        <link refid="classwx_object"/>
      </node>
      <node id="7807">
        <label>wxTCPServer</label>
        <link refid="classwx_t_c_p_server"/>
        <childnode refid="7808" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="7810">
        <label>wxObject</label>
        <link refid="classwx_object"/>
        <childnode refid="7811" relation="usage">
          <edgelabel>m_refData</edgelabel>
        </childnode>
      </node>
      <node id="7809">
        <label>wxTCPServer</label>
        <link refid="classwx_t_c_p_server"/>
        <childnode refid="7810" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7811">
        <label>wxObjectRefData</label>
        <link refid="classwx_object_ref_data"/>
      </node>
    </collaborationgraph>
    <location file="interface/wx/sckipc.h" line="53" column="1" bodyfile="interface/wx/sckipc.h" bodystart="52" bodyend="81"/>
    <listofallmembers>
      <member refid="classwx_object_1a60204063f3cc3aa2fa1c7ff5bda9eb13" prot="protected" virt="non-virtual"><scope>wxTCPServer</scope><name>AllocExclusive</name></member>
      <member refid="classwx_object_1a436fc8fe68cf8a31000296d9cd3d2427" prot="protected" virt="virtual"><scope>wxTCPServer</scope><name>CloneRefData</name></member>
      <member refid="classwx_t_c_p_server_1ac0dbb7a47a92e18400785d03f97bd575" prot="public" virt="virtual"><scope>wxTCPServer</scope><name>Create</name></member>
      <member refid="classwx_object_1a3f4f497c65cef611e121c41f21dd5ccc" prot="protected" virt="virtual"><scope>wxTCPServer</scope><name>CreateRefData</name></member>
      <member refid="classwx_object_1ae6d365f2556b26767ced8410c5e839d0" prot="public" virt="virtual"><scope>wxTCPServer</scope><name>GetClassInfo</name></member>
      <member refid="classwx_object_1af3c6c76a775864832f1536d3c0de3a2b" prot="public" virt="non-virtual"><scope>wxTCPServer</scope><name>GetRefData</name></member>
      <member refid="classwx_object_1a3c7115ef4132dcee0c4fc34e84d7fced" prot="public" virt="non-virtual"><scope>wxTCPServer</scope><name>IsKindOf</name></member>
      <member refid="classwx_object_1a059373c494c2369d7db2a556efef8ecf" prot="public" virt="non-virtual"><scope>wxTCPServer</scope><name>IsSameAs</name></member>
      <member refid="classwx_object_1a9e31954530a0abd54982effc443ed2b8" prot="protected" virt="non-virtual"><scope>wxTCPServer</scope><name>m_refData</name></member>
      <member refid="classwx_t_c_p_server_1a7042468880f14ee549cbf75c91c889cb" prot="public" virt="virtual"><scope>wxTCPServer</scope><name>OnAcceptConnection</name></member>
      <member refid="classwx_object_1a07b8f34f5afc5743195c5fed052f55d3" prot="public" virt="non-virtual"><scope>wxTCPServer</scope><name>operator delete</name></member>
      <member refid="classwx_object_1a96fa423a1dbc212c8227a5d83825971f" prot="public" virt="non-virtual"><scope>wxTCPServer</scope><name>operator new</name></member>
      <member refid="classwx_object_1a2f6f1aa51fe9fc2b1415ca4211a90e9e" prot="public" virt="non-virtual"><scope>wxTCPServer</scope><name>Ref</name></member>
      <member refid="classwx_object_1afab780710f2adc1bb33310e27590140b" prot="public" virt="non-virtual"><scope>wxTCPServer</scope><name>SetRefData</name></member>
      <member refid="classwx_object_1af51efc6b1ae632fc7f0cd7ebbce9fa36" prot="public" virt="non-virtual"><scope>wxTCPServer</scope><name>UnRef</name></member>
      <member refid="classwx_object_1a74b40e42d19a4b9e9bec0b57d62a5725" prot="public" virt="non-virtual"><scope>wxTCPServer</scope><name>UnShare</name></member>
      <member refid="classwx_object_1acaa378363a28af421ab56ad7b46eadf0" prot="public" virt="non-virtual"><scope>wxTCPServer</scope><name>wxObject</name></member>
      <member refid="classwx_object_1a4721b4dc9b7aff0f30904ba2ea3954cf" prot="public" virt="non-virtual"><scope>wxTCPServer</scope><name>wxObject</name></member>
      <member refid="classwx_t_c_p_server_1a8f797f98f8a0394fe8d37ec4560653b2" prot="public" virt="non-virtual"><scope>wxTCPServer</scope><name>wxTCPServer</name></member>
      <member refid="classwx_object_1a2a51aa8bfbab47ca2f051bcf84b3f35b" prot="public" virt="virtual"><scope>wxTCPServer</scope><name>~wxObject</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
