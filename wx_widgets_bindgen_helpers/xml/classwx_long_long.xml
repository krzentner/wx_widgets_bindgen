<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classwx_long_long" kind="class" language="C++" prot="public">
    <compoundname>wxLongLong</compoundname>
    <includes local="no">wx/longlong.h</includes>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classwx_long_long_1a4e15c71985d33a5d2d5ec833261e22ac" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_long_long" kindref="compound">wxLongLong</ref></type>
        <definition>wxLongLong wxLongLong::Abs</definition>
        <argsstring>() const</argsstring>
        <name>Abs</name>
        <briefdescription>
<para>Returns an absolute value of <ref refid="classwx_long_long" kindref="compound">wxLongLong</ref> - either making a copy (const version) or modifying it in place (the second one). </para>        </briefdescription>
        <detaileddescription>
<para>Not in <ref refid="classwx_u_long_long" kindref="compound">wxULongLong</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/longlong.h" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_long_long_1a0307c69edd5e97bbe79728cde675890e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_long_long" kindref="compound">wxLongLong</ref> &amp;</type>
        <definition>wxLongLong&amp; wxLongLong::Abs</definition>
        <argsstring>()</argsstring>
        <name>Abs</name>
        <briefdescription>
<para>Returns an absolute value of <ref refid="classwx_long_long" kindref="compound">wxLongLong</ref> - either making a copy (const version) or modifying it in place (the second one). </para>        </briefdescription>
        <detaileddescription>
<para>Not in <ref refid="classwx_u_long_long" kindref="compound">wxULongLong</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/longlong.h" line="63" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classwx_long_long_1a50fd4891f0e083e18caf77be422589b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_long_long" kindref="compound">wxLongLong</ref></type>
        <definition>wxLongLong wxLongLong::operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
<para>Pre/post increment operator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/longlong.h" line="133" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_long_long_1a7de3b9948d0a797c8424af76c852e823" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_long_long" kindref="compound">wxLongLong</ref></type>
        <definition>wxLongLong wxLongLong::operator++</definition>
        <argsstring>(int)</argsstring>
        <name>operator++</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
<para>Pre/post increment operator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/longlong.h" line="134" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classwx_long_long_1a9f65aaf7453be2685578727515b7243d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_long_long" kindref="compound">wxLongLong</ref></type>
        <definition>wxLongLong wxLongLong::operator--</definition>
        <argsstring>()</argsstring>
        <name>operator--</name>
        <briefdescription>
<para>Pre/post decrement operator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/longlong.h" line="141" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_long_long_1a413ffd977a302be5b501b6abe1c7c486" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_long_long" kindref="compound">wxLongLong</ref></type>
        <definition>wxLongLong wxLongLong::operator--</definition>
        <argsstring>(int)</argsstring>
        <name>operator--</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
<para>Pre/post decrement operator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/longlong.h" line="142" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_long_long_1ac1035af57194194a32b273ce768e2a56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxLongLong::wxLongLong</definition>
        <argsstring>()</argsstring>
        <name>wxLongLong</name>
        <briefdescription>
<para>Default constructor initializes the object to 0. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/longlong.h" line="44" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_long_long_1aa2fcc54f965a709ee16bba5300a4d694" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxLongLong::wxLongLong</definition>
        <argsstring>(wxLongLong_t ll)</argsstring>
        <name>wxLongLong</name>
        <param>
          <type>wxLongLong_t</type>
          <declname>ll</declname>
        </param>
        <briefdescription>
<para>Constructor from native long long (only for compilers supporting it). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/longlong.h" line="49" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_long_long_1a71f0fdaa2925f229ab33c6a115b4660d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxLongLong::wxLongLong</definition>
        <argsstring>(long hi, unsigned long lo)</argsstring>
        <name>wxLongLong</name>
        <param>
          <type>long</type>
          <declname>hi</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>lo</declname>
        </param>
        <briefdescription>
<para>Constructor from 2 longs: the high and low part are combined into one <ref refid="classwx_long_long" kindref="compound">wxLongLong</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/longlong.h" line="55" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_long_long_1a2197ed364fd839c0cfb10f507cf51c1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_long_long" kindref="compound">wxLongLong</ref></type>
        <definition>wxLongLong wxLongLong::Assign</definition>
        <argsstring>(double d)</argsstring>
        <name>Assign</name>
        <param>
          <type>double</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>This allows to convert a double value to <ref refid="classwx_long_long" kindref="compound">wxLongLong</ref> type. </para>        </briefdescription>
        <detaileddescription>
<para>Such conversion is not always possible in which case the result will be silently truncated in a platform-dependent way. Not in <ref refid="classwx_u_long_long" kindref="compound">wxULongLong</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/longlong.h" line="72" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_long_long_1ad92389f2e86cb3d37abf6896c89f4945" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long wxLongLong::GetHi</definition>
        <argsstring>() const</argsstring>
        <name>GetHi</name>
        <briefdescription>
<para>Returns the high 32 bits of 64 bit integer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/longlong.h" line="77" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_long_long_1a981ef2e6455f959096d5c5337d930ba8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long wxLongLong::GetLo</definition>
        <argsstring>() const</argsstring>
        <name>GetLo</name>
        <briefdescription>
<para>Returns the low 32 bits of 64 bit integer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/longlong.h" line="82" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_long_long_1a70de399bae04103fcc5b3c4024588992" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>wxLongLong_t</type>
        <definition>wxLongLong_t wxLongLong::GetValue</definition>
        <argsstring>() const</argsstring>
        <name>GetValue</name>
        <briefdescription>
<para>Convert to native long long (only for compilers supporting it). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/longlong.h" line="87" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_long_long_1a759bba940ce8229a9c99738bd4fd5d7a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double wxLongLong::ToDouble</definition>
        <argsstring>() const</argsstring>
        <name>ToDouble</name>
        <briefdescription>
<para>Returns the value as <computeroutput>double</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/longlong.h" line="92" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_long_long_1a0a4bb948e62cb4c491d10a90372d57a5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long wxLongLong::ToLong</definition>
        <argsstring>() const</argsstring>
        <name>ToLong</name>
        <briefdescription>
<para>Truncate <ref refid="classwx_long_long" kindref="compound">wxLongLong</ref> to long. </para>        </briefdescription>
        <detaileddescription>
<para>If the conversion loses data (i.e. the <ref refid="classwx_long_long" kindref="compound">wxLongLong</ref> value is outside the range of built-in long type), an assert will be triggered in debug mode. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/longlong.h" line="99" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_long_long_1a45fe4fecad34be3e92e5022f8720e4a4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>wxString wxLongLong::ToString</definition>
        <argsstring>() const</argsstring>
        <name>ToString</name>
        <briefdescription>
<para>Returns the string representation of a <ref refid="classwx_long_long" kindref="compound">wxLongLong</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/longlong.h" line="104" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_long_long_1af1cf67784bef81f387bd36479c0a1740" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_long_long" kindref="compound">wxLongLong</ref></type>
        <definition>wxLongLong wxLongLong::operator+</definition>
        <argsstring>(const wxLongLong &amp;ll) const</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classwx_long_long" kindref="compound">wxLongLong</ref> &amp;</type>
          <declname>ll</declname>
        </param>
        <briefdescription>
<para>Adds 2 wxLongLongs together and returns the result. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/longlong.h" line="110" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_long_long_1a5cd55e4f060afcb029d4f13d22044e7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_long_long" kindref="compound">wxLongLong</ref> &amp;</type>
        <definition>wxLongLong&amp; wxLongLong::operator+</definition>
        <argsstring>(const wxLongLong &amp;ll)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classwx_long_long" kindref="compound">wxLongLong</ref> &amp;</type>
          <declname>ll</declname>
        </param>
        <briefdescription>
<para>Add another <ref refid="classwx_long_long" kindref="compound">wxLongLong</ref> to this one. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/longlong.h" line="115" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_long_long_1acd71c3139f4f55f8a625c22d5ffe53f6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_long_long" kindref="compound">wxLongLong</ref></type>
        <definition>wxLongLong wxLongLong::operator-</definition>
        <argsstring>(const wxLongLong &amp;ll) const</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classwx_long_long" kindref="compound">wxLongLong</ref> &amp;</type>
          <declname>ll</declname>
        </param>
        <briefdescription>
<para>Subtracts 2 wxLongLongs and returns the result. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/longlong.h" line="121" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_long_long_1a125b1c3808992e3497168f0fd8b00b2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_long_long" kindref="compound">wxLongLong</ref> &amp;</type>
        <definition>wxLongLong&amp; wxLongLong::operator-</definition>
        <argsstring>(const wxLongLong &amp;ll)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classwx_long_long" kindref="compound">wxLongLong</ref> &amp;</type>
          <declname>ll</declname>
        </param>
        <briefdescription>
<para>Subtracts another <ref refid="classwx_long_long" kindref="compound">wxLongLong</ref> from this one. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/longlong.h" line="126" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_long_long_1ac9200e06bfc0cd1f1e0d295f519bd47f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_long_long" kindref="compound">wxLongLong</ref></type>
        <definition>wxLongLong wxLongLong::operator-</definition>
        <argsstring>() const</argsstring>
        <name>operator-</name>
        <briefdescription>
<para>Returns the value of this <ref refid="classwx_long_long" kindref="compound">wxLongLong</ref> with opposite sign. </para>        </briefdescription>
        <detaileddescription>
<para>Not in <ref refid="classwx_u_long_long" kindref="compound">wxULongLong</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/longlong.h" line="148" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_long_long_1a3633d9dc2e50a822f486ab9a9520c3a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_long_long" kindref="compound">wxLongLong</ref> &amp;</type>
        <definition>wxLongLong&amp; wxLongLong::operator=</definition>
        <argsstring>(const wxULongLong &amp;ll)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classwx_u_long_long" kindref="compound">wxULongLong</ref> &amp;</type>
          <declname>ll</declname>
        </param>
        <briefdescription>
<para>Assignment operator from unsigned long long. </para>        </briefdescription>
        <detaileddescription>
<para>The sign bit will be copied too.</para><para><simplesect kind="since"><para>2.7.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/longlong.h" line="155" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_long_long_1ace79a5bc5c19f0b16fae047c2b6e204e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_long_long" kindref="compound">wxLongLong</ref> &amp;</type>
        <definition>wxLongLong&amp; wxLongLong::operator=</definition>
        <argsstring>(wxLongLong_t ll)</argsstring>
        <name>operator=</name>
        <param>
          <type>wxLongLong_t</type>
          <declname>ll</declname>
        </param>
        <briefdescription>
<para>Assignment operator from native long long (only for compilers supporting it). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/longlong.h" line="160" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_long_long_1a522b90d0342c6ae7e5e1df6fceb2cdad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_long_long" kindref="compound">wxLongLong</ref> &amp;</type>
        <definition>wxLongLong&amp; wxLongLong::operator=</definition>
        <argsstring>(wxULongLong_t ll)</argsstring>
        <name>operator=</name>
        <param>
          <type>wxULongLong_t</type>
          <declname>ll</declname>
        </param>
        <briefdescription>
<para>Assignment operator from native unsigned long long (only for compilers supporting it). </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>2.7.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/longlong.h" line="167" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_long_long_1a639b49f3a4efe1e6a06947919a454f14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_long_long" kindref="compound">wxLongLong</ref> &amp;</type>
        <definition>wxLongLong&amp; wxLongLong::operator=</definition>
        <argsstring>(long l)</argsstring>
        <name>operator=</name>
        <param>
          <type>long</type>
          <declname>l</declname>
        </param>
        <briefdescription>
<para>Assignment operator from long. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>2.7.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/longlong.h" line="174" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_long_long_1a0c36689c172b743a4ca81ca98b76708f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_long_long" kindref="compound">wxLongLong</ref> &amp;</type>
        <definition>wxLongLong&amp; wxLongLong::operator=</definition>
        <argsstring>(unsigned long l)</argsstring>
        <name>operator=</name>
        <param>
          <type>unsigned long</type>
          <declname>l</declname>
        </param>
        <briefdescription>
<para>Assignment operator from unsigned long. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>2.7.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/longlong.h" line="181" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class represents a signed 64 bit long number. </para>    </briefdescription>
    <detaileddescription>
<para>It is implemented using the native 64 bit type where available (machines with 64 bit longs or compilers which have (an analog of) <emphasis>long</emphasis> long type) and uses the emulation code in the other cases which ensures that it is the most efficient solution for working with 64 bit integers independently of the architecture.</para><para><ref refid="classwx_long_long" kindref="compound">wxLongLong</ref> defines all usual arithmetic operations such as addition, subtraction, bitwise shifts and logical operations as well as multiplication and division (not yet for the machines without native <emphasis>long</emphasis> long). It also has operators for implicit construction from and conversion to the native <emphasis>long</emphasis> long type if it exists and <emphasis>long</emphasis>.</para><para>You would usually use this type in exactly the same manner as any other (built-in) arithmetic type. Note that <ref refid="classwx_long_long" kindref="compound">wxLongLong</ref> is a signed type, if you want unsigned values use <ref refid="classwx_u_long_long" kindref="compound">wxULongLong</ref> which has exactly the same API as <ref refid="classwx_long_long" kindref="compound">wxLongLong</ref> except when explicitly mentioned otherwise.</para><para>If a native (i.e. supported directly by the compiler) 64 bit integer type was found to exist, <emphasis>wxLongLong_t</emphasis> macro will be defined to correspond to it. Also, in this case only, two additional macros will be defined:<itemizedlist>
<listitem><para><ref refid="group__group__funcmacro__misc_1ga6203af2f81f7b2a3dd8aa384426631a8" kindref="member">wxLongLongFmtSpec()</ref> for printing 64 bit integers using the standard <computeroutput>printf()</computeroutput> function (but see also <ref refid="classwx_long_long_1a45fe4fecad34be3e92e5022f8720e4a4" kindref="member">wxLongLong::ToString</ref> for a more portable solution);</para></listitem><listitem><para><ref refid="group__group__funcmacro__misc_1ga8d211f75f18b9dfa770f93a1518e78da" kindref="member">wxLL()</ref> for defining 64 bit integer compile-time constants.</para></listitem></itemizedlist>
</para><para><heading level="2"></heading>
</para><para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxbase" kindref="member">wxBase</ref> &lt;&gt;&lt; =&apos;&apos;&gt;:&lt;/&gt;&amp;;&amp;;&lt; =&apos;&apos;&gt;\ &lt;/&gt;&lt;/&gt; </para>    </detaileddescription>
    <location file="interface/wx/longlong.h" line="39" column="1" bodyfile="interface/wx/longlong.h" bodystart="38" bodyend="183"/>
    <listofallmembers>
      <member refid="classwx_long_long_1a4e15c71985d33a5d2d5ec833261e22ac" prot="public" virt="non-virtual"><scope>wxLongLong</scope><name>Abs</name></member>
      <member refid="classwx_long_long_1a0307c69edd5e97bbe79728cde675890e" prot="public" virt="non-virtual"><scope>wxLongLong</scope><name>Abs</name></member>
      <member refid="classwx_long_long_1a2197ed364fd839c0cfb10f507cf51c1a" prot="public" virt="non-virtual"><scope>wxLongLong</scope><name>Assign</name></member>
      <member refid="classwx_long_long_1ad92389f2e86cb3d37abf6896c89f4945" prot="public" virt="non-virtual"><scope>wxLongLong</scope><name>GetHi</name></member>
      <member refid="classwx_long_long_1a981ef2e6455f959096d5c5337d930ba8" prot="public" virt="non-virtual"><scope>wxLongLong</scope><name>GetLo</name></member>
      <member refid="classwx_long_long_1a70de399bae04103fcc5b3c4024588992" prot="public" virt="non-virtual"><scope>wxLongLong</scope><name>GetValue</name></member>
      <member refid="classwx_long_long_1af1cf67784bef81f387bd36479c0a1740" prot="public" virt="non-virtual"><scope>wxLongLong</scope><name>operator+</name></member>
      <member refid="classwx_long_long_1a5cd55e4f060afcb029d4f13d22044e7c" prot="public" virt="non-virtual"><scope>wxLongLong</scope><name>operator+</name></member>
      <member refid="classwx_long_long_1a50fd4891f0e083e18caf77be422589b5" prot="public" virt="non-virtual"><scope>wxLongLong</scope><name>operator++</name></member>
      <member refid="classwx_long_long_1a7de3b9948d0a797c8424af76c852e823" prot="public" virt="non-virtual"><scope>wxLongLong</scope><name>operator++</name></member>
      <member refid="classwx_long_long_1acd71c3139f4f55f8a625c22d5ffe53f6" prot="public" virt="non-virtual"><scope>wxLongLong</scope><name>operator-</name></member>
      <member refid="classwx_long_long_1a125b1c3808992e3497168f0fd8b00b2d" prot="public" virt="non-virtual"><scope>wxLongLong</scope><name>operator-</name></member>
      <member refid="classwx_long_long_1ac9200e06bfc0cd1f1e0d295f519bd47f" prot="public" virt="non-virtual"><scope>wxLongLong</scope><name>operator-</name></member>
      <member refid="classwx_long_long_1a9f65aaf7453be2685578727515b7243d" prot="public" virt="non-virtual"><scope>wxLongLong</scope><name>operator--</name></member>
      <member refid="classwx_long_long_1a413ffd977a302be5b501b6abe1c7c486" prot="public" virt="non-virtual"><scope>wxLongLong</scope><name>operator--</name></member>
      <member refid="classwx_long_long_1a3633d9dc2e50a822f486ab9a9520c3a3" prot="public" virt="non-virtual"><scope>wxLongLong</scope><name>operator=</name></member>
      <member refid="classwx_long_long_1ace79a5bc5c19f0b16fae047c2b6e204e" prot="public" virt="non-virtual"><scope>wxLongLong</scope><name>operator=</name></member>
      <member refid="classwx_long_long_1a522b90d0342c6ae7e5e1df6fceb2cdad" prot="public" virt="non-virtual"><scope>wxLongLong</scope><name>operator=</name></member>
      <member refid="classwx_long_long_1a639b49f3a4efe1e6a06947919a454f14" prot="public" virt="non-virtual"><scope>wxLongLong</scope><name>operator=</name></member>
      <member refid="classwx_long_long_1a0c36689c172b743a4ca81ca98b76708f" prot="public" virt="non-virtual"><scope>wxLongLong</scope><name>operator=</name></member>
      <member refid="classwx_long_long_1a759bba940ce8229a9c99738bd4fd5d7a" prot="public" virt="non-virtual"><scope>wxLongLong</scope><name>ToDouble</name></member>
      <member refid="classwx_long_long_1a0a4bb948e62cb4c491d10a90372d57a5" prot="public" virt="non-virtual"><scope>wxLongLong</scope><name>ToLong</name></member>
      <member refid="classwx_long_long_1a45fe4fecad34be3e92e5022f8720e4a4" prot="public" virt="non-virtual"><scope>wxLongLong</scope><name>ToString</name></member>
      <member refid="classwx_long_long_1ac1035af57194194a32b273ce768e2a56" prot="public" virt="non-virtual"><scope>wxLongLong</scope><name>wxLongLong</name></member>
      <member refid="classwx_long_long_1aa2fcc54f965a709ee16bba5300a4d694" prot="public" virt="non-virtual"><scope>wxLongLong</scope><name>wxLongLong</name></member>
      <member refid="classwx_long_long_1a71f0fdaa2925f229ab33c6a115b4660d" prot="public" virt="non-virtual"><scope>wxLongLong</scope><name>wxLongLong</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
