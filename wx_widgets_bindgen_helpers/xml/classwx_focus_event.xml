<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classwx_focus_event" kind="class" language="C++" prot="public">
    <compoundname>wxFocusEvent</compoundname>
    <basecompoundref refid="classwx_event" prot="public" virt="non-virtual">wxEvent</basecompoundref>
    <includes local="no">wx/event.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_focus_event_1af5e0281338d54fd47d8da62797bdd705" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxFocusEvent::wxFocusEvent</definition>
        <argsstring>(wxEventType eventType=wxEVT_NULL, int id=0)</argsstring>
        <name>wxFocusEvent</name>
        <param>
          <type><ref refid="group__group__funcmacro__events_1ga6a7fd172612c0d6d9029bfa3aa91aca0" kindref="member">wxEventType</ref></type>
          <declname>eventType</declname>
          <defval><ref refid="group__group__funcmacro__events_1ga310bc3f7977ae79ac1198c7a287dbffe" kindref="member">wxEVT_NULL</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/event.h" line="3163" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_focus_event_1a8ee388b5865be9ae0bef4516a48866fd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
        <definition>wxWindow* wxFocusEvent::GetWindow</definition>
        <argsstring>() const</argsstring>
        <name>GetWindow</name>
        <briefdescription>
<para>Returns the window associated with this event, that is the window which had the focus before for the <computeroutput>wxEVT_SET_FOCUS</computeroutput> event and the window which is going to receive focus for the <computeroutput>wxEVT_KILL_FOCUS</computeroutput> one. </para>        </briefdescription>
        <detaileddescription>
<para>Warning: the window pointer may be NULL! </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/event.h" line="3172" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_focus_event_1a0761d1e6d4d6e987ad4e2a8ee9e63f32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxFocusEvent::SetWindow</definition>
        <argsstring>(wxWindow *win)</argsstring>
        <name>SetWindow</name>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>win</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/event.h" line="3174" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A focus event is sent when a window&apos;s focus changes. </para>    </briefdescription>
    <detaileddescription>
<para>The window losing focus receives a &quot;kill focus&quot; event while the window gaining it gets a &quot;set focus&quot; one.</para><para>Notice that the set focus event happens both when the user gives focus to the window (whether using the mouse or keyboard) and when it is done from the program itself using <ref refid="classwx_window_1a697f9f8d3ff389790f1c74b59bcb1d75" kindref="member">wxWindow::SetFocus</ref>.</para><para>The focus event handlers should almost invariably call <ref refid="classwx_event_1a98eb20b76106f9a933c2eb3ee119f66c" kindref="member">wxEvent::Skip()</ref> on their event argument to allow the default handling to take place. Failure to do this may result in incorrect behaviour of the native controls. Also note that wxEVT_KILL_FOCUS handler must not call <ref refid="classwx_window_1a697f9f8d3ff389790f1c74b59bcb1d75" kindref="member">wxWindow::SetFocus()</ref> as this, again, is not supported by all native controls. If you need to do this, consider using the <ref refid="classwx_idle_event_1sec_delayed_action" kindref="member">Delayed Action Mechanism</ref> described in <ref refid="classwx_idle_event" kindref="compound">wxIdleEvent</ref> documentation.</para><para><linebreak/>
<heading level="2">Events using this class</heading>
</para><para>The following event handler macros redirect the events to member function handlers &apos;<bold>func</bold>&apos; with prototypes like: void<nonbreakablespace/>handlerFuncName(<ref refid="classwx_focus_event" kindref="compound">wxFocusEvent</ref>&amp;<nonbreakablespace/>event)</para><para>Event macros: <itemizedlist>
<listitem><para>EVT_SET_FOCUS(func): Process a <computeroutput>wxEVT_SET_FOCUS</computeroutput> event. </para></listitem>
<listitem><para>EVT_KILL_FOCUS(func): Process a <computeroutput>wxEVT_KILL_FOCUS</computeroutput> event. <linebreak/>
 <heading level="2"></heading>
</para></listitem>
</itemizedlist>
Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxcore" kindref="member">wxCore</ref> &lt;&gt;&lt; =&apos;&apos;&gt;:&lt;/&gt;&amp;;&amp;;&lt; =&apos;&apos;&gt;\ &lt;/&gt;&lt;/&gt;</para><para><simplesect kind="see"><para><ref refid="overview_events" kindref="compound">Events and Event Handling</ref> </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="2560">
        <label>wxObject</label>
        <link refid="classwx_object"/>
      </node>
      <node id="2558">
        <label>wxFocusEvent</label>
        <link refid="classwx_focus_event"/>
        <childnode refid="2559" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2559">
        <label>wxEvent</label>
        <link refid="classwx_event"/>
        <childnode refid="2560" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2563">
        <label>wxObject</label>
        <link refid="classwx_object"/>
        <childnode refid="2564" relation="usage">
          <edgelabel>m_refData</edgelabel>
        </childnode>
      </node>
      <node id="2561">
        <label>wxFocusEvent</label>
        <link refid="classwx_focus_event"/>
        <childnode refid="2562" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2562">
        <label>wxEvent</label>
        <link refid="classwx_event"/>
        <childnode refid="2563" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2564">
        <label>wxObjectRefData</label>
        <link refid="classwx_object_ref_data"/>
      </node>
    </collaborationgraph>
    <location file="interface/wx/event.h" line="3158" column="1" bodyfile="interface/wx/event.h" bodystart="3157" bodyend="3175"/>
    <listofallmembers>
      <member refid="classwx_object_1a60204063f3cc3aa2fa1c7ff5bda9eb13" prot="protected" virt="non-virtual"><scope>wxFocusEvent</scope><name>AllocExclusive</name></member>
      <member refid="classwx_event_1a26878097a702e8d0368da150125d4158" prot="public" virt="pure-virtual"><scope>wxFocusEvent</scope><name>Clone</name></member>
      <member refid="classwx_object_1a436fc8fe68cf8a31000296d9cd3d2427" prot="protected" virt="virtual"><scope>wxFocusEvent</scope><name>CloneRefData</name></member>
      <member refid="classwx_object_1a3f4f497c65cef611e121c41f21dd5ccc" prot="protected" virt="virtual"><scope>wxFocusEvent</scope><name>CreateRefData</name></member>
      <member refid="classwx_object_1ae6d365f2556b26767ced8410c5e839d0" prot="public" virt="virtual"><scope>wxFocusEvent</scope><name>GetClassInfo</name></member>
      <member refid="classwx_event_1ac4958ff6ec32b7f4b23066932d611131" prot="public" virt="virtual"><scope>wxFocusEvent</scope><name>GetEventCategory</name></member>
      <member refid="classwx_event_1a424a4ffaaaf95164d8952ef9ab2ef444" prot="public" virt="non-virtual"><scope>wxFocusEvent</scope><name>GetEventObject</name></member>
      <member refid="classwx_event_1a01c89719ef6241a6e612a313a259c1c2" prot="public" virt="non-virtual"><scope>wxFocusEvent</scope><name>GetEventType</name></member>
      <member refid="classwx_event_1ae7d3e088f0f165ad0421717dd33e4460" prot="public" virt="non-virtual"><scope>wxFocusEvent</scope><name>GetEventUserData</name></member>
      <member refid="classwx_event_1ac5fa5c10d4845d903e58026a42b403c7" prot="public" virt="non-virtual"><scope>wxFocusEvent</scope><name>GetId</name></member>
      <member refid="classwx_object_1af3c6c76a775864832f1536d3c0de3a2b" prot="public" virt="non-virtual"><scope>wxFocusEvent</scope><name>GetRefData</name></member>
      <member refid="classwx_event_1aa770dbcd0f1714ba097836af6534b4c5" prot="public" virt="non-virtual"><scope>wxFocusEvent</scope><name>GetSkipped</name></member>
      <member refid="classwx_event_1a48662230971127737d2500cef7be549d" prot="public" virt="non-virtual"><scope>wxFocusEvent</scope><name>GetTimestamp</name></member>
      <member refid="classwx_focus_event_1a8ee388b5865be9ae0bef4516a48866fd" prot="public" virt="non-virtual"><scope>wxFocusEvent</scope><name>GetWindow</name></member>
      <member refid="classwx_event_1a31f6a4377d6d36964b8eae4e56ec43e0" prot="public" virt="non-virtual"><scope>wxFocusEvent</scope><name>IsCommandEvent</name></member>
      <member refid="classwx_object_1a3c7115ef4132dcee0c4fc34e84d7fced" prot="public" virt="non-virtual"><scope>wxFocusEvent</scope><name>IsKindOf</name></member>
      <member refid="classwx_object_1a059373c494c2369d7db2a556efef8ecf" prot="public" virt="non-virtual"><scope>wxFocusEvent</scope><name>IsSameAs</name></member>
      <member refid="classwx_event_1ac81911194f1f59e1454c0397b87975d4" prot="protected" virt="non-virtual"><scope>wxFocusEvent</scope><name>m_propagationLevel</name></member>
      <member refid="classwx_object_1a9e31954530a0abd54982effc443ed2b8" prot="protected" virt="non-virtual"><scope>wxFocusEvent</scope><name>m_refData</name></member>
      <member refid="classwx_object_1a07b8f34f5afc5743195c5fed052f55d3" prot="public" virt="non-virtual"><scope>wxFocusEvent</scope><name>operator delete</name></member>
      <member refid="classwx_object_1a96fa423a1dbc212c8227a5d83825971f" prot="public" virt="non-virtual"><scope>wxFocusEvent</scope><name>operator new</name></member>
      <member refid="classwx_object_1a2f6f1aa51fe9fc2b1415ca4211a90e9e" prot="public" virt="non-virtual"><scope>wxFocusEvent</scope><name>Ref</name></member>
      <member refid="classwx_event_1a0acb5c75f6e67b8822ad8ba3c5bdc4fe" prot="public" virt="non-virtual"><scope>wxFocusEvent</scope><name>ResumePropagation</name></member>
      <member refid="classwx_event_1a3460217d04c36393ab868ba453fde13d" prot="public" virt="non-virtual"><scope>wxFocusEvent</scope><name>SetEventObject</name></member>
      <member refid="classwx_event_1aa29fb7459d64602e09837fea1e516d27" prot="public" virt="non-virtual"><scope>wxFocusEvent</scope><name>SetEventType</name></member>
      <member refid="classwx_event_1ab9973f687bfa8a60318d8d9bd629d0d4" prot="public" virt="non-virtual"><scope>wxFocusEvent</scope><name>SetId</name></member>
      <member refid="classwx_object_1afab780710f2adc1bb33310e27590140b" prot="public" virt="non-virtual"><scope>wxFocusEvent</scope><name>SetRefData</name></member>
      <member refid="classwx_event_1ad4380dff3144a986cb960473051a1d8d" prot="public" virt="non-virtual"><scope>wxFocusEvent</scope><name>SetTimestamp</name></member>
      <member refid="classwx_focus_event_1a0761d1e6d4d6e987ad4e2a8ee9e63f32" prot="public" virt="non-virtual"><scope>wxFocusEvent</scope><name>SetWindow</name></member>
      <member refid="classwx_event_1ac7a178c3c781c80f1308945042f76e7f" prot="public" virt="non-virtual"><scope>wxFocusEvent</scope><name>ShouldPropagate</name></member>
      <member refid="classwx_event_1a98eb20b76106f9a933c2eb3ee119f66c" prot="public" virt="non-virtual"><scope>wxFocusEvent</scope><name>Skip</name></member>
      <member refid="classwx_event_1a060a7d222404daff4d3cef30cddeaae3" prot="public" virt="non-virtual"><scope>wxFocusEvent</scope><name>StopPropagation</name></member>
      <member refid="classwx_object_1af51efc6b1ae632fc7f0cd7ebbce9fa36" prot="public" virt="non-virtual"><scope>wxFocusEvent</scope><name>UnRef</name></member>
      <member refid="classwx_object_1a74b40e42d19a4b9e9bec0b57d62a5725" prot="public" virt="non-virtual"><scope>wxFocusEvent</scope><name>UnShare</name></member>
      <member refid="classwx_event_1aaf2a5cf056d006859cea36689ba13d36" prot="public" virt="non-virtual"><scope>wxFocusEvent</scope><name>wxEvent</name></member>
      <member refid="classwx_focus_event_1af5e0281338d54fd47d8da62797bdd705" prot="public" virt="non-virtual"><scope>wxFocusEvent</scope><name>wxFocusEvent</name></member>
      <member refid="classwx_object_1acaa378363a28af421ab56ad7b46eadf0" prot="public" virt="non-virtual"><scope>wxFocusEvent</scope><name>wxObject</name></member>
      <member refid="classwx_object_1a4721b4dc9b7aff0f30904ba2ea3954cf" prot="public" virt="non-virtual"><scope>wxFocusEvent</scope><name>wxObject</name></member>
      <member refid="classwx_object_1a2a51aa8bfbab47ca2f051bcf84b3f35b" prot="public" virt="virtual"><scope>wxFocusEvent</scope><name>~wxObject</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
