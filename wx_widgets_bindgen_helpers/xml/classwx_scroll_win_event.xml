<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classwx_scroll_win_event" kind="class" language="C++" prot="public">
    <compoundname>wxScrollWinEvent</compoundname>
    <basecompoundref refid="classwx_event" prot="public" virt="non-virtual">wxEvent</basecompoundref>
    <includes local="no">wx/event.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_scroll_win_event_1a73ec466c18739a430e9143265962aeb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxScrollWinEvent::wxScrollWinEvent</definition>
        <argsstring>(wxEventType commandType=wxEVT_NULL, int pos=0, int orientation=0)</argsstring>
        <name>wxScrollWinEvent</name>
        <param>
          <type><ref refid="group__group__funcmacro__events_1ga6a7fd172612c0d6d9029bfa3aa91aca0" kindref="member">wxEventType</ref></type>
          <declname>commandType</declname>
          <defval><ref refid="group__group__funcmacro__events_1ga310bc3f7977ae79ac1198c7a287dbffe" kindref="member">wxEVT_NULL</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>orientation</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/event.h" line="1860" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_scroll_win_event_1a5aad63902c7a410a8db4b45a51e5f0d6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxScrollWinEvent::GetOrientation</definition>
        <argsstring>() const</argsstring>
        <name>GetOrientation</name>
        <briefdescription>
<para>Returns wxHORIZONTAL or wxVERTICAL, depending on the orientation of the scrollbar. </para>        </briefdescription>
        <detaileddescription>
<para><xrefsect id="todo_1_todo000017"><xreftitle>Todo</xreftitle><xrefdescription><para>wxHORIZONTAL and wxVERTICAL should go in their own enum </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/event.h" line="1869" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_scroll_win_event_1ab8217b0b28caedce19c6bf323649d115" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxScrollWinEvent::GetPosition</definition>
        <argsstring>() const</argsstring>
        <name>GetPosition</name>
        <briefdescription>
<para>Returns the position of the scrollbar for the thumb track and release events. </para>        </briefdescription>
        <detaileddescription>
<para>Note that this field can&apos;t be used for the other events, you need to query the window itself for the current position in that case. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/event.h" line="1877" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_scroll_win_event_1af78dd191ab94c6bc08b2905129eac9d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxScrollWinEvent::SetOrientation</definition>
        <argsstring>(int orient)</argsstring>
        <name>SetOrientation</name>
        <param>
          <type>int</type>
          <declname>orient</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/event.h" line="1879" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_scroll_win_event_1ac4a9a862ce25c4e050a166a7f0e27709" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxScrollWinEvent::SetPosition</definition>
        <argsstring>(int pos)</argsstring>
        <name>SetPosition</name>
        <param>
          <type>int</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/event.h" line="1880" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A scroll event holds information about events sent from scrolling windows. </para>    </briefdescription>
    <detaileddescription>
<para>Note that you can use the EVT_SCROLLWIN* macros for intercepting scroll window events from the receiving window.</para><para><linebreak/>
<heading level="2">Events using this class</heading>
</para><para>The following event handler macros redirect the events to member function handlers &apos;<bold>func</bold>&apos; with prototypes like: void<nonbreakablespace/>handlerFuncName(<ref refid="classwx_scroll_win_event" kindref="compound">wxScrollWinEvent</ref>&amp;<nonbreakablespace/>event)</para><para>Event macros: <itemizedlist>
<listitem><para>EVT_SCROLLWIN(func): Process all scroll events. </para></listitem>
<listitem><para>EVT_SCROLLWIN_TOP(func): Process <computeroutput>wxEVT_SCROLLWIN_TOP</computeroutput> scroll-to-top events. </para></listitem>
<listitem><para>EVT_SCROLLWIN_BOTTOM(func): Process <computeroutput>wxEVT_SCROLLWIN_BOTTOM</computeroutput> scroll-to-bottom events. </para></listitem>
<listitem><para>EVT_SCROLLWIN_LINEUP(func): Process <computeroutput>wxEVT_SCROLLWIN_LINEUP</computeroutput> line up events. </para></listitem>
<listitem><para>EVT_SCROLLWIN_LINEDOWN(func): Process <computeroutput>wxEVT_SCROLLWIN_LINEDOWN</computeroutput> line down events. </para></listitem>
<listitem><para>EVT_SCROLLWIN_PAGEUP(func): Process <computeroutput>wxEVT_SCROLLWIN_PAGEUP</computeroutput> page up events. </para></listitem>
<listitem><para>EVT_SCROLLWIN_PAGEDOWN(func): Process <computeroutput>wxEVT_SCROLLWIN_PAGEDOWN</computeroutput> page down events. </para></listitem>
<listitem><para>EVT_SCROLLWIN_THUMBTRACK(func): Process <computeroutput>wxEVT_SCROLLWIN_THUMBTRACK</computeroutput> thumbtrack events (frequent events sent as the user drags the thumbtrack). </para></listitem>
<listitem><para>EVT_SCROLLWIN_THUMBRELEASE(func): Process <computeroutput>wxEVT_SCROLLWIN_THUMBRELEASE</computeroutput> thumb release events. <linebreak/>
</para></listitem>
</itemizedlist>
<heading level="2"></heading>
</para><para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxcore" kindref="member">wxCore</ref> &lt;&gt;&lt; =&apos;&apos;&gt;:&lt;/&gt;&amp;;&amp;;&lt; =&apos;&apos;&gt;\ &lt;/&gt;&lt;/&gt;</para><para><simplesect kind="see"><para><ref refid="classwx_scroll_event" kindref="compound">wxScrollEvent</ref>, <ref refid="overview_events" kindref="compound">Events and Event Handling</ref> </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="7159">
        <label>wxObject</label>
        <link refid="classwx_object"/>
      </node>
      <node id="7157">
        <label>wxScrollWinEvent</label>
        <link refid="classwx_scroll_win_event"/>
        <childnode refid="7158" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7158">
        <label>wxEvent</label>
        <link refid="classwx_event"/>
        <childnode refid="7159" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="7162">
        <label>wxObject</label>
        <link refid="classwx_object"/>
        <childnode refid="7163" relation="usage">
          <edgelabel>m_refData</edgelabel>
        </childnode>
      </node>
      <node id="7160">
        <label>wxScrollWinEvent</label>
        <link refid="classwx_scroll_win_event"/>
        <childnode refid="7161" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7161">
        <label>wxEvent</label>
        <link refid="classwx_event"/>
        <childnode refid="7162" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7163">
        <label>wxObjectRefData</label>
        <link refid="classwx_object_ref_data"/>
      </node>
    </collaborationgraph>
    <location file="interface/wx/event.h" line="1855" column="1" bodyfile="interface/wx/event.h" bodystart="1854" bodyend="1881"/>
    <listofallmembers>
      <member refid="classwx_object_1a60204063f3cc3aa2fa1c7ff5bda9eb13" prot="protected" virt="non-virtual"><scope>wxScrollWinEvent</scope><name>AllocExclusive</name></member>
      <member refid="classwx_event_1a26878097a702e8d0368da150125d4158" prot="public" virt="pure-virtual"><scope>wxScrollWinEvent</scope><name>Clone</name></member>
      <member refid="classwx_object_1a436fc8fe68cf8a31000296d9cd3d2427" prot="protected" virt="virtual"><scope>wxScrollWinEvent</scope><name>CloneRefData</name></member>
      <member refid="classwx_object_1a3f4f497c65cef611e121c41f21dd5ccc" prot="protected" virt="virtual"><scope>wxScrollWinEvent</scope><name>CreateRefData</name></member>
      <member refid="classwx_object_1ae6d365f2556b26767ced8410c5e839d0" prot="public" virt="virtual"><scope>wxScrollWinEvent</scope><name>GetClassInfo</name></member>
      <member refid="classwx_event_1ac4958ff6ec32b7f4b23066932d611131" prot="public" virt="virtual"><scope>wxScrollWinEvent</scope><name>GetEventCategory</name></member>
      <member refid="classwx_event_1a424a4ffaaaf95164d8952ef9ab2ef444" prot="public" virt="non-virtual"><scope>wxScrollWinEvent</scope><name>GetEventObject</name></member>
      <member refid="classwx_event_1a01c89719ef6241a6e612a313a259c1c2" prot="public" virt="non-virtual"><scope>wxScrollWinEvent</scope><name>GetEventType</name></member>
      <member refid="classwx_event_1ae7d3e088f0f165ad0421717dd33e4460" prot="public" virt="non-virtual"><scope>wxScrollWinEvent</scope><name>GetEventUserData</name></member>
      <member refid="classwx_event_1ac5fa5c10d4845d903e58026a42b403c7" prot="public" virt="non-virtual"><scope>wxScrollWinEvent</scope><name>GetId</name></member>
      <member refid="classwx_scroll_win_event_1a5aad63902c7a410a8db4b45a51e5f0d6" prot="public" virt="non-virtual"><scope>wxScrollWinEvent</scope><name>GetOrientation</name></member>
      <member refid="classwx_scroll_win_event_1ab8217b0b28caedce19c6bf323649d115" prot="public" virt="non-virtual"><scope>wxScrollWinEvent</scope><name>GetPosition</name></member>
      <member refid="classwx_object_1af3c6c76a775864832f1536d3c0de3a2b" prot="public" virt="non-virtual"><scope>wxScrollWinEvent</scope><name>GetRefData</name></member>
      <member refid="classwx_event_1aa770dbcd0f1714ba097836af6534b4c5" prot="public" virt="non-virtual"><scope>wxScrollWinEvent</scope><name>GetSkipped</name></member>
      <member refid="classwx_event_1a48662230971127737d2500cef7be549d" prot="public" virt="non-virtual"><scope>wxScrollWinEvent</scope><name>GetTimestamp</name></member>
      <member refid="classwx_event_1a31f6a4377d6d36964b8eae4e56ec43e0" prot="public" virt="non-virtual"><scope>wxScrollWinEvent</scope><name>IsCommandEvent</name></member>
      <member refid="classwx_object_1a3c7115ef4132dcee0c4fc34e84d7fced" prot="public" virt="non-virtual"><scope>wxScrollWinEvent</scope><name>IsKindOf</name></member>
      <member refid="classwx_object_1a059373c494c2369d7db2a556efef8ecf" prot="public" virt="non-virtual"><scope>wxScrollWinEvent</scope><name>IsSameAs</name></member>
      <member refid="classwx_event_1ac81911194f1f59e1454c0397b87975d4" prot="protected" virt="non-virtual"><scope>wxScrollWinEvent</scope><name>m_propagationLevel</name></member>
      <member refid="classwx_object_1a9e31954530a0abd54982effc443ed2b8" prot="protected" virt="non-virtual"><scope>wxScrollWinEvent</scope><name>m_refData</name></member>
      <member refid="classwx_object_1a07b8f34f5afc5743195c5fed052f55d3" prot="public" virt="non-virtual"><scope>wxScrollWinEvent</scope><name>operator delete</name></member>
      <member refid="classwx_object_1a96fa423a1dbc212c8227a5d83825971f" prot="public" virt="non-virtual"><scope>wxScrollWinEvent</scope><name>operator new</name></member>
      <member refid="classwx_object_1a2f6f1aa51fe9fc2b1415ca4211a90e9e" prot="public" virt="non-virtual"><scope>wxScrollWinEvent</scope><name>Ref</name></member>
      <member refid="classwx_event_1a0acb5c75f6e67b8822ad8ba3c5bdc4fe" prot="public" virt="non-virtual"><scope>wxScrollWinEvent</scope><name>ResumePropagation</name></member>
      <member refid="classwx_event_1a3460217d04c36393ab868ba453fde13d" prot="public" virt="non-virtual"><scope>wxScrollWinEvent</scope><name>SetEventObject</name></member>
      <member refid="classwx_event_1aa29fb7459d64602e09837fea1e516d27" prot="public" virt="non-virtual"><scope>wxScrollWinEvent</scope><name>SetEventType</name></member>
      <member refid="classwx_event_1ab9973f687bfa8a60318d8d9bd629d0d4" prot="public" virt="non-virtual"><scope>wxScrollWinEvent</scope><name>SetId</name></member>
      <member refid="classwx_scroll_win_event_1af78dd191ab94c6bc08b2905129eac9d8" prot="public" virt="non-virtual"><scope>wxScrollWinEvent</scope><name>SetOrientation</name></member>
      <member refid="classwx_scroll_win_event_1ac4a9a862ce25c4e050a166a7f0e27709" prot="public" virt="non-virtual"><scope>wxScrollWinEvent</scope><name>SetPosition</name></member>
      <member refid="classwx_object_1afab780710f2adc1bb33310e27590140b" prot="public" virt="non-virtual"><scope>wxScrollWinEvent</scope><name>SetRefData</name></member>
      <member refid="classwx_event_1ad4380dff3144a986cb960473051a1d8d" prot="public" virt="non-virtual"><scope>wxScrollWinEvent</scope><name>SetTimestamp</name></member>
      <member refid="classwx_event_1ac7a178c3c781c80f1308945042f76e7f" prot="public" virt="non-virtual"><scope>wxScrollWinEvent</scope><name>ShouldPropagate</name></member>
      <member refid="classwx_event_1a98eb20b76106f9a933c2eb3ee119f66c" prot="public" virt="non-virtual"><scope>wxScrollWinEvent</scope><name>Skip</name></member>
      <member refid="classwx_event_1a060a7d222404daff4d3cef30cddeaae3" prot="public" virt="non-virtual"><scope>wxScrollWinEvent</scope><name>StopPropagation</name></member>
      <member refid="classwx_object_1af51efc6b1ae632fc7f0cd7ebbce9fa36" prot="public" virt="non-virtual"><scope>wxScrollWinEvent</scope><name>UnRef</name></member>
      <member refid="classwx_object_1a74b40e42d19a4b9e9bec0b57d62a5725" prot="public" virt="non-virtual"><scope>wxScrollWinEvent</scope><name>UnShare</name></member>
      <member refid="classwx_event_1aaf2a5cf056d006859cea36689ba13d36" prot="public" virt="non-virtual"><scope>wxScrollWinEvent</scope><name>wxEvent</name></member>
      <member refid="classwx_object_1acaa378363a28af421ab56ad7b46eadf0" prot="public" virt="non-virtual"><scope>wxScrollWinEvent</scope><name>wxObject</name></member>
      <member refid="classwx_object_1a4721b4dc9b7aff0f30904ba2ea3954cf" prot="public" virt="non-virtual"><scope>wxScrollWinEvent</scope><name>wxObject</name></member>
      <member refid="classwx_scroll_win_event_1a73ec466c18739a430e9143265962aeb5" prot="public" virt="non-virtual"><scope>wxScrollWinEvent</scope><name>wxScrollWinEvent</name></member>
      <member refid="classwx_object_1a2a51aa8bfbab47ca2f051bcf84b3f35b" prot="public" virt="virtual"><scope>wxScrollWinEvent</scope><name>~wxObject</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
