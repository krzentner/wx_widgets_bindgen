<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classwx_var_h_scroll_helper" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>wxVarHScrollHelper</compoundname>
    <basecompoundref refid="classwx_var_scroll_helper_base" prot="public" virt="non-virtual">wxVarScrollHelperBase</basecompoundref>
    <derivedcompoundref refid="classwx_h_scrolled_window" prot="public" virt="non-virtual">wxHScrolledWindow</derivedcompoundref>
    <derivedcompoundref refid="classwx_var_h_v_scroll_helper" prot="public" virt="non-virtual">wxVarHVScrollHelper</derivedcompoundref>
    <includes local="no">wx/vscroll.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_var_h_scroll_helper_1ad5b629dc626fb017354c8bb9c4543f67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxVarHScrollHelper::wxVarHScrollHelper</definition>
        <argsstring>(wxWindow *winToScroll)</argsstring>
        <name>wxVarHScrollHelper</name>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>winToScroll</declname>
        </param>
        <briefdescription>
<para>Constructor taking the target window to be scrolled by this helper class. </para>        </briefdescription>
        <detaileddescription>
<para>This will attach scroll event handlers to the target window to catch and handle scroll events appropriately. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/vscroll.h" line="360" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_var_h_scroll_helper_1a7a0dc376608b02afc2f897dfc5569422" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t wxVarHScrollHelper::GetColumnCount</definition>
        <argsstring>() const</argsstring>
        <name>GetColumnCount</name>
        <briefdescription>
<para>Returns the number of columns the target window contains. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classwx_var_h_scroll_helper_1a6ac4d84f3d415972a7affee13af4d08e" kindref="member">SetColumnCount()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/vscroll.h" line="367" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_var_h_scroll_helper_1a05803c9300deacf36a17fb7cf6d711eb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t wxVarHScrollHelper::GetVisibleColumnsBegin</definition>
        <argsstring>() const</argsstring>
        <name>GetVisibleColumnsBegin</name>
        <briefdescription>
<para>Returns the index of the first visible column based on the scroll position. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/vscroll.h" line="373" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_var_h_scroll_helper_1ab9daca831717211efb76c6d855c7c925" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t wxVarHScrollHelper::GetVisibleColumnsEnd</definition>
        <argsstring>() const</argsstring>
        <name>GetVisibleColumnsEnd</name>
        <briefdescription>
<para>Returns the index of the last visible column based on the scroll position. </para>        </briefdescription>
        <detaileddescription>
<para>This includes the last column even if it is only partially visible. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/vscroll.h" line="380" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_var_h_scroll_helper_1a23b22284a52dd58f38f522168ff935a8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxVarHScrollHelper::IsColumnVisible</definition>
        <argsstring>(size_t column) const</argsstring>
        <name>IsColumnVisible</name>
        <param>
          <type>size_t</type>
          <declname>column</declname>
        </param>
        <briefdescription>
<para>Returns true if the given column is currently visible (even if only partially visible) or false otherwise. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/vscroll.h" line="386" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_var_h_scroll_helper_1a26c52b87ce4ac45daff1440c190f88c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxVarHScrollHelper::RefreshColumn</definition>
        <argsstring>(size_t column)</argsstring>
        <name>RefreshColumn</name>
        <param>
          <type>size_t</type>
          <declname>column</declname>
        </param>
        <briefdescription>
<para>Triggers a refresh for just the given column&apos;s area of the window if it&apos;s visible. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/vscroll.h" line="392" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_var_h_scroll_helper_1a24a020564242e16749de465cca6b0df5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxVarHScrollHelper::RefreshColumns</definition>
        <argsstring>(size_t from, size_t to)</argsstring>
        <name>RefreshColumns</name>
        <param>
          <type>size_t</type>
          <declname>from</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>to</declname>
        </param>
        <briefdescription>
<para>Triggers a refresh for the area between the specified range of columns given (inclusively). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/vscroll.h" line="398" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_var_h_scroll_helper_1a7bfd373ed484e19f28d56f58fc89e8bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxVarHScrollHelper::ScrollColumnPages</definition>
        <argsstring>(int pages)</argsstring>
        <name>ScrollColumnPages</name>
        <param>
          <type>int</type>
          <declname>pages</declname>
        </param>
        <briefdescription>
<para>Scroll by the specified number of pages which may be positive (to scroll right) or negative (to scroll left). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/vscroll.h" line="404" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_var_h_scroll_helper_1a8c3bce21dea0f5a0a75821c5a3595960" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxVarHScrollHelper::ScrollColumns</definition>
        <argsstring>(int columns)</argsstring>
        <name>ScrollColumns</name>
        <param>
          <type>int</type>
          <declname>columns</declname>
        </param>
        <briefdescription>
<para>Scroll by the specified number of columns which may be positive (to scroll right) or negative (to scroll left). </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if the window was scrolled, false otherwise (for example, if we&apos;re trying to scroll right but we are already showing the last column). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/vscroll.h" line="414" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_var_h_scroll_helper_1a00690fe74720ee5228975602c43ce9d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxVarHScrollHelper::ScrollToColumn</definition>
        <argsstring>(size_t column)</argsstring>
        <name>ScrollToColumn</name>
        <param>
          <type>size_t</type>
          <declname>column</declname>
        </param>
        <briefdescription>
<para>Scroll to the specified column. </para>        </briefdescription>
        <detaileddescription>
<para>It will become the first visible column in the window.</para><para><simplesect kind="return"><para>true if we scrolled the window, false if nothing was done. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/vscroll.h" line="422" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_var_h_scroll_helper_1a6ac4d84f3d415972a7affee13af4d08e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxVarHScrollHelper::SetColumnCount</definition>
        <argsstring>(size_t columnCount)</argsstring>
        <name>SetColumnCount</name>
        <param>
          <type>size_t</type>
          <declname>columnCount</declname>
        </param>
        <briefdescription>
<para>Set the number of columns the window contains. </para>        </briefdescription>
        <detaileddescription>
<para>The derived class must provide the widths for all columns with indices up to the one given here in it&apos;s <ref refid="classwx_var_h_scroll_helper_1a45737e4bd127fc6a069b62f182192c69" kindref="member">OnGetColumnWidth()</ref> implementation.</para><para><simplesect kind="see"><para><ref refid="classwx_var_h_scroll_helper_1a7a0dc376608b02afc2f897dfc5569422" kindref="member">GetColumnCount()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/vscroll.h" line="431" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classwx_var_h_scroll_helper_1a1afd679a690fd53c9979a4b17ff0c771" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
        <definition>virtual wxCoord wxVarHScrollHelper::EstimateTotalWidth</definition>
        <argsstring>() const</argsstring>
        <name>EstimateTotalWidth</name>
        <briefdescription>
<para>This class forwards calls from <ref refid="classwx_var_scroll_helper_base_1ad8443a6cbf36c38cf573b18a672f5f1f" kindref="member">EstimateTotalSize()</ref> to this function so derived classes can override either just the height or the width estimation, or just estimate both differently if desired in any <ref refid="classwx_h_v_scrolled_window" kindref="compound">wxHVScrolledWindow</ref> derived class. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function will not be called if <ref refid="classwx_var_scroll_helper_base_1ad8443a6cbf36c38cf573b18a672f5f1f" kindref="member">EstimateTotalSize()</ref> is overridden in your derived class. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/vscroll.h" line="444" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_var_h_scroll_helper_1a88d8105d39136ade4d593f77a7346270" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxVarHScrollHelper::OnGetColumnsWidthHint</definition>
        <argsstring>(size_t columnMin, size_t columnMax) const</argsstring>
        <name>OnGetColumnsWidthHint</name>
        <param>
          <type>size_t</type>
          <declname>columnMin</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>columnMax</declname>
        </param>
        <briefdescription>
<para>This function doesn&apos;t have to be overridden but it may be useful to do so if calculating the columns&apos; sizes is a relatively expensive operation as it gives your code a chance to calculate several of them at once and cache the result if necessary. </para>        </briefdescription>
        <detaileddescription>
<para><ref refid="classwx_var_h_scroll_helper_1a88d8105d39136ade4d593f77a7346270" kindref="member">OnGetColumnsWidthHint()</ref> is normally called just before <ref refid="classwx_var_h_scroll_helper_1a45737e4bd127fc6a069b62f182192c69" kindref="member">OnGetColumnWidth()</ref> but you shouldn&apos;t rely on the latter being called for all columns in the interval specified here. It is also possible that <ref refid="classwx_var_h_scroll_helper_1a45737e4bd127fc6a069b62f182192c69" kindref="member">OnGetColumnWidth()</ref> will be called for units outside of this interval, so this is really just a hint, not a promise.</para><para>Finally, note that <emphasis>columnMin</emphasis> is inclusive, while <emphasis>columnMax</emphasis> is exclusive. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/vscroll.h" line="461" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_var_h_scroll_helper_1a45737e4bd127fc6a069b62f182192c69" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
        <definition>virtual wxCoord wxVarHScrollHelper::OnGetColumnWidth</definition>
        <argsstring>(size_t column) const =0</argsstring>
        <name>OnGetColumnWidth</name>
        <param>
          <type>size_t</type>
          <declname>column</declname>
        </param>
        <briefdescription>
<para>This function must be overridden in the derived class, and should return the width of the given column in pixels. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/vscroll.h" line="468" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class provides functions wrapping the <ref refid="classwx_var_scroll_helper_base" kindref="compound">wxVarScrollHelperBase</ref> class, targeted for horizontal-specific scrolling. </para>    </briefdescription>
    <detaileddescription>
<para>Like <ref refid="classwx_var_scroll_helper_base" kindref="compound">wxVarScrollHelperBase</ref>, this class is mostly only useful to those classes built into wxWidgets deriving from here, and this documentation is mostly only provided for referencing the functions provided by this class. You will likely want to derive your window from <ref refid="classwx_h_scrolled_window" kindref="compound">wxHScrolledWindow</ref> rather than from here directly.</para><para><heading level="2"></heading>
</para><para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxcore" kindref="member">wxCore</ref> &lt;&gt;&lt; =&apos;&apos;&gt;:&lt;/&gt;&amp;;&amp;;&lt; =&apos;&apos;&gt;\ &lt;/&gt;&lt;/&gt;</para><para><simplesect kind="see"><para><ref refid="classwx_h_scrolled_window" kindref="compound">wxHScrolledWindow</ref>, <ref refid="classwx_h_v_scrolled_window" kindref="compound">wxHVScrolledWindow</ref>, <ref refid="classwx_v_scrolled_window" kindref="compound">wxVScrolledWindow</ref> </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="8436">
        <label>wxHScrolledWindow</label>
        <link refid="classwx_h_scrolled_window"/>
        <childnode refid="8434" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8435">
        <label>wxVarScrollHelperBase</label>
        <link refid="classwx_var_scroll_helper_base"/>
      </node>
      <node id="8437">
        <label>wxVarHVScrollHelper</label>
        <link refid="classwx_var_h_v_scroll_helper"/>
        <childnode refid="8434" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8438">
        <label>wxHVScrolledWindow</label>
        <link refid="classwx_h_v_scrolled_window"/>
        <childnode refid="8437" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8434">
        <label>wxVarHScrollHelper</label>
        <link refid="classwx_var_h_scroll_helper"/>
        <childnode refid="8435" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="8440">
        <label>wxVarScrollHelperBase</label>
        <link refid="classwx_var_scroll_helper_base"/>
      </node>
      <node id="8439">
        <label>wxVarHScrollHelper</label>
        <link refid="classwx_var_h_scroll_helper"/>
        <childnode refid="8440" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="interface/wx/vscroll.h" line="353" column="1" bodyfile="interface/wx/vscroll.h" bodystart="352" bodyend="469"/>
    <listofallmembers>
      <member refid="classwx_var_scroll_helper_base_1a8a83814cd28efa500bf7ac4a6282a53f" prot="public" virt="non-virtual"><scope>wxVarHScrollHelper</scope><name>CalcScrolledPosition</name></member>
      <member refid="classwx_var_scroll_helper_base_1ab9c4be21b229ee5621a9a087c79f03fa" prot="public" virt="non-virtual"><scope>wxVarHScrollHelper</scope><name>CalcUnscrolledPosition</name></member>
      <member refid="classwx_var_scroll_helper_base_1acdcec3046de7670eb2d448463a011b81" prot="public" virt="non-virtual"><scope>wxVarHScrollHelper</scope><name>EnablePhysicalScrolling</name></member>
      <member refid="classwx_var_scroll_helper_base_1ad8443a6cbf36c38cf573b18a672f5f1f" prot="protected" virt="virtual"><scope>wxVarHScrollHelper</scope><name>EstimateTotalSize</name></member>
      <member refid="classwx_var_h_scroll_helper_1a1afd679a690fd53c9979a4b17ff0c771" prot="protected" virt="virtual"><scope>wxVarHScrollHelper</scope><name>EstimateTotalWidth</name></member>
      <member refid="classwx_var_h_scroll_helper_1a7a0dc376608b02afc2f897dfc5569422" prot="public" virt="non-virtual"><scope>wxVarHScrollHelper</scope><name>GetColumnCount</name></member>
      <member refid="classwx_var_scroll_helper_base_1a5b9316fbade3450efdc359ac049a7839" prot="public" virt="pure-virtual"><scope>wxVarHScrollHelper</scope><name>GetNonOrientationTargetSize</name></member>
      <member refid="classwx_var_scroll_helper_base_1addff4d4e4e099adac7abfe56fbb50682" prot="public" virt="pure-virtual"><scope>wxVarHScrollHelper</scope><name>GetOrientation</name></member>
      <member refid="classwx_var_scroll_helper_base_1a5d195a4216200894fc3e843c01ec4e54" prot="public" virt="pure-virtual"><scope>wxVarHScrollHelper</scope><name>GetOrientationTargetSize</name></member>
      <member refid="classwx_var_scroll_helper_base_1a3e2719c5d17fb2b3fe40205b40dc9ffb" prot="public" virt="virtual"><scope>wxVarHScrollHelper</scope><name>GetTargetWindow</name></member>
      <member refid="classwx_var_scroll_helper_base_1ae509ae4eaab4f8b87029824e977fca90" prot="public" virt="non-virtual"><scope>wxVarHScrollHelper</scope><name>GetVisibleBegin</name></member>
      <member refid="classwx_var_h_scroll_helper_1a05803c9300deacf36a17fb7cf6d711eb" prot="public" virt="non-virtual"><scope>wxVarHScrollHelper</scope><name>GetVisibleColumnsBegin</name></member>
      <member refid="classwx_var_h_scroll_helper_1ab9daca831717211efb76c6d855c7c925" prot="public" virt="non-virtual"><scope>wxVarHScrollHelper</scope><name>GetVisibleColumnsEnd</name></member>
      <member refid="classwx_var_scroll_helper_base_1a216a2ee95e274ef0d653222d72105960" prot="public" virt="non-virtual"><scope>wxVarHScrollHelper</scope><name>GetVisibleEnd</name></member>
      <member refid="classwx_var_h_scroll_helper_1a23b22284a52dd58f38f522168ff935a8" prot="public" virt="non-virtual"><scope>wxVarHScrollHelper</scope><name>IsColumnVisible</name></member>
      <member refid="classwx_var_scroll_helper_base_1a5a6cc7aa4518f225c02728b305530e91" prot="public" virt="non-virtual"><scope>wxVarHScrollHelper</scope><name>IsVisible</name></member>
      <member refid="classwx_var_h_scroll_helper_1a88d8105d39136ade4d593f77a7346270" prot="protected" virt="virtual"><scope>wxVarHScrollHelper</scope><name>OnGetColumnsWidthHint</name></member>
      <member refid="classwx_var_h_scroll_helper_1a45737e4bd127fc6a069b62f182192c69" prot="protected" virt="pure-virtual"><scope>wxVarHScrollHelper</scope><name>OnGetColumnWidth</name></member>
      <member refid="classwx_var_scroll_helper_base_1a1f31e727d5db972c2227790eb9174034" prot="protected" virt="pure-virtual"><scope>wxVarHScrollHelper</scope><name>OnGetUnitSize</name></member>
      <member refid="classwx_var_scroll_helper_base_1a6445ab4f3e24a436bf3509dda8e3158f" prot="protected" virt="virtual"><scope>wxVarHScrollHelper</scope><name>OnGetUnitsSizeHint</name></member>
      <member refid="classwx_var_scroll_helper_base_1aeae3e1b16c52dc5227b439cb6ffacf59" prot="public" virt="virtual"><scope>wxVarHScrollHelper</scope><name>RefreshAll</name></member>
      <member refid="classwx_var_h_scroll_helper_1a26c52b87ce4ac45daff1440c190f88c4" prot="public" virt="virtual"><scope>wxVarHScrollHelper</scope><name>RefreshColumn</name></member>
      <member refid="classwx_var_h_scroll_helper_1a24a020564242e16749de465cca6b0df5" prot="public" virt="virtual"><scope>wxVarHScrollHelper</scope><name>RefreshColumns</name></member>
      <member refid="classwx_var_h_scroll_helper_1a7bfd373ed484e19f28d56f58fc89e8bb" prot="public" virt="virtual"><scope>wxVarHScrollHelper</scope><name>ScrollColumnPages</name></member>
      <member refid="classwx_var_h_scroll_helper_1a8c3bce21dea0f5a0a75821c5a3595960" prot="public" virt="virtual"><scope>wxVarHScrollHelper</scope><name>ScrollColumns</name></member>
      <member refid="classwx_var_h_scroll_helper_1a00690fe74720ee5228975602c43ce9d9" prot="public" virt="non-virtual"><scope>wxVarHScrollHelper</scope><name>ScrollToColumn</name></member>
      <member refid="classwx_var_h_scroll_helper_1a6ac4d84f3d415972a7affee13af4d08e" prot="public" virt="non-virtual"><scope>wxVarHScrollHelper</scope><name>SetColumnCount</name></member>
      <member refid="classwx_var_scroll_helper_base_1af79bfa4aac18be344d5dbcf7932cf1f7" prot="public" virt="virtual"><scope>wxVarHScrollHelper</scope><name>SetTargetWindow</name></member>
      <member refid="classwx_var_scroll_helper_base_1a0b05466ede3d27fa28daf2f62ae2ecb9" prot="public" virt="virtual"><scope>wxVarHScrollHelper</scope><name>UpdateScrollbar</name></member>
      <member refid="classwx_var_scroll_helper_base_1a0df847353d1ad7e21f5731934b3443d4" prot="public" virt="non-virtual"><scope>wxVarHScrollHelper</scope><name>VirtualHitTest</name></member>
      <member refid="classwx_var_h_scroll_helper_1ad5b629dc626fb017354c8bb9c4543f67" prot="public" virt="non-virtual"><scope>wxVarHScrollHelper</scope><name>wxVarHScrollHelper</name></member>
      <member refid="classwx_var_scroll_helper_base_1a51c4f935ffef35e38d800b5fb1aea20b" prot="public" virt="non-virtual"><scope>wxVarHScrollHelper</scope><name>wxVarScrollHelperBase</name></member>
      <member refid="classwx_var_scroll_helper_base_1a1d98424cb2af1db02e326c5c7065c12d" prot="public" virt="virtual"><scope>wxVarHScrollHelper</scope><name>~wxVarScrollHelperBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
