<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="overview_printing" kind="page">
    <compoundname>overview_printing</compoundname>
    <title>Printing Framework Overview</title>
    <tableofcontents/>
    <briefdescription>
<para><linebreak/>
 The printing framework relies on the application to provide classes whose member functions can respond to particular requests, such as &apos;print this page&apos; or &apos;does this page exist in the document?&apos;. </para>    </briefdescription>
    <detaileddescription>
<para><linebreak/>
 The printing framework relies on the application to provide classes whose member functions can respond to particular requests, such as &apos;print this page&apos; or &apos;does this page exist in the document?&apos;.</para><para>This method allows wxWidgets to take over the housekeeping duties of turning preview pages, calling the print dialog box, creating the printer device context, and so on: the application can concentrate on the rendering of the information onto a device context.</para><para>In most cases, the only class you will need to derive from is <ref refid="classwx_printout" kindref="compound">wxPrintout</ref>; all others will be used as-is.</para><para>A brief description of each class&apos;s role and how they work together follows.</para><para>For the special case of printing under Unix, where various different printing backends have to be offered, please have a look at <ref refid="overview_unixprinting" kindref="compound">Printing Under Unix (GTK+)</ref>.</para><para><simplesect kind="see"><para><ref refid="group__group__class__printing" kindref="compound">Printing Framework</ref></para></simplesect>
</para><sect1 id="overview_printing_1overview_printing_printout">
<title>wxPrintout</title>
<para>A document&apos;s printing ability is represented in an application by a derived <ref refid="classwx_printout" kindref="compound">wxPrintout</ref> class. This class prints a page on request, and can be passed to the Print function of a <ref refid="classwx_printer" kindref="compound">wxPrinter</ref> object to actually print the document, or can be passed to a <ref refid="classwx_print_preview" kindref="compound">wxPrintPreview</ref> object to initiate previewing. The following code (from the printing sample) shows how easy it is to initiate printing, previewing and the print setup dialog, once the <ref refid="classwx_printout" kindref="compound">wxPrintout</ref> functionality has been defined. Notice the use of MyPrintout for both printing and previewing. All the preview user interface functionality is taken care of by wxWidgets. For more details on how MyPrintout is defined, please look at the printout sample code.</para><para><programlisting><codeline><highlight class="normal">case<sp/>WXPRINT_PRINT:</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>wxPrinter<sp/>printer;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>MyPrintout<sp/>printout(&quot;My<sp/>printout&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>printer.Print(this,<sp/>&amp;printout,<sp/>true);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal">case<sp/>WXPRINT_PREVIEW:</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Pass<sp/>two<sp/>printout<sp/>objects:<sp/>for<sp/>preview,<sp/>and<sp/>possible<sp/>printing.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>wxPrintPreview<sp/>*preview<sp/>=<sp/>new<sp/>wxPrintPreview(new<sp/>MyPrintout,<sp/>new<sp/>MyPrintout);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>wxPreviewFrame<sp/>*frame<sp/>=<sp/>new<sp/>wxPreviewFrame(preview,<sp/>this,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;Demo<sp/>Print<sp/>Preview&quot;,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxPoint(100,<sp/>100),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxSize(600,<sp/>650));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>frame-&gt;Centre(wxBOTH);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>frame-&gt;Initialize();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>frame-&gt;Show(true);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para><para><ref refid="classwx_printout" kindref="compound">wxPrintout</ref> assembles the printed page and (using your subclass&apos;s overrides) writes requested pages to a <ref refid="classwx_d_c" kindref="compound">wxDC</ref> that is passed to it. This <ref refid="classwx_d_c" kindref="compound">wxDC</ref> could be a <ref refid="classwx_memory_d_c" kindref="compound">wxMemoryDC</ref> (for displaying the preview image on-screen), a <ref refid="classwx_printer_d_c" kindref="compound">wxPrinterDC</ref> (for printing under MSW and Mac), or a <ref refid="classwx_post_script_d_c" kindref="compound">wxPostScriptDC</ref> (for printing under GTK or generating PostScript output).</para><para>The <ref refid="overview_docview" kindref="compound">document/view framework</ref> creates a default <ref refid="classwx_printout" kindref="compound">wxPrintout</ref> object for every view, calling <ref refid="classwx_view_1ab4b046b3cf4280fd35ed6fb711c35a94" kindref="member">wxView::OnDraw()</ref> to achieve a prepackaged print/preview facility.</para><para>If your window classes have a Draw(wxDC *dc) routine to do screen rendering, your <ref refid="classwx_printout" kindref="compound">wxPrintout</ref> subclass will typically call those routines to create portions of the image on your printout. Your <ref refid="classwx_printout" kindref="compound">wxPrintout</ref> subclass can also make its own calls to its <ref refid="classwx_d_c" kindref="compound">wxDC</ref> to draw headers, footers, page numbers, etc.</para><para>The scaling of the drawn image typically differs from the screen to the preview and printed images. This class provides a set of routines named FitThisSizeToXXX(), MapScreenSizeToXXX(), and GetLogicalXXXRect, which can be used to set the user scale and origin of the <ref refid="classwx_printout" kindref="compound">wxPrintout</ref>&apos;s DC so that your class can easily map your image to the printout withough getting into the details of screen and printer PPI and scaling. See the printing sample for examples of how these routines are used.</para></sect1>
<sect1 id="overview_printing_1overview_printing_printer">
<title>wxPrinter</title>
<para>Class <ref refid="classwx_printer" kindref="compound">wxPrinter</ref> encapsulates the platform-dependent print function with a common interface. In most cases, you will not need to derive a class from <ref refid="classwx_printer" kindref="compound">wxPrinter</ref>; simply create a <ref refid="classwx_printer" kindref="compound">wxPrinter</ref> object in your Print function as in the example above.</para></sect1>
<sect1 id="overview_printing_1overview_printing_printpreview">
<title>wxPrintPreview</title>
<para>Class <ref refid="classwx_print_preview" kindref="compound">wxPrintPreview</ref> manages the print preview process. Among other things, it constructs the wxDCs that get passed to your <ref refid="classwx_printout" kindref="compound">wxPrintout</ref> subclass for printing and manages the display of multiple pages, a zoomable preview image, and so forth. In most cases you will use this class as-is, but you can create your own subclass, for example, to change the layout or contents of the preview window.</para></sect1>
<sect1 id="overview_printing_1overview_printing_printerdc">
<title>wxPrinterDC</title>
<para>Class <ref refid="classwx_printer_d_c" kindref="compound">wxPrinterDC</ref> is the <ref refid="classwx_d_c" kindref="compound">wxDC</ref> that represents the actual printed page under MSW and Mac. During printing, an object of this class will be passed to your derived <ref refid="classwx_printout" kindref="compound">wxPrintout</ref> object to draw upon. The size of the <ref refid="classwx_printer_d_c" kindref="compound">wxPrinterDC</ref> will depend on the paper orientation and the resolution of the printer.</para><para>There are two important rectangles in printing: the <emphasis>page rectangle</emphasis> defines the printable area seen by the application, and under MSW and Mac, it is the printable area specified by the printer. (For PostScript printing, the page rectangle is the entire page.) The inherited function <ref refid="classwx_d_c_1aee6d97d655f20039745b5f6fb43a2d51" kindref="member">wxDC::GetSize()</ref> returns the page size in device pixels. The point (0,0) on the <ref refid="classwx_printer_d_c" kindref="compound">wxPrinterDC</ref> represents the top left corner of the page rectangle; that is, the page rect is given by <ref refid="classwx_rect" kindref="compound">wxRect(0, 0, w, h)</ref>, where (w,h) are the values returned by GetSize.</para><para>The <emphasis>paper rectangle</emphasis>, on the other hand, represents the entire paper area including the non-printable border. Thus, the coordinates of the top left corner of the paper rectangle will have small negative values, while the width and height will be somewhat larger than that of the page rectangle. The wxPrinterDC-specific function <ref refid="classwx_printer_d_c_1a415a346072bd2a0acca50b18c6a309fa" kindref="member">wxPrinterDC::GetPaperRect()</ref> returns the paper rectangle of the given <ref refid="classwx_printer_d_c" kindref="compound">wxPrinterDC</ref>.</para></sect1>
<sect1 id="overview_printing_1overview_printing_postscriptdc">
<title>wxPostScriptDC</title>
<para>Class <ref refid="classwx_post_script_d_c" kindref="compound">wxPostScriptDC</ref> is the <ref refid="classwx_d_c" kindref="compound">wxDC</ref> that represents the actual printed page under GTK and other PostScript printing. During printing, an object of this class will be passed to your derived <ref refid="classwx_printout" kindref="compound">wxPrintout</ref> object to draw upon. The size of the <ref refid="classwx_post_script_d_c" kindref="compound">wxPostScriptDC</ref> will depend upon the <ref refid="classwx_print_data" kindref="compound">wxPrintData</ref> used to construct it.</para><para>Unlike a <ref refid="classwx_printer_d_c" kindref="compound">wxPrinterDC</ref>, there is no distinction between the page rectangle and the paper rectangle in a <ref refid="classwx_post_script_d_c" kindref="compound">wxPostScriptDC</ref>; both rectangles are taken to represent the entire sheet of paper.</para></sect1>
<sect1 id="overview_printing_1overview_printing_printdialog">
<title>wxPrintDialog</title>
<para>Class <ref refid="classwx_print_dialog" kindref="compound">wxPrintDialog</ref> puts up the standard print dialog, which allows you to select the page range for printing (as well as many other print settings, which may vary from platform to platform). You provide an object of type <ref refid="classwx_print_dialog_data" kindref="compound">wxPrintDialogData</ref> to the <ref refid="classwx_print_dialog" kindref="compound">wxPrintDialog</ref> at construction, which is used to populate the dialog.</para></sect1>
<sect1 id="overview_printing_1overview_printing_printdata">
<title>wxPrintData</title>
<para>Class <ref refid="classwx_print_data" kindref="compound">wxPrintData</ref> is a subset of <ref refid="classwx_print_dialog_data" kindref="compound">wxPrintDialogData</ref> that is used (internally) to initialize a <ref refid="classwx_printer_d_c" kindref="compound">wxPrinterDC</ref> or <ref refid="classwx_post_script_d_c" kindref="compound">wxPostScriptDC</ref>. (In fact, a <ref refid="classwx_print_data" kindref="compound">wxPrintData</ref> is a data member of a <ref refid="classwx_print_dialog_data" kindref="compound">wxPrintDialogData</ref> and a <ref refid="classwx_page_setup_dialog_data" kindref="compound">wxPageSetupDialogData</ref>). Essentially, <ref refid="classwx_print_data" kindref="compound">wxPrintData</ref> contains those bits of information from the two dialogs necessary to configure the <ref refid="classwx_printer_d_c" kindref="compound">wxPrinterDC</ref> or <ref refid="classwx_post_script_d_c" kindref="compound">wxPostScriptDC</ref> (e.g., size, orientation, etc.). You might wish to create a global instance of this object to provide call-to-call persistence to your application&apos;s print settings.</para></sect1>
<sect1 id="overview_printing_1overview_printing_printdialogdata">
<title>wxPrintDialogData</title>
<para>Class <ref refid="classwx_print_dialog_data" kindref="compound">wxPrintDialogData</ref> contains the settings entered by the user in the print dialog. It contains such things as page range, number of copies, and so forth. In most cases, you won&apos;t need to access this information; the framework takes care of asking your <ref refid="classwx_printout" kindref="compound">wxPrintout</ref> derived object for the pages requested by the user.</para></sect1>
<sect1 id="overview_printing_1overview_printing_pagesetupdialog">
<title>wxPageSetupDialog</title>
<para>Class <ref refid="classwx_page_setup_dialog" kindref="compound">wxPageSetupDialog</ref> puts up the standard page setup dialog, which allows you to specify the orientation, paper size, and related settings. You provide it with a <ref refid="classwx_page_setup_dialog_data" kindref="compound">wxPageSetupDialogData</ref> object at initialization, which is used to populate the dialog; when the dialog is dismissed, this object contains the settings chosen by the user, including orientation and/or page margins.</para><para>Note that on Macintosh, the native page setup dialog does not contain entries that allow you to change the page margins. You can use the Mac-specific class wxMacPageMarginsDialog (which, like <ref refid="classwx_page_setup_dialog" kindref="compound">wxPageSetupDialog</ref>, takes a <ref refid="classwx_page_setup_dialog_data" kindref="compound">wxPageSetupDialogData</ref> object in its constructor) to provide this capability; see the printing sample for an example.</para></sect1>
<sect1 id="overview_printing_1overview_printing_pagesetupdialogdata">
<title>wxPageSetupDialogData</title>
<para>Class <ref refid="classwx_page_setup_dialog_data" kindref="compound">wxPageSetupDialogData</ref> contains settings affecting the page size (paper size), orientation, margins, and so forth. Note that not all platforms populate all fields; for example, the MSW page setup dialog lets you set the page margins while the Mac setup dialog does not.</para><para>You will typically create a global instance of each of a <ref refid="classwx_print_data" kindref="compound">wxPrintData</ref> and <ref refid="classwx_page_setup_dialog_data" kindref="compound">wxPageSetupDialogData</ref> at program initiation, which will contain the default settings provided by the system. Each time the user calls up either the <ref refid="classwx_print_dialog" kindref="compound">wxPrintDialog</ref> or the <ref refid="classwx_page_setup_dialog" kindref="compound">wxPageSetupDialog</ref>, you pass these data structures to initialize the dialog values and to be updated by the dialog. The framework then queries these data structures to get information like the printed page range (from the <ref refid="classwx_print_dialog_data" kindref="compound">wxPrintDialogData</ref>) or the paper size and/or page orientation (from the <ref refid="classwx_page_setup_dialog_data" kindref="compound">wxPageSetupDialogData</ref>). </para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
