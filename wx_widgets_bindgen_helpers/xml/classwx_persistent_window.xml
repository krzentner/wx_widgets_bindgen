<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classwx_persistent_window" kind="class" language="C++" prot="public">
    <compoundname>wxPersistentWindow</compoundname>
    <basecompoundref refid="classwx_persistent_object" prot="public" virt="non-virtual">wxPersistentObject</basecompoundref>
    <includes local="no">wx/persist/window.h</includes>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classwx_persistent_window_1aae880a18a0619852354e0c416474d066" prot="public" static="no">
        <type>T</type>
        <definition>typedef T wxPersistentWindow&lt; T &gt;::WindowType</definition>
        <argsstring></argsstring>
        <name>WindowType</name>
        <briefdescription>
<para>The type of the associated window. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/persist/window.h" line="26" column="1" bodyfile="interface/wx/persist/window.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_persistent_window_1a92e849fad0fdefa08880d87a7a8d7e48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxPersistentWindow&lt; T &gt;::wxPersistentWindow</definition>
        <argsstring>(WindowType *win)</argsstring>
        <name>wxPersistentWindow</name>
        <param>
          <type><ref refid="classwx_persistent_window_1aae880a18a0619852354e0c416474d066" kindref="member">WindowType</ref> *</type>
          <declname>win</declname>
        </param>
        <briefdescription>
<para>Constructor for a persistent window object. </para>        </briefdescription>
        <detaileddescription>
<para>The constructor uses <ref refid="classwx_evt_handler_1a78719e8b82c9f9c6e4056b3449df1943" kindref="member">wxEvtHandler::Connect()</ref> to catch <ref refid="classwx_window_destroy_event" kindref="compound">wxWindowDestroyEvent</ref> generated when the window is destroyed and call <ref refid="classwx_persistence_manager_1ab8a9b090b5f84df7b6a765fed78d4820" kindref="member">wxPersistenceManager::SaveAndUnregister()</ref> when this happens. This ensures that the window properties are saved and that this object itself is deleted when the window is. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/persist/window.h" line="37" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_persistent_window_1a4c351429beca46124779663e17311d70" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classwx_persistent_window_1aae880a18a0619852354e0c416474d066" kindref="member">WindowType</ref> *</type>
        <definition>WindowType* wxPersistentWindow&lt; T &gt;::Get</definition>
        <argsstring>() const</argsstring>
        <name>Get</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/persist/window.h" line="39" column="1" bodyfile="interface/wx/persist/window.h" bodystart="39" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classwx_persistent_window_1a261c7aef57887305fc94eba8c2661ff0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>virtual wxString wxPersistentWindow&lt; T &gt;::GetName</definition>
        <argsstring>() const</argsstring>
        <name>GetName</name>
        <reimplements refid="classwx_persistent_object_1ae175687a86da6a3d0d6edac12840d7e0">GetName</reimplements>
        <briefdescription>
<para>Implements the base class pure virtual method using <ref refid="classwx_window_1a93b9ec7d9eaf152c17f3bf2698551ef4" kindref="member">wxWindow::GetName()</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>Notice that window names are usually not unique while this function must return a unique (at least among the objects of this type) string. Because of this you need to specify a non-default window name in its constructor when creating it or explicitly call <ref refid="classwx_window_1af80875cda5e1af98dcd7c8e712e3c800" kindref="member">wxWindow::SetName()</ref> before saving or restoring persistent properties. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/persist/window.h" line="49" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Base class for persistent windows. </para>    </briefdescription>
    <detaileddescription>
<para>Compared to <ref refid="classwx_persistent_object" kindref="compound">wxPersistentObject</ref> this class does three things:<itemizedlist>
<listitem><para>Most importantly, <ref refid="classwx_persistent_window" kindref="compound">wxPersistentWindow</ref> catches <ref refid="classwx_window_destroy_event" kindref="compound">wxWindowDestroyEvent</ref> generated when the window is destroyed and saves its properties automatically when it happens.</para></listitem><listitem><para>It implements <ref refid="classwx_persistent_window_1a261c7aef57887305fc94eba8c2661ff0" kindref="member">GetName()</ref> using <ref refid="classwx_window_1a93b9ec7d9eaf152c17f3bf2698551ef4" kindref="member">wxWindow::GetName()</ref> so that the derived classes don&apos;t need to do it.</para></listitem><listitem><para>It adds a convenient <ref refid="classwx_persistent_window_1a4c351429beca46124779663e17311d70" kindref="member">wxPersistentWindow::Get()</ref> accessor returning the window object of the correct type. </para></listitem></itemizedlist>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="5218">
        <label>wxPersistentWindow&lt; T &gt;</label>
        <link refid="classwx_persistent_window"/>
        <childnode refid="5219" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5219">
        <label>wxPersistentObject</label>
        <link refid="classwx_persistent_object"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5220">
        <label>wxPersistentWindow&lt; T &gt;</label>
        <link refid="classwx_persistent_window"/>
        <childnode refid="5221" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5221">
        <label>wxPersistentObject</label>
        <link refid="classwx_persistent_object"/>
      </node>
    </collaborationgraph>
    <location file="interface/wx/persist/window.h" line="23" column="1" bodyfile="interface/wx/persist/window.h" bodystart="22" bodyend="50"/>
    <listofallmembers>
      <member refid="classwx_persistent_window_1a4c351429beca46124779663e17311d70" prot="public" virt="non-virtual"><scope>wxPersistentWindow</scope><name>Get</name></member>
      <member refid="classwx_persistent_object_1a53d730bbfe3fdf57c9c553987f1096f8" prot="public" virt="pure-virtual"><scope>wxPersistentWindow</scope><name>GetKind</name></member>
      <member refid="classwx_persistent_window_1a261c7aef57887305fc94eba8c2661ff0" prot="public" virt="virtual"><scope>wxPersistentWindow</scope><name>GetName</name></member>
      <member refid="classwx_persistent_object_1a0b0fbd22151149d2c45aca62c2c738bf" prot="public" virt="non-virtual"><scope>wxPersistentWindow</scope><name>GetObject</name></member>
      <member refid="classwx_persistent_object_1a04f9a557b8dd17c60c83cb29102e093e" prot="public" virt="pure-virtual"><scope>wxPersistentWindow</scope><name>Restore</name></member>
      <member refid="classwx_persistent_object_1a7dd10ed5914be1d60f9104f0a80bafe5" prot="protected" virt="non-virtual"><scope>wxPersistentWindow</scope><name>RestoreValue</name></member>
      <member refid="classwx_persistent_object_1a93e351e08f224fbe7a2ab110458ba9cc" prot="public" virt="pure-virtual"><scope>wxPersistentWindow</scope><name>Save</name></member>
      <member refid="classwx_persistent_object_1ac1fcea880e365018189ae3534c50a80f" prot="protected" virt="non-virtual"><scope>wxPersistentWindow</scope><name>SaveValue</name></member>
      <member refid="classwx_persistent_window_1aae880a18a0619852354e0c416474d066" prot="public" virt="non-virtual"><scope>wxPersistentWindow</scope><name>WindowType</name></member>
      <member refid="classwx_persistent_object_1aa400f4ce8ec1eed2498dd5dd1a385942" prot="public" virt="non-virtual"><scope>wxPersistentWindow</scope><name>wxPersistentObject</name></member>
      <member refid="classwx_persistent_window_1a92e849fad0fdefa08880d87a7a8d7e48" prot="public" virt="non-virtual"><scope>wxPersistentWindow</scope><name>wxPersistentWindow</name></member>
      <member refid="classwx_persistent_object_1accfdecb17fa0e67708e0c9057cc91041" prot="public" virt="virtual"><scope>wxPersistentWindow</scope><name>~wxPersistentObject</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
