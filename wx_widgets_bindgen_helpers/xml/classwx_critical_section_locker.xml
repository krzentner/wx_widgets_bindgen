<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classwx_critical_section_locker" kind="class" language="C++" prot="public">
    <compoundname>wxCriticalSectionLocker</compoundname>
    <includes local="no">wx/thread.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_critical_section_locker_1a5a91c24edee0c85444ef0706e5b78694" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxCriticalSectionLocker::wxCriticalSectionLocker</definition>
        <argsstring>(wxCriticalSection &amp;criticalsection)</argsstring>
        <name>wxCriticalSectionLocker</name>
        <param>
          <type><ref refid="classwx_critical_section" kindref="compound">wxCriticalSection</ref> &amp;</type>
          <declname>criticalsection</declname>
        </param>
        <briefdescription>
<para>Constructs a <ref refid="classwx_critical_section_locker" kindref="compound">wxCriticalSectionLocker</ref> object associated with given <emphasis>criticalsection</emphasis> and enters it. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/thread.h" line="265" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_critical_section_locker_1a74e6eff6391e4f4ee8c0eeb77cfd95e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxCriticalSectionLocker::~wxCriticalSectionLocker</definition>
        <argsstring>()</argsstring>
        <name>~wxCriticalSectionLocker</name>
        <briefdescription>
<para>Destructor leaves the critical section. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/thread.h" line="270" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This is a small helper class to be used with <ref refid="classwx_critical_section" kindref="compound">wxCriticalSection</ref> objects. </para>    </briefdescription>
    <detaileddescription>
<para>A <ref refid="classwx_critical_section_locker" kindref="compound">wxCriticalSectionLocker</ref> enters the critical section in the constructor and leaves it in the destructor making it much more difficult to forget to leave a critical section (which, in general, will lead to serious and difficult to debug problems).</para><para>Example of using it:</para><para><programlisting><codeline><highlight class="normal">void<sp/>Set<sp/>Foo()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>gs_critSect<sp/>is<sp/>some<sp/>(global)<sp/>critical<sp/>section<sp/>guarding<sp/>access<sp/>to<sp/>the</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>object<sp/>&quot;foo&quot;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>wxCriticalSectionLocker<sp/>locker(gs_critSect);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(<sp/>...<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>do<sp/>something</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>do<sp/>something<sp/>else</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para><para>Without <ref refid="classwx_critical_section_locker" kindref="compound">wxCriticalSectionLocker</ref>, you would need to remember to manually leave the critical section before each <computeroutput>return</computeroutput>.</para><para><heading level="2"></heading>
</para><para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxbase" kindref="member">wxBase</ref> &lt;&gt;&lt; =&apos;&apos;&gt;:&lt;/&gt;&amp;;&amp;;&lt; =&apos;&apos;&gt;\ &lt;/&gt;&lt;/&gt;</para><para><simplesect kind="see"><para><ref refid="classwx_critical_section" kindref="compound">wxCriticalSection</ref>, <ref refid="classwx_mutex_locker" kindref="compound">wxMutexLocker</ref> </para></simplesect>
</para>    </detaileddescription>
    <location file="interface/wx/thread.h" line="259" column="1" bodyfile="interface/wx/thread.h" bodystart="258" bodyend="271"/>
    <listofallmembers>
      <member refid="classwx_critical_section_locker_1a5a91c24edee0c85444ef0706e5b78694" prot="public" virt="non-virtual"><scope>wxCriticalSectionLocker</scope><name>wxCriticalSectionLocker</name></member>
      <member refid="classwx_critical_section_locker_1a74e6eff6391e4f4ee8c0eeb77cfd95e5" prot="public" virt="non-virtual"><scope>wxCriticalSectionLocker</scope><name>~wxCriticalSectionLocker</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
