<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classwx_file_system_watcher_event" kind="class" language="C++" prot="public">
    <compoundname>wxFileSystemWatcherEvent</compoundname>
    <basecompoundref refid="classwx_event" prot="public" virt="non-virtual">wxEvent</basecompoundref>
    <includes local="no">wx/fswatcher.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_file_system_watcher_event_1acfffac7a8a8aaaeb13321cc6a743e183" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxFileSystemWatcherEvent::wxFileSystemWatcherEvent</definition>
        <argsstring>(int changeType=0, int watchid=wxID_ANY)</argsstring>
        <name>wxFileSystemWatcherEvent</name>
        <param>
          <type>int</type>
          <declname>changeType</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>watchid</declname>
          <defval><ref refid="defs_8h_1ac66d0a09761e7d86b2ac0b2e0c6a8cbba1f375b01ea03a713bbb7e32a36a2589c" kindref="member">wxID_ANY</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/fswatcher.h" line="159" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_file_system_watcher_event_1a3c6062ed9c3f60527aa49e8990c730b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxFileSystemWatcherEvent::wxFileSystemWatcherEvent</definition>
        <argsstring>(int changeType, wxFSWWarningType warningType, const wxString &amp;errorMsg, int watchid=wxID_ANY)</argsstring>
        <name>wxFileSystemWatcherEvent</name>
        <param>
          <type>int</type>
          <declname>changeType</declname>
        </param>
        <param>
          <type><ref refid="fswatcher_8h_1a1a9b4dfd8ebb0613675fc64af52b81d9" kindref="member">wxFSWWarningType</ref></type>
          <declname>warningType</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>errorMsg</declname>
        </param>
        <param>
          <type>int</type>
          <declname>watchid</declname>
          <defval><ref refid="defs_8h_1ac66d0a09761e7d86b2ac0b2e0c6a8cbba1f375b01ea03a713bbb7e32a36a2589c" kindref="member">wxID_ANY</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/fswatcher.h" line="161" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_file_system_watcher_event_1a8c9b6fc0b70aee1a8e1a01ac82ef347b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxFileSystemWatcherEvent::wxFileSystemWatcherEvent</definition>
        <argsstring>(int changeType, const wxFileName &amp;path, const wxFileName &amp;newPath, int watchid=wxID_ANY)</argsstring>
        <name>wxFileSystemWatcherEvent</name>
        <param>
          <type>int</type>
          <declname>changeType</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_file_name" kindref="compound">wxFileName</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_file_name" kindref="compound">wxFileName</ref> &amp;</type>
          <declname>newPath</declname>
        </param>
        <param>
          <type>int</type>
          <declname>watchid</declname>
          <defval><ref refid="defs_8h_1ac66d0a09761e7d86b2ac0b2e0c6a8cbba1f375b01ea03a713bbb7e32a36a2589c" kindref="member">wxID_ANY</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/fswatcher.h" line="165" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_file_system_watcher_event_1a3e3f76caa138e605f169f101cd18e098" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classwx_file_name" kindref="compound">wxFileName</ref> &amp;</type>
        <definition>const wxFileName&amp; wxFileSystemWatcherEvent::GetPath</definition>
        <argsstring>() const</argsstring>
        <name>GetPath</name>
        <briefdescription>
<para>Returns the path at which the event occurred. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/fswatcher.h" line="173" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_file_system_watcher_event_1af4b3b2f5e0d9f216bcd304e0ec4b5e23" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classwx_file_name" kindref="compound">wxFileName</ref> &amp;</type>
        <definition>const wxFileName&amp; wxFileSystemWatcherEvent::GetNewPath</definition>
        <argsstring>() const</argsstring>
        <name>GetNewPath</name>
        <briefdescription>
<para>Returns the new path of the renamed file/directory if this is a rename event. </para>        </briefdescription>
        <detaileddescription>
<para>Otherwise it returns the same path as <ref refid="classwx_file_system_watcher_event_1a3e3f76caa138e605f169f101cd18e098" kindref="member">GetPath()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/fswatcher.h" line="181" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_file_system_watcher_event_1acbe9d1ea9c7de0d54d1b8ab85d93f025" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxFileSystemWatcherEvent::GetChangeType</definition>
        <argsstring>() const</argsstring>
        <name>GetChangeType</name>
        <briefdescription>
<para>Returns the type of file system change that occurred. </para>        </briefdescription>
        <detaileddescription>
<para>See wxFSWFlags for the list of possible file system change types. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/fswatcher.h" line="187" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_file_system_watcher_event_1a9b159434bace896cf3ddc5d41265673f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxFileSystemWatcherEvent::IsError</definition>
        <argsstring>() const</argsstring>
        <name>IsError</name>
        <briefdescription>
<para>Returns <computeroutput>true</computeroutput> if this error is an error event. </para>        </briefdescription>
        <detaileddescription>
<para>Error event is an event generated when a warning or error condition arises. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/fswatcher.h" line="195" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_file_system_watcher_event_1a63ed2bc26cfdc6ffd183f983af7a851f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>wxString wxFileSystemWatcherEvent::GetErrorDescription</definition>
        <argsstring>() const</argsstring>
        <name>GetErrorDescription</name>
        <briefdescription>
<para>Return a description of the warning or error if this is an error event. </para>        </briefdescription>
        <detaileddescription>
<para>This string may be empty if the exact reason for the error or the warning is not known. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/fswatcher.h" line="203" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_file_system_watcher_event_1a2c41b64fcdd9c5a959b2354491b2be29" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fswatcher_8h_1a1a9b4dfd8ebb0613675fc64af52b81d9" kindref="member">wxFSWWarningType</ref></type>
        <definition>wxFSWWarningType wxFileSystemWatcherEvent::GetWarningType</definition>
        <argsstring>() const</argsstring>
        <name>GetWarningType</name>
        <briefdescription>
<para>Return the type of the warning if this event is a warning one. </para>        </briefdescription>
        <detaileddescription>
<para>If this is not a warning event, i.e. if <ref refid="classwx_file_system_watcher_event_1acbe9d1ea9c7de0d54d1b8ab85d93f025" kindref="member">GetChangeType()</ref> doesn&apos;t include <ref refid="fswatcher_8h_1a4fe91d0a725cc933b1a59d03e116acd9a8fb8524d1c624adef02f491bb9629fe6" kindref="member">wxFSW_EVENT_WARNING</ref>, returns <ref refid="fswatcher_8h_1a1a9b4dfd8ebb0613675fc64af52b81d9a2288b904a78949f95ac6728a773ea1f4" kindref="member">wxFSW_WARNING_NONE</ref>.</para><para><simplesect kind="since"><para>3.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/fswatcher.h" line="213" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_file_system_watcher_event_1a452fcb125acd3cd43e272ae678a2c007" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>wxString wxFileSystemWatcherEvent::ToString</definition>
        <argsstring>() const</argsstring>
        <name>ToString</name>
        <briefdescription>
<para>Returns a <ref refid="classwx_string" kindref="compound">wxString</ref> describing an event, useful for logging, debugging or testing. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/fswatcher.h" line="219" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A class of events sent when a file system event occurs. </para>    </briefdescription>
    <detaileddescription>
<para>Types of events reported may vary depending on a platform, however all platforms report at least creation of new file/directory and access, modification, move (rename) or deletion of an existing one.</para><para><heading level="2"></heading>
</para><para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxbase" kindref="member">wxBase</ref> &lt;&gt;&lt; =&apos;&apos;&gt;:&lt;/&gt;&amp;;&amp;;&lt; =&apos;&apos;&gt;\ &lt;/&gt;&lt;/&gt;</para><para><simplesect kind="see"><para><ref refid="classwx_file_system_watcher" kindref="compound">wxFileSystemWatcher</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="overview_events" kindref="compound">Events and Event Handling</ref></para></simplesect>
<simplesect kind="since"><para>2.9.1 </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="2440">
        <label>wxObject</label>
        <link refid="classwx_object"/>
      </node>
      <node id="2438">
        <label>wxFileSystemWatcherEvent</label>
        <link refid="classwx_file_system_watcher_event"/>
        <childnode refid="2439" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2439">
        <label>wxEvent</label>
        <link refid="classwx_event"/>
        <childnode refid="2440" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2443">
        <label>wxObject</label>
        <link refid="classwx_object"/>
        <childnode refid="2444" relation="usage">
          <edgelabel>m_refData</edgelabel>
        </childnode>
      </node>
      <node id="2441">
        <label>wxFileSystemWatcherEvent</label>
        <link refid="classwx_file_system_watcher_event"/>
        <childnode refid="2442" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2442">
        <label>wxEvent</label>
        <link refid="classwx_event"/>
        <childnode refid="2443" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2444">
        <label>wxObjectRefData</label>
        <link refid="classwx_object_ref_data"/>
      </node>
    </collaborationgraph>
    <location file="interface/wx/fswatcher.h" line="157" column="1" bodyfile="interface/wx/fswatcher.h" bodystart="156" bodyend="220"/>
    <listofallmembers>
      <member refid="classwx_object_1a60204063f3cc3aa2fa1c7ff5bda9eb13" prot="protected" virt="non-virtual"><scope>wxFileSystemWatcherEvent</scope><name>AllocExclusive</name></member>
      <member refid="classwx_event_1a26878097a702e8d0368da150125d4158" prot="public" virt="pure-virtual"><scope>wxFileSystemWatcherEvent</scope><name>Clone</name></member>
      <member refid="classwx_object_1a436fc8fe68cf8a31000296d9cd3d2427" prot="protected" virt="virtual"><scope>wxFileSystemWatcherEvent</scope><name>CloneRefData</name></member>
      <member refid="classwx_object_1a3f4f497c65cef611e121c41f21dd5ccc" prot="protected" virt="virtual"><scope>wxFileSystemWatcherEvent</scope><name>CreateRefData</name></member>
      <member refid="classwx_file_system_watcher_event_1acbe9d1ea9c7de0d54d1b8ab85d93f025" prot="public" virt="non-virtual"><scope>wxFileSystemWatcherEvent</scope><name>GetChangeType</name></member>
      <member refid="classwx_object_1ae6d365f2556b26767ced8410c5e839d0" prot="public" virt="virtual"><scope>wxFileSystemWatcherEvent</scope><name>GetClassInfo</name></member>
      <member refid="classwx_file_system_watcher_event_1a63ed2bc26cfdc6ffd183f983af7a851f" prot="public" virt="non-virtual"><scope>wxFileSystemWatcherEvent</scope><name>GetErrorDescription</name></member>
      <member refid="classwx_event_1ac4958ff6ec32b7f4b23066932d611131" prot="public" virt="virtual"><scope>wxFileSystemWatcherEvent</scope><name>GetEventCategory</name></member>
      <member refid="classwx_event_1a424a4ffaaaf95164d8952ef9ab2ef444" prot="public" virt="non-virtual"><scope>wxFileSystemWatcherEvent</scope><name>GetEventObject</name></member>
      <member refid="classwx_event_1a01c89719ef6241a6e612a313a259c1c2" prot="public" virt="non-virtual"><scope>wxFileSystemWatcherEvent</scope><name>GetEventType</name></member>
      <member refid="classwx_event_1ae7d3e088f0f165ad0421717dd33e4460" prot="public" virt="non-virtual"><scope>wxFileSystemWatcherEvent</scope><name>GetEventUserData</name></member>
      <member refid="classwx_event_1ac5fa5c10d4845d903e58026a42b403c7" prot="public" virt="non-virtual"><scope>wxFileSystemWatcherEvent</scope><name>GetId</name></member>
      <member refid="classwx_file_system_watcher_event_1af4b3b2f5e0d9f216bcd304e0ec4b5e23" prot="public" virt="non-virtual"><scope>wxFileSystemWatcherEvent</scope><name>GetNewPath</name></member>
      <member refid="classwx_file_system_watcher_event_1a3e3f76caa138e605f169f101cd18e098" prot="public" virt="non-virtual"><scope>wxFileSystemWatcherEvent</scope><name>GetPath</name></member>
      <member refid="classwx_object_1af3c6c76a775864832f1536d3c0de3a2b" prot="public" virt="non-virtual"><scope>wxFileSystemWatcherEvent</scope><name>GetRefData</name></member>
      <member refid="classwx_event_1aa770dbcd0f1714ba097836af6534b4c5" prot="public" virt="non-virtual"><scope>wxFileSystemWatcherEvent</scope><name>GetSkipped</name></member>
      <member refid="classwx_event_1a48662230971127737d2500cef7be549d" prot="public" virt="non-virtual"><scope>wxFileSystemWatcherEvent</scope><name>GetTimestamp</name></member>
      <member refid="classwx_file_system_watcher_event_1a2c41b64fcdd9c5a959b2354491b2be29" prot="public" virt="non-virtual"><scope>wxFileSystemWatcherEvent</scope><name>GetWarningType</name></member>
      <member refid="classwx_event_1a31f6a4377d6d36964b8eae4e56ec43e0" prot="public" virt="non-virtual"><scope>wxFileSystemWatcherEvent</scope><name>IsCommandEvent</name></member>
      <member refid="classwx_file_system_watcher_event_1a9b159434bace896cf3ddc5d41265673f" prot="public" virt="non-virtual"><scope>wxFileSystemWatcherEvent</scope><name>IsError</name></member>
      <member refid="classwx_object_1a3c7115ef4132dcee0c4fc34e84d7fced" prot="public" virt="non-virtual"><scope>wxFileSystemWatcherEvent</scope><name>IsKindOf</name></member>
      <member refid="classwx_object_1a059373c494c2369d7db2a556efef8ecf" prot="public" virt="non-virtual"><scope>wxFileSystemWatcherEvent</scope><name>IsSameAs</name></member>
      <member refid="classwx_event_1ac81911194f1f59e1454c0397b87975d4" prot="protected" virt="non-virtual"><scope>wxFileSystemWatcherEvent</scope><name>m_propagationLevel</name></member>
      <member refid="classwx_object_1a9e31954530a0abd54982effc443ed2b8" prot="protected" virt="non-virtual"><scope>wxFileSystemWatcherEvent</scope><name>m_refData</name></member>
      <member refid="classwx_object_1a07b8f34f5afc5743195c5fed052f55d3" prot="public" virt="non-virtual"><scope>wxFileSystemWatcherEvent</scope><name>operator delete</name></member>
      <member refid="classwx_object_1a96fa423a1dbc212c8227a5d83825971f" prot="public" virt="non-virtual"><scope>wxFileSystemWatcherEvent</scope><name>operator new</name></member>
      <member refid="classwx_object_1a2f6f1aa51fe9fc2b1415ca4211a90e9e" prot="public" virt="non-virtual"><scope>wxFileSystemWatcherEvent</scope><name>Ref</name></member>
      <member refid="classwx_event_1a0acb5c75f6e67b8822ad8ba3c5bdc4fe" prot="public" virt="non-virtual"><scope>wxFileSystemWatcherEvent</scope><name>ResumePropagation</name></member>
      <member refid="classwx_event_1a3460217d04c36393ab868ba453fde13d" prot="public" virt="non-virtual"><scope>wxFileSystemWatcherEvent</scope><name>SetEventObject</name></member>
      <member refid="classwx_event_1aa29fb7459d64602e09837fea1e516d27" prot="public" virt="non-virtual"><scope>wxFileSystemWatcherEvent</scope><name>SetEventType</name></member>
      <member refid="classwx_event_1ab9973f687bfa8a60318d8d9bd629d0d4" prot="public" virt="non-virtual"><scope>wxFileSystemWatcherEvent</scope><name>SetId</name></member>
      <member refid="classwx_object_1afab780710f2adc1bb33310e27590140b" prot="public" virt="non-virtual"><scope>wxFileSystemWatcherEvent</scope><name>SetRefData</name></member>
      <member refid="classwx_event_1ad4380dff3144a986cb960473051a1d8d" prot="public" virt="non-virtual"><scope>wxFileSystemWatcherEvent</scope><name>SetTimestamp</name></member>
      <member refid="classwx_event_1ac7a178c3c781c80f1308945042f76e7f" prot="public" virt="non-virtual"><scope>wxFileSystemWatcherEvent</scope><name>ShouldPropagate</name></member>
      <member refid="classwx_event_1a98eb20b76106f9a933c2eb3ee119f66c" prot="public" virt="non-virtual"><scope>wxFileSystemWatcherEvent</scope><name>Skip</name></member>
      <member refid="classwx_event_1a060a7d222404daff4d3cef30cddeaae3" prot="public" virt="non-virtual"><scope>wxFileSystemWatcherEvent</scope><name>StopPropagation</name></member>
      <member refid="classwx_file_system_watcher_event_1a452fcb125acd3cd43e272ae678a2c007" prot="public" virt="non-virtual"><scope>wxFileSystemWatcherEvent</scope><name>ToString</name></member>
      <member refid="classwx_object_1af51efc6b1ae632fc7f0cd7ebbce9fa36" prot="public" virt="non-virtual"><scope>wxFileSystemWatcherEvent</scope><name>UnRef</name></member>
      <member refid="classwx_object_1a74b40e42d19a4b9e9bec0b57d62a5725" prot="public" virt="non-virtual"><scope>wxFileSystemWatcherEvent</scope><name>UnShare</name></member>
      <member refid="classwx_event_1aaf2a5cf056d006859cea36689ba13d36" prot="public" virt="non-virtual"><scope>wxFileSystemWatcherEvent</scope><name>wxEvent</name></member>
      <member refid="classwx_file_system_watcher_event_1acfffac7a8a8aaaeb13321cc6a743e183" prot="public" virt="non-virtual"><scope>wxFileSystemWatcherEvent</scope><name>wxFileSystemWatcherEvent</name></member>
      <member refid="classwx_file_system_watcher_event_1a3c6062ed9c3f60527aa49e8990c730b6" prot="public" virt="non-virtual"><scope>wxFileSystemWatcherEvent</scope><name>wxFileSystemWatcherEvent</name></member>
      <member refid="classwx_file_system_watcher_event_1a8c9b6fc0b70aee1a8e1a01ac82ef347b" prot="public" virt="non-virtual"><scope>wxFileSystemWatcherEvent</scope><name>wxFileSystemWatcherEvent</name></member>
      <member refid="classwx_object_1acaa378363a28af421ab56ad7b46eadf0" prot="public" virt="non-virtual"><scope>wxFileSystemWatcherEvent</scope><name>wxObject</name></member>
      <member refid="classwx_object_1a4721b4dc9b7aff0f30904ba2ea3954cf" prot="public" virt="non-virtual"><scope>wxFileSystemWatcherEvent</scope><name>wxObject</name></member>
      <member refid="classwx_object_1a2a51aa8bfbab47ca2f051bcf84b3f35b" prot="public" virt="virtual"><scope>wxFileSystemWatcherEvent</scope><name>~wxObject</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
