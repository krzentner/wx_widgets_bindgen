<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classwx_zip_entry" kind="class" language="C++" prot="public">
    <compoundname>wxZipEntry</compoundname>
    <basecompoundref refid="classwx_archive_entry" prot="public" virt="non-virtual">wxArchiveEntry</basecompoundref>
    <includes local="no">wx/zipstrm.h</includes>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classwx_zip_entry_1abc5090ebe9ee25823e3b189c558fde2e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>wxString wxZipEntry::GetComment</definition>
        <argsstring>() const</argsstring>
        <name>GetComment</name>
        <briefdescription>
<para>Gets and sets the short comment for this entry. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/zipstrm.h" line="187" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_zip_entry_1abffa0697f9350ceaeec1d8ab1f2a7667" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxZipEntry::SetComment</definition>
        <argsstring>(const wxString &amp;comment)</argsstring>
        <name>SetComment</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>comment</declname>
        </param>
        <briefdescription>
<para>Gets and sets the short comment for this entry. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/zipstrm.h" line="188" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classwx_zip_entry_1a6140ad512132cc86c4903fd8f53be9cc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="defs_8h_1afdb12e5345c3fae4b537e813df9f02a3" kindref="member">wxUint32</ref></type>
        <definition>wxUint32 wxZipEntry::GetExternalAttributes</definition>
        <argsstring>() const</argsstring>
        <name>GetExternalAttributes</name>
        <briefdescription>
<para>The low 8 bits are always the DOS/Windows file attributes for this entry. </para>        </briefdescription>
        <detaileddescription>
<para>The values of these attributes are given in the enumeration <ref refid="zipstrm_8h_1a77b66e32f758eee5da17db30b0350c4c" kindref="member">wxZipAttributes</ref>.</para><para>The remaining bits can store platform specific permission bits or attributes, and their meaning depends on the value of <ref refid="classwx_zip_entry_1ace658575f86e8d4a6c51b2b6d7f628c6" kindref="member">SetSystemMadeBy()</ref>. If <ref refid="classwx_zip_entry_1a9553fa7855f956954db923696d3d1201" kindref="member">IsMadeByUnix()</ref> is true then the high 16 bits are unix mode bits.</para><para>The following other accessors access these bits:<itemizedlist>
<listitem><para><ref refid="classwx_archive_entry_1abe30c2532550d23136cf6e1390007073" kindref="member">IsReadOnly()</ref> / <ref refid="classwx_archive_entry_1a0ed675785f6d0ddaf36664951f4430b6" kindref="member">SetIsReadOnly()</ref></para></listitem><listitem><para><ref refid="classwx_archive_entry_1a548d3b6f4aeba699dc0d1ec1c21b7ce2" kindref="member">IsDir()</ref> / <ref refid="classwx_archive_entry_1ab01182fe22c8eeefa05740e68d12ced0" kindref="member">SetIsDir()</ref></para></listitem><listitem><para><ref refid="classwx_zip_entry_1aef79686443d578fd3d76929cd0c1de55" kindref="member">GetMode()</ref> / <ref refid="classwx_zip_entry_1aafe0497294d75794f5dfab9ac895a309" kindref="member">SetMode()</ref> </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/zipstrm.h" line="205" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_zip_entry_1ad7a93f88746b23a506a36c1f623607da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxZipEntry::SetExternalAttributes</definition>
        <argsstring>(wxUint32 attr)</argsstring>
        <name>SetExternalAttributes</name>
        <param>
          <type><ref refid="defs_8h_1afdb12e5345c3fae4b537e813df9f02a3" kindref="member">wxUint32</ref></type>
          <declname>attr</declname>
        </param>
        <briefdescription>
<para>The low 8 bits are always the DOS/Windows file attributes for this entry. </para>        </briefdescription>
        <detaileddescription>
<para>The values of these attributes are given in the enumeration <ref refid="zipstrm_8h_1a77b66e32f758eee5da17db30b0350c4c" kindref="member">wxZipAttributes</ref>.</para><para>The remaining bits can store platform specific permission bits or attributes, and their meaning depends on the value of <ref refid="classwx_zip_entry_1ace658575f86e8d4a6c51b2b6d7f628c6" kindref="member">SetSystemMadeBy()</ref>. If <ref refid="classwx_zip_entry_1a9553fa7855f956954db923696d3d1201" kindref="member">IsMadeByUnix()</ref> is true then the high 16 bits are unix mode bits.</para><para>The following other accessors access these bits:<itemizedlist>
<listitem><para><ref refid="classwx_archive_entry_1abe30c2532550d23136cf6e1390007073" kindref="member">IsReadOnly()</ref> / <ref refid="classwx_archive_entry_1a0ed675785f6d0ddaf36664951f4430b6" kindref="member">SetIsReadOnly()</ref></para></listitem><listitem><para><ref refid="classwx_archive_entry_1a548d3b6f4aeba699dc0d1ec1c21b7ce2" kindref="member">IsDir()</ref> / <ref refid="classwx_archive_entry_1ab01182fe22c8eeefa05740e68d12ced0" kindref="member">SetIsDir()</ref></para></listitem><listitem><para><ref refid="classwx_zip_entry_1aef79686443d578fd3d76929cd0c1de55" kindref="member">GetMode()</ref> / <ref refid="classwx_zip_entry_1aafe0497294d75794f5dfab9ac895a309" kindref="member">SetMode()</ref> </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/zipstrm.h" line="206" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classwx_zip_entry_1a4d857a30cac3c7817936e5845665ae88" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* wxZipEntry::GetExtra</definition>
        <argsstring>() const</argsstring>
        <name>GetExtra</name>
        <briefdescription>
<para>The extra field from the entry&apos;s central directory record. </para>        </briefdescription>
        <detaileddescription>
<para>The extra field is used to store platform or application specific data. See Pkware&apos;s document &apos;appnote.txt&apos; for information on its format. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/zipstrm.h" line="216" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_zip_entry_1abfe13d8e31641320d99bc1aa2e5d01ab" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t wxZipEntry::GetExtraLen</definition>
        <argsstring>() const</argsstring>
        <name>GetExtraLen</name>
        <briefdescription>
<para>The extra field from the entry&apos;s central directory record. </para>        </briefdescription>
        <detaileddescription>
<para>The extra field is used to store platform or application specific data. See Pkware&apos;s document &apos;appnote.txt&apos; for information on its format. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/zipstrm.h" line="217" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_zip_entry_1adb77972b55bd00416fc4fd891f580f61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxZipEntry::SetExtra</definition>
        <argsstring>(const char *extra, size_t len)</argsstring>
        <name>SetExtra</name>
        <param>
          <type>const char *</type>
          <declname>extra</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>The extra field from the entry&apos;s central directory record. </para>        </briefdescription>
        <detaileddescription>
<para>The extra field is used to store platform or application specific data. See Pkware&apos;s document &apos;appnote.txt&apos; for information on its format. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/zipstrm.h" line="218" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classwx_zip_entry_1afb7bd276e12427da3e15a0f844bc1f31" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* wxZipEntry::GetLocalExtra</definition>
        <argsstring>() const</argsstring>
        <name>GetLocalExtra</name>
        <briefdescription>
<para>The extra field from the entry&apos;s local record. </para>        </briefdescription>
        <detaileddescription>
<para>The extra field is used to store platform or application specific data. See Pkware&apos;s document &apos;appnote.txt&apos; for information on its format. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/zipstrm.h" line="228" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_zip_entry_1a25c82a9c3f16b5fc711a367a1d3c4f83" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t wxZipEntry::GetLocalExtraLen</definition>
        <argsstring>() const</argsstring>
        <name>GetLocalExtraLen</name>
        <briefdescription>
<para>The extra field from the entry&apos;s local record. </para>        </briefdescription>
        <detaileddescription>
<para>The extra field is used to store platform or application specific data. See Pkware&apos;s document &apos;appnote.txt&apos; for information on its format. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/zipstrm.h" line="229" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_zip_entry_1afd66a8fef1bb88a9e4041e9c381f14d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxZipEntry::SetLocalExtra</definition>
        <argsstring>(const char *extra, size_t len)</argsstring>
        <name>SetLocalExtra</name>
        <param>
          <type>const char *</type>
          <declname>extra</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>The extra field from the entry&apos;s local record. </para>        </briefdescription>
        <detaileddescription>
<para>The extra field is used to store platform or application specific data. See Pkware&apos;s document &apos;appnote.txt&apos; for information on its format. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/zipstrm.h" line="230" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classwx_zip_entry_1a99a66b769c5014dae4982019f9023518" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxZipEntry::GetMethod</definition>
        <argsstring>() const</argsstring>
        <name>GetMethod</name>
        <briefdescription>
<para>The compression method. </para>        </briefdescription>
        <detaileddescription>
<para>The enumeration <ref refid="zipstrm_8h_1aaafb80310260054ee9eef14fa77a4326" kindref="member">wxZipMethod</ref> lists the possible values.</para><para>The default constructor sets this to <computeroutput>wxZIP_METHOD_DEFAULT</computeroutput>, which allows <ref refid="classwx_zip_output_stream" kindref="compound">wxZipOutputStream</ref> to choose the method when writing the entry. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/zipstrm.h" line="241" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_zip_entry_1a2a99240b415c3f3f6f8bd367f051e8b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxZipEntry::SetMethod</definition>
        <argsstring>(int method)</argsstring>
        <name>SetMethod</name>
        <param>
          <type>int</type>
          <declname>method</declname>
        </param>
        <briefdescription>
<para>The compression method. </para>        </briefdescription>
        <detaileddescription>
<para>The enumeration <ref refid="zipstrm_8h_1aaafb80310260054ee9eef14fa77a4326" kindref="member">wxZipMethod</ref> lists the possible values.</para><para>The default constructor sets this to <computeroutput>wxZIP_METHOD_DEFAULT</computeroutput>, which allows <ref refid="classwx_zip_output_stream" kindref="compound">wxZipOutputStream</ref> to choose the method when writing the entry. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/zipstrm.h" line="242" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classwx_zip_entry_1aef79686443d578fd3d76929cd0c1de55" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxZipEntry::GetMode</definition>
        <argsstring>() const</argsstring>
        <name>GetMode</name>
        <briefdescription>
<para>If <ref refid="classwx_zip_entry_1a9553fa7855f956954db923696d3d1201" kindref="member">IsMadeByUnix()</ref> is true then returns the unix permission bits stored in <ref refid="classwx_zip_entry_1a6140ad512132cc86c4903fd8f53be9cc" kindref="member">GetExternalAttributes()</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>Otherwise synthesises them from the DOS attributes. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/zipstrm.h" line="250" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_zip_entry_1aafe0497294d75794f5dfab9ac895a309" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxZipEntry::SetMode</definition>
        <argsstring>(int mode)</argsstring>
        <name>SetMode</name>
        <param>
          <type>int</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Sets the DOS attributes in <ref refid="classwx_zip_entry_1a6140ad512132cc86c4903fd8f53be9cc" kindref="member">GetExternalAttributes()</ref> to be consistent with the <emphasis>mode</emphasis> given. </para>        </briefdescription>
        <detaileddescription>
<para>If <ref refid="classwx_zip_entry_1a9553fa7855f956954db923696d3d1201" kindref="member">IsMadeByUnix()</ref> is true then also stores <emphasis>mode</emphasis> in <ref refid="classwx_zip_entry_1a6140ad512132cc86c4903fd8f53be9cc" kindref="member">GetExternalAttributes()</ref>. Note that the default constructor sets <ref refid="classwx_zip_entry_1ae21da56546b4cc47249b62e41f946fa3" kindref="member">GetSystemMadeBy()</ref> to <computeroutput>wxZIP_SYSTEM_MSDOS</computeroutput> by default. So to be able to store unix permissions when creating zips, call SetSystemMadeBy(wxZIP_SYSTEM_UNIX). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/zipstrm.h" line="261" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classwx_zip_entry_1ae21da56546b4cc47249b62e41f946fa3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxZipEntry::GetSystemMadeBy</definition>
        <argsstring>() const</argsstring>
        <name>GetSystemMadeBy</name>
        <briefdescription>
<para>The originating file-system. </para>        </briefdescription>
        <detaileddescription>
<para>The default constructor sets this to <computeroutput>wxZIP_SYSTEM_MSDOS</computeroutput>. Set it to <computeroutput>wxZIP_SYSTEM_UNIX</computeroutput> in order to be able to store unix permissions using <ref refid="classwx_zip_entry_1aafe0497294d75794f5dfab9ac895a309" kindref="member">SetMode()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/zipstrm.h" line="272" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_zip_entry_1ace658575f86e8d4a6c51b2b6d7f628c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxZipEntry::SetSystemMadeBy</definition>
        <argsstring>(int system)</argsstring>
        <name>SetSystemMadeBy</name>
        <param>
          <type>int</type>
          <declname>system</declname>
        </param>
        <briefdescription>
<para>The originating file-system. </para>        </briefdescription>
        <detaileddescription>
<para>The default constructor sets this to <computeroutput>wxZIP_SYSTEM_MSDOS</computeroutput>. Set it to <computeroutput>wxZIP_SYSTEM_UNIX</computeroutput> in order to be able to store unix permissions using <ref refid="classwx_zip_entry_1aafe0497294d75794f5dfab9ac895a309" kindref="member">SetMode()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/zipstrm.h" line="273" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classwx_zip_entry_1aab5dd8f5bb2d47d2532facd2f1629f25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>wxString wxZipEntry::GetInternalName</definition>
        <argsstring>(const wxString &amp;name, wxPathFormat format=wxPATH_NATIVE, bool *pIsDir=NULL)</argsstring>
        <name>GetInternalName</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="filename_8h_1a0f0d9c04938ef2820d1ff7ed6b97bf00" kindref="member">wxPathFormat</ref></type>
          <declname>format</declname>
          <defval><ref refid="filename_8h_1a0f0d9c04938ef2820d1ff7ed6b97bf00a82373989c22bc22b15025a7900f4324e" kindref="member">wxPATH_NATIVE</ref></defval>
        </param>
        <param>
          <type>bool *</type>
          <declname>pIsDir</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>A static member that translates a filename into the internal format used within the archive. </para>        </briefdescription>
        <detaileddescription>
<para>If the third parameter is provided, the bool pointed to is set to indicate whether the name looks like a directory name (i.e. has a trailing path separator).</para><para><simplesect kind="see"><para><ref refid="overview_archive_1overview_archive_byname" kindref="member">Looking Up an Archive Entry by Name</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/zipstrm.h" line="300" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_zip_entry_1ad8f72d27b65c6d90d3530d08d499b112" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>wxString wxZipEntry::GetInternalName</definition>
        <argsstring>() const</argsstring>
        <name>GetInternalName</name>
        <reimplements refid="classwx_archive_entry_1a53486cf23696bd7b910a652c27af0a38">GetInternalName</reimplements>
        <briefdescription>
<para>Returns the entry&apos;s filename in the internal format used within the archive. </para>        </briefdescription>
        <detaileddescription>
<para>The name can include directory components, i.e. it can be a full path.</para><para>The names of directory entries are returned without any trailing path separator. This gives a canonical name that can be used in comparisons. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/zipstrm.h" line="310" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classwx_zip_entry_1aa0858ba665a18147d6030c734e741658" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxZipEntry::IsText</definition>
        <argsstring>() const</argsstring>
        <name>IsText</name>
        <briefdescription>
<para>Indicates that this entry&apos;s data is text in an 8-bit encoding. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/zipstrm.h" line="322" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_zip_entry_1a289438d747a209f605c5b363a21b3466" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxZipEntry::SetIsText</definition>
        <argsstring>(bool isText=true)</argsstring>
        <name>SetIsText</name>
        <param>
          <type>bool</type>
          <declname>isText</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Indicates that this entry&apos;s data is text in an 8-bit encoding. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/zipstrm.h" line="323" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classwx_zip_entry_1a8f69f8c891a3ae90a0111039ca1feebf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxZipEntry::SetNotifier</definition>
        <argsstring>(wxZipNotifier &amp;notifier)</argsstring>
        <name>SetNotifier</name>
        <param>
          <type><ref refid="classwx_zip_notifier" kindref="compound">wxZipNotifier</ref> &amp;</type>
          <declname>notifier</declname>
        </param>
        <briefdescription>
<para>Sets the notifier (see <ref refid="classwx_zip_notifier" kindref="compound">wxZipNotifier</ref>) for this entry. </para>        </briefdescription>
        <detaileddescription>
<para>Whenever the <ref refid="classwx_zip_input_stream" kindref="compound">wxZipInputStream</ref> updates this entry, it will then invoke the associated notifier&apos;s <ref refid="classwx_zip_notifier_1a083f9f711200b5d94e7bd1a5512b3d4f" kindref="member">wxZipNotifier::OnEntryUpdated()</ref> method.</para><para>Setting a notifier is not usually necessary. It is used to handle certain cases when modifying an zip in a pipeline (i.e. between non-seekable streams).</para><para><simplesect kind="see"><para><ref refid="overview_archive_1overview_archive_noseek" kindref="member">Archives on Non-Seekable Streams</ref>, <ref refid="classwx_zip_notifier" kindref="compound">wxZipNotifier</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/zipstrm.h" line="338" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_zip_entry_1a86eb2049bacf2398b878ff4021c9259f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void wxZipEntry::UnsetNotifier</definition>
        <argsstring>()</argsstring>
        <name>UnsetNotifier</name>
        <reimplements refid="classwx_archive_entry_1aaa3a489d4a7038170318e7384a27941b">UnsetNotifier</reimplements>
        <briefdescription>
<para>Sets the notifier (see <ref refid="classwx_zip_notifier" kindref="compound">wxZipNotifier</ref>) for this entry. </para>        </briefdescription>
        <detaileddescription>
<para>Whenever the <ref refid="classwx_zip_input_stream" kindref="compound">wxZipInputStream</ref> updates this entry, it will then invoke the associated notifier&apos;s <ref refid="classwx_zip_notifier_1a083f9f711200b5d94e7bd1a5512b3d4f" kindref="member">wxZipNotifier::OnEntryUpdated()</ref> method.</para><para>Setting a notifier is not usually necessary. It is used to handle certain cases when modifying an zip in a pipeline (i.e. between non-seekable streams).</para><para><simplesect kind="see"><para><ref refid="overview_archive_1overview_archive_noseek" kindref="member">Archives on Non-Seekable Streams</ref>, <ref refid="classwx_zip_notifier" kindref="compound">wxZipNotifier</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/zipstrm.h" line="339" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_zip_entry_1accd08fe514c52c05f648362d52e89a9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxZipEntry::wxZipEntry</definition>
        <argsstring>(const wxString &amp;name=wxEmptyString, const wxDateTime &amp;dt=Now(), wxFileOffset size=wxInvalidOffset)</argsstring>
        <name>wxZipEntry</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>name</declname>
          <defval><ref refid="interface_2wx_2string_8h_1a9a321d587166a30017b608dd2d234033" kindref="member">wxEmptyString</ref></defval>
        </param>
        <param>
          <type>const <ref refid="classwx_date_time" kindref="compound">wxDateTime</ref> &amp;</type>
          <declname>dt</declname>
          <defval>Now()</defval>
        </param>
        <param>
          <type><ref refid="group__group__funcmacro__file_1ga69d831b3febabc149c67b716c8e22de5" kindref="member">wxFileOffset</ref></type>
          <declname>size</declname>
          <defval><ref refid="group__group__funcmacro__file_1gab184c7199d93541d22ae42e515cbbcb7" kindref="member">wxInvalidOffset</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/zipstrm.h" line="169" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_zip_entry_1add18fffda035c7fea78c89229a2965e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxZipEntry::wxZipEntry</definition>
        <argsstring>(const wxZipEntry &amp;entry)</argsstring>
        <name>wxZipEntry</name>
        <param>
          <type>const <ref refid="classwx_zip_entry" kindref="compound">wxZipEntry</ref> &amp;</type>
          <declname>entry</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/zipstrm.h" line="176" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_zip_entry_1ac8fd2c43f87643a4d6bc7ca0778f4169" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_zip_entry" kindref="compound">wxZipEntry</ref> *</type>
        <definition>wxZipEntry* wxZipEntry::Clone</definition>
        <argsstring>() const</argsstring>
        <name>Clone</name>
        <briefdescription>
<para>Make a copy of this entry. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/zipstrm.h" line="181" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_zip_entry_1a50d273766d9aa9c8cfbd08a6b940ced3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__group__funcmacro__file_1ga69d831b3febabc149c67b716c8e22de5" kindref="member">wxFileOffset</ref></type>
        <definition>wxFileOffset wxZipEntry::GetCompressedSize</definition>
        <argsstring>() const</argsstring>
        <name>GetCompressedSize</name>
        <briefdescription>
<para>The compressed size of this entry in bytes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/zipstrm.h" line="279" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_zip_entry_1ac4cc31a7cad9e59182ca7db33f4b29f4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="defs_8h_1afdb12e5345c3fae4b537e813df9f02a3" kindref="member">wxUint32</ref></type>
        <definition>wxUint32 wxZipEntry::GetCrc</definition>
        <argsstring>() const</argsstring>
        <name>GetCrc</name>
        <briefdescription>
<para>CRC32 for this entry&apos;s data. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/zipstrm.h" line="284" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_zip_entry_1a94cf43b89d206f3a8d5fd41af150c6a9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxZipEntry::GetFlags</definition>
        <argsstring>() const</argsstring>
        <name>GetFlags</name>
        <briefdescription>
<para>Returns a combination of the bits flags in the enumeration <computeroutput>wxZipFlags</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/zipstrm.h" line="289" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_zip_entry_1a9553fa7855f956954db923696d3d1201" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxZipEntry::IsMadeByUnix</definition>
        <argsstring>() const</argsstring>
        <name>IsMadeByUnix</name>
        <briefdescription>
<para>Returns true if <ref refid="classwx_zip_entry_1ae21da56546b4cc47249b62e41f946fa3" kindref="member">GetSystemMadeBy()</ref> is a flavour of unix. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/zipstrm.h" line="316" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_zip_entry_1a4b53e2dd0d079234035d2ca3803cdf2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_zip_entry" kindref="compound">wxZipEntry</ref> &amp;</type>
        <definition>wxZipEntry&amp; wxZipEntry::operator=</definition>
        <argsstring>(const wxZipEntry &amp;entry)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classwx_zip_entry" kindref="compound">wxZipEntry</ref> &amp;</type>
          <declname>entry</declname>
        </param>
        <briefdescription>
<para>Assignment operator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/zipstrm.h" line="345" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Holds the meta-data for an entry in a zip. </para>    </briefdescription>
    <detaileddescription>
<sect1 id="classwx_zip_entry_1zipentry_avail">
<title>Field availability</title>
<para>When reading a zip from a stream that is seekable, wxZipEntry::GetNextEntry() returns a fully populated <ref refid="classwx_zip_entry" kindref="compound">wxZipEntry</ref> object except for <ref refid="classwx_zip_entry_1afb7bd276e12427da3e15a0f844bc1f31" kindref="member">wxZipEntry::GetLocalExtra()</ref>. <ref refid="classwx_zip_entry_1afb7bd276e12427da3e15a0f844bc1f31" kindref="member">wxZipEntry::GetLocalExtra()</ref> becomes available when the entry is opened, either by calling <ref refid="classwx_zip_input_stream_1ac6782d9a7fe5ccac9c3ffa2fb56460cf" kindref="member">wxZipInputStream::OpenEntry()</ref> or by making an attempt to read the entry&apos;s data.</para><para>For zips on non-seekable streams, the following fields are always available when wxZipEntry::GetNextEntry() returns:<itemizedlist>
<listitem><para><ref refid="classwx_archive_entry_1acb1e2dd308429c6afba02ec6d24c43f3" kindref="member">wxZipEntry::GetDateTime</ref></para></listitem><listitem><para><ref refid="classwx_archive_entry_1a3e93b7e12487636f903956935d92c7b2" kindref="member">wxZipEntry::GetInternalFormat</ref></para></listitem><listitem><para><ref refid="classwx_zip_entry_1aab5dd8f5bb2d47d2532facd2f1629f25" kindref="member">wxZipEntry::GetInternalName</ref></para></listitem><listitem><para><ref refid="classwx_zip_entry_1a94cf43b89d206f3a8d5fd41af150c6a9" kindref="member">wxZipEntry::GetFlags</ref></para></listitem><listitem><para><ref refid="classwx_zip_entry_1afb7bd276e12427da3e15a0f844bc1f31" kindref="member">wxZipEntry::GetLocalExtra</ref></para></listitem><listitem><para><ref refid="classwx_zip_entry_1a99a66b769c5014dae4982019f9023518" kindref="member">wxZipEntry::GetMethod</ref></para></listitem><listitem><para><ref refid="classwx_archive_entry_1a7f7c8fc858136626dcdf1865e646cef9" kindref="member">wxZipEntry::GetName</ref></para></listitem><listitem><para><ref refid="classwx_archive_entry_1ab36942e9cbadced7476b4bceb21b7e08" kindref="member">wxZipEntry::GetOffset</ref></para></listitem><listitem><para><ref refid="classwx_archive_entry_1a548d3b6f4aeba699dc0d1ec1c21b7ce2" kindref="member">wxZipEntry::IsDir</ref></para></listitem></itemizedlist>
</para><para>The following fields are also usually available when GetNextEntry() returns, however, if the zip was also written to a non-seekable stream the zipper is permitted to store them after the entry&apos;s data. In that case they become available when the entry&apos;s data has been read to Eof(), or CloseEntry() has been called. (<ref refid="classwx_zip_entry_1a94cf43b89d206f3a8d5fd41af150c6a9" kindref="member">GetFlags()</ref> &amp; wxZIP_SUMS_FOLLOW) != 0 indicates that one or more of these come after the data:<itemizedlist>
<listitem><para><ref refid="classwx_zip_entry_1a50d273766d9aa9c8cfbd08a6b940ced3" kindref="member">wxZipEntry::GetCompressedSize</ref></para></listitem><listitem><para><ref refid="classwx_zip_entry_1ac4cc31a7cad9e59182ca7db33f4b29f4" kindref="member">wxZipEntry::GetCrc</ref></para></listitem><listitem><para><ref refid="classwx_archive_entry_1a05d8c0618a80cb1ada5c37a58042ec32" kindref="member">wxZipEntry::GetSize</ref></para></listitem></itemizedlist>
</para><para>The following are stored at the end of the zip, and become available when the end of the zip has been reached, i.e. after GetNextEntry() returns NULL and Eof() is true:<itemizedlist>
<listitem><para><ref refid="classwx_zip_entry_1abc5090ebe9ee25823e3b189c558fde2e" kindref="member">wxZipEntry::GetComment</ref></para></listitem><listitem><para><ref refid="classwx_zip_entry_1a6140ad512132cc86c4903fd8f53be9cc" kindref="member">wxZipEntry::GetExternalAttributes</ref></para></listitem><listitem><para><ref refid="classwx_zip_entry_1a4d857a30cac3c7817936e5845665ae88" kindref="member">wxZipEntry::GetExtra</ref></para></listitem><listitem><para><ref refid="classwx_zip_entry_1aef79686443d578fd3d76929cd0c1de55" kindref="member">wxZipEntry::GetMode</ref></para></listitem><listitem><para><ref refid="classwx_zip_entry_1ae21da56546b4cc47249b62e41f946fa3" kindref="member">wxZipEntry::GetSystemMadeBy</ref></para></listitem><listitem><para><ref refid="classwx_archive_entry_1abe30c2532550d23136cf6e1390007073" kindref="member">wxZipEntry::IsReadOnly</ref></para></listitem><listitem><para><ref refid="classwx_zip_entry_1a9553fa7855f956954db923696d3d1201" kindref="member">wxZipEntry::IsMadeByUnix</ref></para></listitem><listitem><para><ref refid="classwx_zip_entry_1aa0858ba665a18147d6030c734e741658" kindref="member">wxZipEntry::IsText</ref></para></listitem></itemizedlist>
</para><para><heading level="2"></heading>
</para><para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxbase" kindref="member">wxBase</ref> &lt;&gt;&lt; =&apos;&apos;&gt;:&lt;/&gt;&amp;;&amp;;&lt; =&apos;&apos;&gt;\ , \ &lt;/&gt;&lt;/&gt;</para><para><simplesect kind="see"><para><ref refid="overview_archive" kindref="compound">Archive Formats</ref>, <ref refid="classwx_zip_input_stream" kindref="compound">wxZipInputStream</ref>, <ref refid="classwx_zip_output_stream" kindref="compound">wxZipOutputStream</ref>, <ref refid="classwx_zip_notifier" kindref="compound">wxZipNotifier</ref> </para></simplesect>
</para></sect1>
    </detaileddescription>
    <inheritancegraph>
      <node id="8996">
        <label>wxArchiveEntry</label>
        <link refid="classwx_archive_entry"/>
        <childnode refid="8997" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8997">
        <label>wxObject</label>
        <link refid="classwx_object"/>
      </node>
      <node id="8995">
        <label>wxZipEntry</label>
        <link refid="classwx_zip_entry"/>
        <childnode refid="8996" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="8999">
        <label>wxArchiveEntry</label>
        <link refid="classwx_archive_entry"/>
        <childnode refid="9000" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9000">
        <label>wxObject</label>
        <link refid="classwx_object"/>
        <childnode refid="9001" relation="usage">
          <edgelabel>m_refData</edgelabel>
        </childnode>
      </node>
      <node id="8998">
        <label>wxZipEntry</label>
        <link refid="classwx_zip_entry"/>
        <childnode refid="8999" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9001">
        <label>wxObjectRefData</label>
        <link refid="classwx_object_ref_data"/>
      </node>
    </collaborationgraph>
    <location file="interface/wx/zipstrm.h" line="167" column="1" bodyfile="interface/wx/zipstrm.h" bodystart="166" bodyend="346"/>
    <listofallmembers>
      <member refid="classwx_object_1a60204063f3cc3aa2fa1c7ff5bda9eb13" prot="protected" virt="non-virtual"><scope>wxZipEntry</scope><name>AllocExclusive</name></member>
      <member refid="classwx_zip_entry_1ac8fd2c43f87643a4d6bc7ca0778f4169" prot="public" virt="non-virtual"><scope>wxZipEntry</scope><name>Clone</name></member>
      <member refid="classwx_object_1a436fc8fe68cf8a31000296d9cd3d2427" prot="protected" virt="virtual"><scope>wxZipEntry</scope><name>CloneRefData</name></member>
      <member refid="classwx_object_1a3f4f497c65cef611e121c41f21dd5ccc" prot="protected" virt="virtual"><scope>wxZipEntry</scope><name>CreateRefData</name></member>
      <member refid="classwx_object_1ae6d365f2556b26767ced8410c5e839d0" prot="public" virt="virtual"><scope>wxZipEntry</scope><name>GetClassInfo</name></member>
      <member refid="classwx_zip_entry_1abc5090ebe9ee25823e3b189c558fde2e" prot="public" virt="non-virtual"><scope>wxZipEntry</scope><name>GetComment</name></member>
      <member refid="classwx_zip_entry_1a50d273766d9aa9c8cfbd08a6b940ced3" prot="public" virt="non-virtual"><scope>wxZipEntry</scope><name>GetCompressedSize</name></member>
      <member refid="classwx_zip_entry_1ac4cc31a7cad9e59182ca7db33f4b29f4" prot="public" virt="non-virtual"><scope>wxZipEntry</scope><name>GetCrc</name></member>
      <member refid="classwx_archive_entry_1acb1e2dd308429c6afba02ec6d24c43f3" prot="public" virt="pure-virtual"><scope>wxZipEntry</scope><name>GetDateTime</name></member>
      <member refid="classwx_zip_entry_1a6140ad512132cc86c4903fd8f53be9cc" prot="public" virt="non-virtual"><scope>wxZipEntry</scope><name>GetExternalAttributes</name></member>
      <member refid="classwx_zip_entry_1a4d857a30cac3c7817936e5845665ae88" prot="public" virt="non-virtual"><scope>wxZipEntry</scope><name>GetExtra</name></member>
      <member refid="classwx_zip_entry_1abfe13d8e31641320d99bc1aa2e5d01ab" prot="public" virt="non-virtual"><scope>wxZipEntry</scope><name>GetExtraLen</name></member>
      <member refid="classwx_zip_entry_1a94cf43b89d206f3a8d5fd41af150c6a9" prot="public" virt="non-virtual"><scope>wxZipEntry</scope><name>GetFlags</name></member>
      <member refid="classwx_archive_entry_1a3e93b7e12487636f903956935d92c7b2" prot="public" virt="pure-virtual"><scope>wxZipEntry</scope><name>GetInternalFormat</name></member>
      <member refid="classwx_zip_entry_1aab5dd8f5bb2d47d2532facd2f1629f25" prot="public" virt="non-virtual"><scope>wxZipEntry</scope><name>GetInternalName</name></member>
      <member refid="classwx_zip_entry_1ad8f72d27b65c6d90d3530d08d499b112" prot="public" virt="virtual"><scope>wxZipEntry</scope><name>GetInternalName</name></member>
      <member refid="classwx_zip_entry_1afb7bd276e12427da3e15a0f844bc1f31" prot="public" virt="non-virtual"><scope>wxZipEntry</scope><name>GetLocalExtra</name></member>
      <member refid="classwx_zip_entry_1a25c82a9c3f16b5fc711a367a1d3c4f83" prot="public" virt="non-virtual"><scope>wxZipEntry</scope><name>GetLocalExtraLen</name></member>
      <member refid="classwx_zip_entry_1a99a66b769c5014dae4982019f9023518" prot="public" virt="non-virtual"><scope>wxZipEntry</scope><name>GetMethod</name></member>
      <member refid="classwx_zip_entry_1aef79686443d578fd3d76929cd0c1de55" prot="public" virt="non-virtual"><scope>wxZipEntry</scope><name>GetMode</name></member>
      <member refid="classwx_archive_entry_1a7f7c8fc858136626dcdf1865e646cef9" prot="public" virt="pure-virtual"><scope>wxZipEntry</scope><name>GetName</name></member>
      <member refid="classwx_archive_entry_1ab36942e9cbadced7476b4bceb21b7e08" prot="public" virt="pure-virtual"><scope>wxZipEntry</scope><name>GetOffset</name></member>
      <member refid="classwx_object_1af3c6c76a775864832f1536d3c0de3a2b" prot="public" virt="non-virtual"><scope>wxZipEntry</scope><name>GetRefData</name></member>
      <member refid="classwx_archive_entry_1a05d8c0618a80cb1ada5c37a58042ec32" prot="public" virt="pure-virtual"><scope>wxZipEntry</scope><name>GetSize</name></member>
      <member refid="classwx_zip_entry_1ae21da56546b4cc47249b62e41f946fa3" prot="public" virt="non-virtual"><scope>wxZipEntry</scope><name>GetSystemMadeBy</name></member>
      <member refid="classwx_archive_entry_1a548d3b6f4aeba699dc0d1ec1c21b7ce2" prot="public" virt="pure-virtual"><scope>wxZipEntry</scope><name>IsDir</name></member>
      <member refid="classwx_object_1a3c7115ef4132dcee0c4fc34e84d7fced" prot="public" virt="non-virtual"><scope>wxZipEntry</scope><name>IsKindOf</name></member>
      <member refid="classwx_zip_entry_1a9553fa7855f956954db923696d3d1201" prot="public" virt="non-virtual"><scope>wxZipEntry</scope><name>IsMadeByUnix</name></member>
      <member refid="classwx_archive_entry_1abe30c2532550d23136cf6e1390007073" prot="public" virt="pure-virtual"><scope>wxZipEntry</scope><name>IsReadOnly</name></member>
      <member refid="classwx_object_1a059373c494c2369d7db2a556efef8ecf" prot="public" virt="non-virtual"><scope>wxZipEntry</scope><name>IsSameAs</name></member>
      <member refid="classwx_zip_entry_1aa0858ba665a18147d6030c734e741658" prot="public" virt="non-virtual"><scope>wxZipEntry</scope><name>IsText</name></member>
      <member refid="classwx_object_1a9e31954530a0abd54982effc443ed2b8" prot="protected" virt="non-virtual"><scope>wxZipEntry</scope><name>m_refData</name></member>
      <member refid="classwx_object_1a07b8f34f5afc5743195c5fed052f55d3" prot="public" virt="non-virtual"><scope>wxZipEntry</scope><name>operator delete</name></member>
      <member refid="classwx_object_1a96fa423a1dbc212c8227a5d83825971f" prot="public" virt="non-virtual"><scope>wxZipEntry</scope><name>operator new</name></member>
      <member refid="classwx_zip_entry_1a4b53e2dd0d079234035d2ca3803cdf2a" prot="public" virt="non-virtual"><scope>wxZipEntry</scope><name>operator=</name></member>
      <member refid="classwx_object_1a2f6f1aa51fe9fc2b1415ca4211a90e9e" prot="public" virt="non-virtual"><scope>wxZipEntry</scope><name>Ref</name></member>
      <member refid="classwx_zip_entry_1abffa0697f9350ceaeec1d8ab1f2a7667" prot="public" virt="non-virtual"><scope>wxZipEntry</scope><name>SetComment</name></member>
      <member refid="classwx_archive_entry_1a2de48b81c6513c2884b35d606d9b1ffa" prot="public" virt="pure-virtual"><scope>wxZipEntry</scope><name>SetDateTime</name></member>
      <member refid="classwx_zip_entry_1ad7a93f88746b23a506a36c1f623607da" prot="public" virt="non-virtual"><scope>wxZipEntry</scope><name>SetExternalAttributes</name></member>
      <member refid="classwx_zip_entry_1adb77972b55bd00416fc4fd891f580f61" prot="public" virt="non-virtual"><scope>wxZipEntry</scope><name>SetExtra</name></member>
      <member refid="classwx_archive_entry_1ab01182fe22c8eeefa05740e68d12ced0" prot="public" virt="pure-virtual"><scope>wxZipEntry</scope><name>SetIsDir</name></member>
      <member refid="classwx_archive_entry_1a0ed675785f6d0ddaf36664951f4430b6" prot="public" virt="pure-virtual"><scope>wxZipEntry</scope><name>SetIsReadOnly</name></member>
      <member refid="classwx_zip_entry_1a289438d747a209f605c5b363a21b3466" prot="public" virt="non-virtual"><scope>wxZipEntry</scope><name>SetIsText</name></member>
      <member refid="classwx_zip_entry_1afd66a8fef1bb88a9e4041e9c381f14d1" prot="public" virt="non-virtual"><scope>wxZipEntry</scope><name>SetLocalExtra</name></member>
      <member refid="classwx_zip_entry_1a2a99240b415c3f3f6f8bd367f051e8b8" prot="public" virt="non-virtual"><scope>wxZipEntry</scope><name>SetMethod</name></member>
      <member refid="classwx_zip_entry_1aafe0497294d75794f5dfab9ac895a309" prot="public" virt="non-virtual"><scope>wxZipEntry</scope><name>SetMode</name></member>
      <member refid="classwx_archive_entry_1afd7cfa9a05e971ee0355bafbeff8c93d" prot="public" virt="pure-virtual"><scope>wxZipEntry</scope><name>SetName</name></member>
      <member refid="classwx_zip_entry_1a8f69f8c891a3ae90a0111039ca1feebf" prot="public" virt="non-virtual"><scope>wxZipEntry</scope><name>SetNotifier</name></member>
      <member refid="classwx_archive_entry_1a14fe1a270dbb1d0e9a76e2c3c8dd32a8" prot="public" virt="non-virtual" ambiguityscope="wxArchiveEntry::"><scope>wxZipEntry</scope><name>SetNotifier</name></member>
      <member refid="classwx_object_1afab780710f2adc1bb33310e27590140b" prot="public" virt="non-virtual"><scope>wxZipEntry</scope><name>SetRefData</name></member>
      <member refid="classwx_archive_entry_1ac5f34334ab1895a923354bd4da755364" prot="public" virt="pure-virtual"><scope>wxZipEntry</scope><name>SetSize</name></member>
      <member refid="classwx_zip_entry_1ace658575f86e8d4a6c51b2b6d7f628c6" prot="public" virt="non-virtual"><scope>wxZipEntry</scope><name>SetSystemMadeBy</name></member>
      <member refid="classwx_object_1af51efc6b1ae632fc7f0cd7ebbce9fa36" prot="public" virt="non-virtual"><scope>wxZipEntry</scope><name>UnRef</name></member>
      <member refid="classwx_zip_entry_1a86eb2049bacf2398b878ff4021c9259f" prot="public" virt="virtual"><scope>wxZipEntry</scope><name>UnsetNotifier</name></member>
      <member refid="classwx_object_1a74b40e42d19a4b9e9bec0b57d62a5725" prot="public" virt="non-virtual"><scope>wxZipEntry</scope><name>UnShare</name></member>
      <member refid="classwx_object_1acaa378363a28af421ab56ad7b46eadf0" prot="public" virt="non-virtual"><scope>wxZipEntry</scope><name>wxObject</name></member>
      <member refid="classwx_object_1a4721b4dc9b7aff0f30904ba2ea3954cf" prot="public" virt="non-virtual"><scope>wxZipEntry</scope><name>wxObject</name></member>
      <member refid="classwx_zip_entry_1accd08fe514c52c05f648362d52e89a9e" prot="public" virt="non-virtual"><scope>wxZipEntry</scope><name>wxZipEntry</name></member>
      <member refid="classwx_zip_entry_1add18fffda035c7fea78c89229a2965e2" prot="public" virt="non-virtual"><scope>wxZipEntry</scope><name>wxZipEntry</name></member>
      <member refid="classwx_object_1a2a51aa8bfbab47ca2f051bcf84b3f35b" prot="public" virt="virtual"><scope>wxZipEntry</scope><name>~wxObject</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
