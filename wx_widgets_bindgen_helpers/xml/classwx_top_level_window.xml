<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classwx_top_level_window" kind="class" language="C++" prot="public">
    <compoundname>wxTopLevelWindow</compoundname>
    <basecompoundref refid="classwx_non_owned_window" prot="public" virt="non-virtual">wxNonOwnedWindow</basecompoundref>
    <derivedcompoundref refid="classwx_dialog" prot="public" virt="non-virtual">wxDialog</derivedcompoundref>
    <derivedcompoundref refid="classwx_frame" prot="public" virt="non-virtual">wxFrame</derivedcompoundref>
    <includes local="no">wx/toplevel.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_top_level_window_1abb919ad585057de6fce94bb7d5497256" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxTopLevelWindow::wxTopLevelWindow</definition>
        <argsstring>()</argsstring>
        <name>wxTopLevelWindow</name>
        <briefdescription>
<para>Default ctor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/toplevel.h" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_top_level_window_1abddbaa0d42b46847b679464b485654be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxTopLevelWindow::wxTopLevelWindow</definition>
        <argsstring>(wxWindow *parent, wxWindowID id, const wxString &amp;title, const wxPoint &amp;pos=wxDefaultPosition, const wxSize &amp;size=wxDefaultSize, long style=wxDEFAULT_FRAME_STYLE, const wxString &amp;name=wxFrameNameStr)</argsstring>
        <name>wxTopLevelWindow</name>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>parent</declname>
        </param>
        <param>
          <type><ref refid="windowid_8h_1ae8091432cc2cb2485d45f2302fb51133" kindref="member">wxWindowID</ref></type>
          <declname>id</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>title</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_point" kindref="compound">wxPoint</ref> &amp;</type>
          <declname>pos</declname>
          <defval><ref refid="gdicmn_8h_1af5a90c753eaf3d3e3e5068a19ec3c1d0" kindref="member">wxDefaultPosition</ref></defval>
        </param>
        <param>
          <type>const <ref refid="classwx_size" kindref="compound">wxSize</ref> &amp;</type>
          <declname>size</declname>
          <defval><ref refid="gdicmn_8h_1a33a012cdb075e9f78c93f63bec2dc27b" kindref="member">wxDefaultSize</ref></defval>
        </param>
        <param>
          <type>long</type>
          <declname>style</declname>
          <defval><ref refid="toplevel_8h_1ab3ad2777e5178344fa798ec8fd8e95e2" kindref="member">wxDEFAULT_FRAME_STYLE</ref></defval>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>name</declname>
          <defval>wxFrameNameStr</defval>
        </param>
        <briefdescription>
<para>Constructor creating the top level window. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/toplevel.h" line="89" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_top_level_window_1a643df4d651b5394b8a674067aef4dd04" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual wxTopLevelWindow::~wxTopLevelWindow</definition>
        <argsstring>()</argsstring>
        <name>~wxTopLevelWindow</name>
        <briefdescription>
<para>Destructor. </para>        </briefdescription>
        <detaileddescription>
<para>Remember that wxTopLevelWindows do not get immediately destroyed when the user (or the app) closes them; they have a <bold>delayed</bold> destruction.</para><para>See <ref refid="overview_windowdeletion" kindref="compound">Window Deletion</ref> for more info. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/toplevel.h" line="104" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_top_level_window_1a3a03f383ee3a98f62b3419463f27f346" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTopLevelWindow::Create</definition>
        <argsstring>(wxWindow *parent, wxWindowID id, const wxString &amp;title, const wxPoint &amp;pos=wxDefaultPosition, const wxSize &amp;size=wxDefaultSize, long style=wxDEFAULT_FRAME_STYLE, const wxString &amp;name=wxFrameNameStr)</argsstring>
        <name>Create</name>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>parent</declname>
        </param>
        <param>
          <type><ref refid="windowid_8h_1ae8091432cc2cb2485d45f2302fb51133" kindref="member">wxWindowID</ref></type>
          <declname>id</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>title</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_point" kindref="compound">wxPoint</ref> &amp;</type>
          <declname>pos</declname>
          <defval><ref refid="gdicmn_8h_1af5a90c753eaf3d3e3e5068a19ec3c1d0" kindref="member">wxDefaultPosition</ref></defval>
        </param>
        <param>
          <type>const <ref refid="classwx_size" kindref="compound">wxSize</ref> &amp;</type>
          <declname>size</declname>
          <defval><ref refid="gdicmn_8h_1a33a012cdb075e9f78c93f63bec2dc27b" kindref="member">wxDefaultSize</ref></defval>
        </param>
        <param>
          <type>long</type>
          <declname>style</declname>
          <defval><ref refid="toplevel_8h_1ab3ad2777e5178344fa798ec8fd8e95e2" kindref="member">wxDEFAULT_FRAME_STYLE</ref></defval>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>name</declname>
          <defval>wxFrameNameStr</defval>
        </param>
        <briefdescription>
<para>Creates the top level window. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/toplevel.h" line="109" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_top_level_window_1a392cf325512c5558d776ca85abc0c451" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxTopLevelWindow::CanSetTransparent</definition>
        <argsstring>()</argsstring>
        <name>CanSetTransparent</name>
        <reimplements refid="classwx_window_1a64f7f6fb75bf4b7281e1d33542d523c7">CanSetTransparent</reimplements>
        <briefdescription>
<para>Returns true if the platform supports making the window translucent. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classwx_top_level_window_1a8e37aff45a001a83ff49745298a6978e" kindref="member">SetTransparent()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/toplevel.h" line="122" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_top_level_window_1adaaa8f83cde59e1c4c563c058b381ac4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTopLevelWindow::CenterOnScreen</definition>
        <argsstring>(int direction=wxBOTH)</argsstring>
        <name>CenterOnScreen</name>
        <param>
          <type>int</type>
          <declname>direction</declname>
          <defval><ref refid="defs_8h_1a1e6994f40bd9cb140e292afb165af971a31055fdab980125bf5a575f776066097" kindref="member">wxBOTH</ref></defval>
        </param>
        <briefdescription>
<para>A synonym for <ref refid="classwx_top_level_window_1a1d28df1d739af6a3d5d2ec9e43b03c29" kindref="member">CentreOnScreen()</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/toplevel.h" line="127" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_top_level_window_1a1d28df1d739af6a3d5d2ec9e43b03c29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTopLevelWindow::CentreOnScreen</definition>
        <argsstring>(int direction=wxBOTH)</argsstring>
        <name>CentreOnScreen</name>
        <param>
          <type>int</type>
          <declname>direction</declname>
          <defval><ref refid="defs_8h_1a1e6994f40bd9cb140e292afb165af971a31055fdab980125bf5a575f776066097" kindref="member">wxBOTH</ref></defval>
        </param>
        <briefdescription>
<para>Centres the window on screen. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>direction</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the direction for the centering. May be <computeroutput>wxHORIZONTAL</computeroutput>, <computeroutput>wxVERTICAL</computeroutput> or <computeroutput>wxBOTH</computeroutput>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classwx_window_1ab8e9b91b0e2db344fd71259616dfd433" kindref="member">wxWindow::CentreOnParent()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/toplevel.h" line="138" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_top_level_window_1a78a9441746702894fba7653c2d98cb8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxTopLevelWindow::EnableCloseButton</definition>
        <argsstring>(bool enable=true)</argsstring>
        <name>EnableCloseButton</name>
        <param>
          <type>bool</type>
          <declname>enable</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Enables or disables the Close button (most often in the right upper corner of a dialog) and the Close entry of the system menu (most often in the left upper corner of the dialog). </para>        </briefdescription>
        <detaileddescription>
<para>Currently only implemented for wxMSW and wxGTK.</para><para>Returns true if operation was successful. This may be wrong on X11 (including GTK+) where the window manager may not support this operation and there is no way to find out. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/toplevel.h" line="151" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_top_level_window_1ab43efb27fc3c7e17467ec4d0f9ba8756" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
        <definition>wxWindow* wxTopLevelWindow::GetDefaultItem</definition>
        <argsstring>() const</argsstring>
        <name>GetDefaultItem</name>
        <briefdescription>
<para>Returns a pointer to the button which is the default for this window, or <computeroutput></computeroutput> NULL. </para>        </briefdescription>
        <detaileddescription>
<para>The default button is the one activated by pressing the Enter key. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/toplevel.h" line="158" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_top_level_window_1a9e922563d44423c2cb4097326358caf0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_icon" kindref="compound">wxIcon</ref></type>
        <definition>wxIcon wxTopLevelWindow::GetIcon</definition>
        <argsstring>() const</argsstring>
        <name>GetIcon</name>
        <briefdescription>
<para>Returns the standard icon of the window. </para>        </briefdescription>
        <detaileddescription>
<para>The icon will be invalid if it hadn&apos;t been previously set by <ref refid="classwx_top_level_window_1a33dc013a7cb33384f631b2764ca53b06" kindref="member">SetIcon()</ref>.</para><para><simplesect kind="see"><para><ref refid="classwx_top_level_window_1a8d69fdfb3cc8341b425b65f19b466824" kindref="member">GetIcons()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/toplevel.h" line="179" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_top_level_window_1a8d69fdfb3cc8341b425b65f19b466824" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classwx_icon_bundle" kindref="compound">wxIconBundle</ref> &amp;</type>
        <definition>const wxIconBundle&amp; wxTopLevelWindow::GetIcons</definition>
        <argsstring>() const</argsstring>
        <name>GetIcons</name>
        <briefdescription>
<para>Returns all icons associated with the window, there will be none of them if neither <ref refid="classwx_top_level_window_1a33dc013a7cb33384f631b2764ca53b06" kindref="member">SetIcon()</ref> nor <ref refid="classwx_top_level_window_1a34270084ea5a46c12309abbb99f2004c" kindref="member">SetIcons()</ref> had been called before. </para>        </briefdescription>
        <detaileddescription>
<para>Use <ref refid="classwx_top_level_window_1a9e922563d44423c2cb4097326358caf0" kindref="member">GetIcon()</ref> to get the main icon of the window.</para><para><simplesect kind="see"><para><ref refid="classwx_icon_bundle" kindref="compound">wxIconBundle</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/toplevel.h" line="188" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_top_level_window_1ab6ac6ef93ded0703c105332861ebe6f5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>virtual wxString wxTopLevelWindow::GetTitle</definition>
        <argsstring>() const</argsstring>
        <name>GetTitle</name>
        <briefdescription>
<para>Gets a string containing the window title. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classwx_top_level_window_1afb944376c19d735a8251654ee4ac276f" kindref="member">SetTitle()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/toplevel.h" line="195" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_top_level_window_1ac804159a17302c7e805d70ff4911318c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxTopLevelWindow::HandleSettingChange</definition>
        <argsstring>(WXWPARAM wParam, WXLPARAM lParam)</argsstring>
        <name>HandleSettingChange</name>
        <param>
          <type>WXWPARAM</type>
          <declname>wParam</declname>
        </param>
        <param>
          <type>WXLPARAM</type>
          <declname>lParam</declname>
        </param>
        <briefdescription>
<para>Unique to the wxWinCE port. </para>        </briefdescription>
        <detaileddescription>
<para>Responds to showing/hiding SIP (soft input panel) area and resize window accordingly. Override this if you want to avoid resizing or do additional operations. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/toplevel.h" line="202" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_top_level_window_1ae461559192e33ef111c3f147999a26bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxTopLevelWindow::Iconize</definition>
        <argsstring>(bool iconize=true)</argsstring>
        <name>Iconize</name>
        <reimplementedby refid="classwx_dialog_1afbc8650246551e62a37bf9667c05fc68">Iconize</reimplementedby>
        <param>
          <type>bool</type>
          <declname>iconize</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Iconizes or restores the window. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iconize</parametername>
</parameternamelist>
<parameterdescription>
<para>If true, iconizes the window; if false, shows and restores it.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classwx_top_level_window_1a558559389a38bbba4333c4d6d56840aa" kindref="member">IsIconized()</ref>, <ref refid="classwx_top_level_window_1addb1612e9f00ac82c2e19c2bac6ffc4f" kindref="member">Maximize()</ref>, <ref refid="classwx_iconize_event" kindref="compound">wxIconizeEvent</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/toplevel.h" line="213" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_top_level_window_1afa58f411cf488eb9279683b1d20a74b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxTopLevelWindow::IsActive</definition>
        <argsstring>()</argsstring>
        <name>IsActive</name>
        <briefdescription>
<para>Returns true if this window is currently active, i.e. if the user is currently working with it. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/toplevel.h" line="219" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_top_level_window_1a84a05afb2ce3ff0f56c9b16c9a656d3e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxTopLevelWindow::IsAlwaysMaximized</definition>
        <argsstring>() const</argsstring>
        <name>IsAlwaysMaximized</name>
        <reimplementedby refid="classwx_m_d_i_child_frame_1abfc3ea6472694eb9b70869c6e83daa6e">IsAlwaysMaximized</reimplementedby>
        <briefdescription>
<para>Returns true if this window is expected to be always maximized, either due to platform policy or due to local policy regarding particular class. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/toplevel.h" line="226" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_top_level_window_1a865e3244aca58679dab610df06c90f02" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxTopLevelWindow::IsFullScreen</definition>
        <argsstring>() const</argsstring>
        <name>IsFullScreen</name>
        <briefdescription>
<para>Returns true if the window is in fullscreen mode. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classwx_top_level_window_1ab4089f1274bcb74e5f7763d1fb84ee28" kindref="member">ShowFullScreen()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/toplevel.h" line="233" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_top_level_window_1a558559389a38bbba4333c4d6d56840aa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxTopLevelWindow::IsIconized</definition>
        <argsstring>() const</argsstring>
        <name>IsIconized</name>
        <reimplementedby refid="classwx_dialog_1a0a59a3db139410d240cd4cf453a07d3c">IsIconized</reimplementedby>
        <briefdescription>
<para>Returns true if the window is iconized. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/toplevel.h" line="238" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_top_level_window_1a20143d255165f6780d20f6611b67057e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxTopLevelWindow::IsMaximized</definition>
        <argsstring>() const</argsstring>
        <name>IsMaximized</name>
        <briefdescription>
<para>Returns true if the window is maximized. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/toplevel.h" line="243" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_top_level_window_1a8150d86da624002dd83779a51d993b64" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTopLevelWindow::IsUsingNativeDecorations</definition>
        <argsstring>() const</argsstring>
        <name>IsUsingNativeDecorations</name>
        <briefdescription>
<para>This method is specific to wxUniversal port. </para>        </briefdescription>
        <detaileddescription>
<para>Returns true if this window is using native decorations, false if we draw them ourselves.</para><para><simplesect kind="see"><para><ref refid="classwx_top_level_window_1a4d13f215c9b4fbad26fced00eff20d90" kindref="member">UseNativeDecorations()</ref>, <ref refid="classwx_top_level_window_1afd809e099fdd7cef3d9892167a477531" kindref="member">UseNativeDecorationsByDefault()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/toplevel.h" line="254" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_top_level_window_1adfe7e3f4a32f3ed178968f64431bbfe0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxTopLevelWindow::Layout</definition>
        <argsstring>()</argsstring>
        <name>Layout</name>
        <reimplements refid="classwx_window_1a1b143c3e72bd0af533b76db4830a6113">Layout</reimplements>
        <briefdescription>
<para>See <ref refid="classwx_window_1ad369fe1db5c20f9d9edff7b5eb1f7226" kindref="member">wxWindow::SetAutoLayout()</ref>: when auto layout is on, this function gets called automatically when the window is resized. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/toplevel.h" line="260" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_top_level_window_1addb1612e9f00ac82c2e19c2bac6ffc4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxTopLevelWindow::Maximize</definition>
        <argsstring>(bool maximize=true)</argsstring>
        <name>Maximize</name>
        <reimplementedby refid="classwx_m_d_i_child_frame_1a050f0818cb669338ad74b189b77e9b20">Maximize</reimplementedby>
        <param>
          <type>bool</type>
          <declname>maximize</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Maximizes or restores the window. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>maximize</parametername>
</parameternamelist>
<parameterdescription>
<para>If true, maximizes the window, otherwise it restores it.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classwx_top_level_window_1ae461559192e33ef111c3f147999a26bf" kindref="member">Iconize()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/toplevel.h" line="270" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_top_level_window_1aacf2bce5390aa1b3ade837e95a636ae0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_menu" kindref="compound">wxMenu</ref> *</type>
        <definition>wxMenu* wxTopLevelWindow::MSWGetSystemMenu</definition>
        <argsstring>() const</argsstring>
        <name>MSWGetSystemMenu</name>
        <briefdescription>
<para>MSW-specific function for accessing the system menu. </para>        </briefdescription>
        <detaileddescription>
<para>Returns a <ref refid="classwx_menu" kindref="compound">wxMenu</ref> pointer representing the system menu of the window under MSW. The returned <ref refid="classwx_menu" kindref="compound">wxMenu</ref> may be used, if non-<computeroutput>NULL</computeroutput>, to add extra items to the system menu. The usual <computeroutput>wxEVT_MENU</computeroutput> events (that can be processed using <computeroutput>EVT_MENU</computeroutput> event table macro) will then be generated for them. All the other <ref refid="classwx_menu" kindref="compound">wxMenu</ref> methods may be used as well but notice that they won&apos;t allow you to access any standard system menu items (e.g. they can&apos;t be deleted or modified in any way currently).</para><para>Notice that because of the native system limitations the identifiers of the items added to the system menu must be multiples of 16, otherwise no events will be generated for them.</para><para>The returned pointer must <emphasis>not</emphasis> be deleted, it is owned by the window and will be only deleted when the window itself is destroyed.</para><para>This function is not available in the other ports by design, any occurrences of it in the portable code must be guarded by <programlisting><codeline><highlight class="normal">#ifdef<sp/>__WXMSW__<sp/></highlight></codeline>
</programlisting> preprocessor guards.</para><para><simplesect kind="since"><para>2.9.3 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/toplevel.h" line="297" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_top_level_window_1a749d23ea08f6273fb93fe2c003b650b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxTopLevelWindow::RequestUserAttention</definition>
        <argsstring>(int flags=wxUSER_ATTENTION_INFO)</argsstring>
        <name>RequestUserAttention</name>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval><ref refid="toplevel_8h_1afccd240f973cf154952fb917c9209719a8108db1470990d8ff6bf08c195f11c4f" kindref="member">wxUSER_ATTENTION_INFO</ref></defval>
        </param>
        <briefdescription>
<para>Use a system-dependent way to attract users attention to the window when it is in background. </para>        </briefdescription>
        <detaileddescription>
<para><emphasis>flags</emphasis> may have the value of either <computeroutput><ref refid="toplevel_8h_1afccd240f973cf154952fb917c9209719a8108db1470990d8ff6bf08c195f11c4f" kindref="member">wxUSER_ATTENTION_INFO</ref></computeroutput> (default) or <computeroutput><ref refid="toplevel_8h_1afccd240f973cf154952fb917c9209719ab5eb31d93125653334ffbe901c1a2135" kindref="member">wxUSER_ATTENTION_ERROR</ref></computeroutput> which results in a more drastic action. When in doubt, use the default value.</para><para><simplesect kind="note"><para>This function should normally be only used when the application is not already in foreground.</para></simplesect>
This function is currently implemented for Win32 where it flashes the window icon in the taskbar, and for wxGTK with task bars supporting it. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/toplevel.h" line="316" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_top_level_window_1a21e2d58a530c431c26ff098e4f75f249" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTopLevelWindow::Restore</definition>
        <argsstring>()</argsstring>
        <name>Restore</name>
        <briefdescription>
<para>Restore a previously iconized or maximized window to its normal state. </para>        </briefdescription>
        <detaileddescription>
<para>In wxGTK this method currently doesn&apos;t return the maximized window to its normal state and you must use <ref refid="classwx_top_level_window_1addb1612e9f00ac82c2e19c2bac6ffc4f" kindref="member">Maximize()</ref> with false argument explicitly for this. In the other ports, it both unmaximizes the maximized windows and uniconizes the iconized ones.</para><para><simplesect kind="see"><para><ref refid="classwx_top_level_window_1ae461559192e33ef111c3f147999a26bf" kindref="member">Iconize()</ref>, <ref refid="classwx_top_level_window_1addb1612e9f00ac82c2e19c2bac6ffc4f" kindref="member">Maximize()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/toplevel.h" line="328" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_top_level_window_1ae27318a65876ca787c0483c960bdbb01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
        <definition>wxWindow* wxTopLevelWindow::SetDefaultItem</definition>
        <argsstring>(wxWindow *win)</argsstring>
        <name>SetDefaultItem</name>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>win</declname>
        </param>
        <briefdescription>
<para>Changes the default item for the panel, usually <emphasis>win</emphasis> is a button. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classwx_top_level_window_1ab43efb27fc3c7e17467ec4d0f9ba8756" kindref="member">GetDefaultItem()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/toplevel.h" line="335" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_top_level_window_1a03d21174f2a9a527d6483c7562339167" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
        <definition>wxWindow* wxTopLevelWindow::SetTmpDefaultItem</definition>
        <argsstring>(wxWindow *win)</argsstring>
        <name>SetTmpDefaultItem</name>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>win</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/toplevel.h" line="338" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_top_level_window_1a174be1af9accfdbbfa32bff400e56127" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
        <definition>wxWindow* wxTopLevelWindow::GetTmpDefaultItem</definition>
        <argsstring>() const</argsstring>
        <name>GetTmpDefaultItem</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/toplevel.h" line="339" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_top_level_window_1a33dc013a7cb33384f631b2764ca53b06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTopLevelWindow::SetIcon</definition>
        <argsstring>(const wxIcon &amp;icon)</argsstring>
        <name>SetIcon</name>
        <param>
          <type>const <ref refid="classwx_icon" kindref="compound">wxIcon</ref> &amp;</type>
          <declname>icon</declname>
        </param>
        <briefdescription>
<para>Sets the icon for this window. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>icon</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classwx_icon" kindref="compound">wxIcon</ref> to associate with this window.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="remark"><para>The window takes a &apos;copy&apos; of <emphasis>icon</emphasis>, but since it uses reference counting, the copy is very quick. It is safe to delete <emphasis>icon</emphasis> after calling this function.</para></simplesect>
<simplesect kind="note"><para>In wxMSW, <emphasis>icon</emphasis> must be either 16x16 or 32x32 icon.</para></simplesect>
<simplesect kind="see"><para><ref refid="classwx_icon" kindref="compound">wxIcon</ref>, <ref refid="classwx_top_level_window_1a34270084ea5a46c12309abbb99f2004c" kindref="member">SetIcons()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/toplevel.h" line="356" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_top_level_window_1a34270084ea5a46c12309abbb99f2004c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxTopLevelWindow::SetIcons</definition>
        <argsstring>(const wxIconBundle &amp;icons)</argsstring>
        <name>SetIcons</name>
        <reimplementedby refid="classwx_dialog_1a25159a919f632d6b2d15f19a1bfbe639">SetIcons</reimplementedby>
        <param>
          <type>const <ref refid="classwx_icon_bundle" kindref="compound">wxIconBundle</ref> &amp;</type>
          <declname>icons</declname>
        </param>
        <briefdescription>
<para>Sets several icons of different sizes for this window: this allows to use different icons for different situations (e.g. </para>        </briefdescription>
        <detaileddescription>
<para>task switching bar, taskbar, window title bar) instead of scaling, with possibly bad looking results, the only icon set by <ref refid="classwx_top_level_window_1a33dc013a7cb33384f631b2764ca53b06" kindref="member">SetIcon()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>icons</parametername>
</parameternamelist>
<parameterdescription>
<para>The icons to associate with this window.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>In wxMSW, <emphasis>icons</emphasis> must contain a 16x16 or 32x32 icon, preferably both.</para></simplesect>
<simplesect kind="see"><para><ref refid="classwx_icon_bundle" kindref="compound">wxIconBundle</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/toplevel.h" line="372" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_top_level_window_1a198cff4212ff5342c0c4358b59274fd5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTopLevelWindow::SetLeftMenu</definition>
        <argsstring>(int id=wxID_ANY, const wxString &amp;label=wxEmptyString, wxMenu *subMenu=NULL)</argsstring>
        <name>SetLeftMenu</name>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval><ref refid="defs_8h_1ac66d0a09761e7d86b2ac0b2e0c6a8cbba1f375b01ea03a713bbb7e32a36a2589c" kindref="member">wxID_ANY</ref></defval>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>label</declname>
          <defval><ref refid="interface_2wx_2string_8h_1a9a321d587166a30017b608dd2d234033" kindref="member">wxEmptyString</ref></defval>
        </param>
        <param>
          <type><ref refid="classwx_menu" kindref="compound">wxMenu</ref> *</type>
          <declname>subMenu</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Sets action or menu activated by pressing left hardware button on the smart phones. </para>        </briefdescription>
        <detaileddescription>
<para>Unavailable on full keyboard machines.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>Identifier for this button. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>label</parametername>
</parameternamelist>
<parameterdescription>
<para>Text to be displayed on the screen area dedicated to this hardware button. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>subMenu</parametername>
</parameternamelist>
<parameterdescription>
<para>The menu to be opened after pressing this hardware button.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classwx_top_level_window_1a98e95b1b10f44b80f9b29a03ab09a879" kindref="member">SetRightMenu()</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/toplevel.h" line="388" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_top_level_window_1afd6d2cccfe0ba0ff91e36f4d16cf3c7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxTopLevelWindow::SetMaxSize</definition>
        <argsstring>(const wxSize &amp;size)</argsstring>
        <name>SetMaxSize</name>
        <reimplements refid="classwx_window_1a38b496214d728a3212afadee5ed51606">SetMaxSize</reimplements>
        <param>
          <type>const <ref refid="classwx_size" kindref="compound">wxSize</ref> &amp;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>A simpler interface for setting the size hints than <ref refid="classwx_top_level_window_1ac01a45e5d82e4e3be22a4841c1217e11" kindref="member">SetSizeHints()</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/toplevel.h" line="395" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_top_level_window_1ac491313979c027b67526786b06167e6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxTopLevelWindow::SetMinSize</definition>
        <argsstring>(const wxSize &amp;size)</argsstring>
        <name>SetMinSize</name>
        <reimplements refid="classwx_window_1a3fc066f4d8083319f004ac43811d545d">SetMinSize</reimplements>
        <param>
          <type>const <ref refid="classwx_size" kindref="compound">wxSize</ref> &amp;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>A simpler interface for setting the size hints than <ref refid="classwx_top_level_window_1ac01a45e5d82e4e3be22a4841c1217e11" kindref="member">SetSizeHints()</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/toplevel.h" line="400" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_top_level_window_1a98e95b1b10f44b80f9b29a03ab09a879" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTopLevelWindow::SetRightMenu</definition>
        <argsstring>(int id=wxID_ANY, const wxString &amp;label=wxEmptyString, wxMenu *subMenu=NULL)</argsstring>
        <name>SetRightMenu</name>
        <param>
          <type>int</type>
          <declname>id</declname>
          <defval><ref refid="defs_8h_1ac66d0a09761e7d86b2ac0b2e0c6a8cbba1f375b01ea03a713bbb7e32a36a2589c" kindref="member">wxID_ANY</ref></defval>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>label</declname>
          <defval><ref refid="interface_2wx_2string_8h_1a9a321d587166a30017b608dd2d234033" kindref="member">wxEmptyString</ref></defval>
        </param>
        <param>
          <type><ref refid="classwx_menu" kindref="compound">wxMenu</ref> *</type>
          <declname>subMenu</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Sets action or menu activated by pressing right hardware button on the smart phones. </para>        </briefdescription>
        <detaileddescription>
<para>Unavailable on full keyboard machines.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>Identifier for this button. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>label</parametername>
</parameternamelist>
<parameterdescription>
<para>Text to be displayed on the screen area dedicated to this hardware button. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>subMenu</parametername>
</parameternamelist>
<parameterdescription>
<para>The menu to be opened after pressing this hardware button.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classwx_top_level_window_1a198cff4212ff5342c0c4358b59274fd5" kindref="member">SetLeftMenu()</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/toplevel.h" line="416" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_top_level_window_1ac01a45e5d82e4e3be22a4841c1217e11" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxTopLevelWindow::SetSizeHints</definition>
        <argsstring>(int minW, int minH, int maxW=-1, int maxH=-1, int incW=-1, int incH=-1)</argsstring>
        <name>SetSizeHints</name>
        <reimplements refid="classwx_window_1ae813c640e1e2bc6014423247050846cf">SetSizeHints</reimplements>
        <param>
          <type>int</type>
          <declname>minW</declname>
        </param>
        <param>
          <type>int</type>
          <declname>minH</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxW</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>int</type>
          <declname>maxH</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>int</type>
          <declname>incW</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>int</type>
          <declname>incH</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
<para>Allows specification of minimum and maximum window sizes, and window size increments. </para>        </briefdescription>
        <detaileddescription>
<para>If a pair of values is not set (or set to -1), no constraints will be used.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>minW</parametername>
</parameternamelist>
<parameterdescription>
<para>The minimum width. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>minH</parametername>
</parameternamelist>
<parameterdescription>
<para>The minimum height. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxW</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum width. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxH</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum height. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>incW</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the increment for sizing the width (GTK/Motif/Xt only). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>incH</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the increment for sizing the height (GTK/Motif/Xt only).</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="remark"><para>Notice that this function not only prevents the user from resizing the window outside the given bounds but it also prevents the program itself from doing it using <ref refid="classwx_window_1a180312d5ad4a4a5ad805b8d52d67a74e" kindref="member">wxWindow::SetSize()</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/toplevel.h" line="444" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_top_level_window_1a4ddaae1bebf05a2bc474a192a5b30e42" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void wxTopLevelWindow::SetSizeHints</definition>
        <argsstring>(const wxSize &amp;minSize, const wxSize &amp;maxSize=wxDefaultSize, const wxSize &amp;incSize=wxDefaultSize)</argsstring>
        <name>SetSizeHints</name>
        <reimplements refid="classwx_window_1a307329dc3b10f5584aeb2cbce9293ffd">SetSizeHints</reimplements>
        <param>
          <type>const <ref refid="classwx_size" kindref="compound">wxSize</ref> &amp;</type>
          <declname>minSize</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_size" kindref="compound">wxSize</ref> &amp;</type>
          <declname>maxSize</declname>
          <defval><ref refid="gdicmn_8h_1a33a012cdb075e9f78c93f63bec2dc27b" kindref="member">wxDefaultSize</ref></defval>
        </param>
        <param>
          <type>const <ref refid="classwx_size" kindref="compound">wxSize</ref> &amp;</type>
          <declname>incSize</declname>
          <defval><ref refid="gdicmn_8h_1a33a012cdb075e9f78c93f63bec2dc27b" kindref="member">wxDefaultSize</ref></defval>
        </param>
        <briefdescription>
<para>Allows specification of minimum and maximum window sizes, and window size increments. </para>        </briefdescription>
        <detaileddescription>
<para>If a pair of values is not set (or set to -1), no constraints will be used.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>minSize</parametername>
</parameternamelist>
<parameterdescription>
<para>The minimum size of the window. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxSize</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum size of the window. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>incSize</parametername>
</parameternamelist>
<parameterdescription>
<para>Increment size (only taken into account under X11-based ports such as wxGTK/wxMotif/wxX11).</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="remark"><para>Notice that this function not only prevents the user from resizing the window outside the given bounds but it also prevents the program itself from doing it using <ref refid="classwx_window_1a180312d5ad4a4a5ad805b8d52d67a74e" kindref="member">wxWindow::SetSize()</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/toplevel.h" line="466" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_top_level_window_1afb944376c19d735a8251654ee4ac276f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxTopLevelWindow::SetTitle</definition>
        <argsstring>(const wxString &amp;title)</argsstring>
        <name>SetTitle</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>title</declname>
        </param>
        <briefdescription>
<para>Sets the window title. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>The window title.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classwx_top_level_window_1ab6ac6ef93ded0703c105332861ebe6f5" kindref="member">GetTitle()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/toplevel.h" line="478" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_top_level_window_1a8e37aff45a001a83ff49745298a6978e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxTopLevelWindow::SetTransparent</definition>
        <argsstring>(wxByte alpha)</argsstring>
        <name>SetTransparent</name>
        <reimplements refid="classwx_window_1ac8cf4398cec50ac36634760f45a0656f">SetTransparent</reimplements>
        <param>
          <type><ref refid="defs_8h_1a02052a0390b909998c03fe2371d8e83e" kindref="member">wxByte</ref></type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
<para>If the platform supports it will set the window to be translucent. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>alpha</parametername>
</parameternamelist>
<parameterdescription>
<para>Determines how opaque or transparent the window will be, if the platform supports the operation. A value of 0 sets the window to be fully transparent, and a value of 255 sets the window to be fully opaque. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/toplevel.h" line="489" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_top_level_window_1a2491f400227cedfc5140f68dbea46f27" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxTopLevelWindow::ShouldPreventAppExit</definition>
        <argsstring>() const</argsstring>
        <name>ShouldPreventAppExit</name>
        <briefdescription>
<para>This virtual function is not meant to be called directly but can be overridden to return false (it returns true by default) to allow the application to close even if this, presumably not very important, window is still opened. </para>        </briefdescription>
        <detaileddescription>
<para>By default, the application stays alive as long as there are any open top level windows. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/toplevel.h" line="498" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_top_level_window_1a6d102c9180b115a7a72b2e21f56cbc3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxTopLevelWindow::OSXSetModified</definition>
        <argsstring>(bool modified)</argsstring>
        <name>OSXSetModified</name>
        <param>
          <type>bool</type>
          <declname>modified</declname>
        </param>
        <briefdescription>
<para>This function sets the <ref refid="classwx_top_level_window" kindref="compound">wxTopLevelWindow</ref>&apos;s modified state on OS X, which currently draws a black dot in the <ref refid="classwx_top_level_window" kindref="compound">wxTopLevelWindow</ref>&apos;s close button. </para>        </briefdescription>
        <detaileddescription>
<para>On other platforms, this method does nothing.</para><para><simplesect kind="see"><para><ref refid="classwx_top_level_window_1aa5f93bc8d4d9ecf132126e10f2e4bffd" kindref="member">OSXIsModified()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/toplevel.h" line="507" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_top_level_window_1aa5f93bc8d4d9ecf132126e10f2e4bffd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxTopLevelWindow::OSXIsModified</definition>
        <argsstring>() const</argsstring>
        <name>OSXIsModified</name>
        <briefdescription>
<para>Returns the current modified state of the <ref refid="classwx_top_level_window" kindref="compound">wxTopLevelWindow</ref> on OS X. </para>        </briefdescription>
        <detaileddescription>
<para>On other platforms, this method does nothing.</para><para><simplesect kind="see"><para><ref refid="classwx_top_level_window_1a6d102c9180b115a7a72b2e21f56cbc3e" kindref="member">OSXSetModified()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/toplevel.h" line="515" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_top_level_window_1a82afa6f09dd5faef6330807ef59374e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxTopLevelWindow::SetRepresentedFilename</definition>
        <argsstring>(const wxString &amp;filename)</argsstring>
        <name>SetRepresentedFilename</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Sets the file name represented by this <ref refid="classwx_top_level_window" kindref="compound">wxTopLevelWindow</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>Under OS X, this file name is used to set the &quot;proxy icon&quot;, which appears in the window title bar near its title, corresponding to this file name. Under other platforms it currently doesn&apos;t do anything but it is harmless to call it now and it might be implemented to do something useful in the future so you&apos;re encouraged to use it for any window representing a file-based document.</para><para><simplesect kind="since"><para>2.9.4 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/toplevel.h" line="529" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_top_level_window_1a03e526f505716568318d601318527bd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxTopLevelWindow::ShowWithoutActivating</definition>
        <argsstring>()</argsstring>
        <name>ShowWithoutActivating</name>
        <briefdescription>
<para>Show the <ref refid="classwx_top_level_window" kindref="compound">wxTopLevelWindow</ref>, but do not give it keyboard focus. </para>        </briefdescription>
        <detaileddescription>
<para>This can be used for pop up or notification windows that should not steal the current focus. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/toplevel.h" line="536" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_top_level_window_1ab4089f1274bcb74e5f7763d1fb84ee28" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxTopLevelWindow::ShowFullScreen</definition>
        <argsstring>(bool show, long style=wxFULLSCREEN_ALL)</argsstring>
        <name>ShowFullScreen</name>
        <param>
          <type>bool</type>
          <declname>show</declname>
        </param>
        <param>
          <type>long</type>
          <declname>style</declname>
          <defval><ref refid="toplevel_8h_1a7cc2e4244ca368f68e5746185eda6c4aa72ce60840ea903bc619581af981dab15" kindref="member">wxFULLSCREEN_ALL</ref></defval>
        </param>
        <briefdescription>
<para>Depending on the value of <emphasis>show</emphasis> parameter the window is either shown full screen or restored to its normal state. </para>        </briefdescription>
        <detaileddescription>
<para><emphasis>style</emphasis> is a bit list containing some or all of the following values, which indicate what elements of the window to hide in full-screen mode:</para><para><itemizedlist>
<listitem><para><computeroutput><ref refid="toplevel_8h_1a7cc2e4244ca368f68e5746185eda6c4aa4625145320cb6292879930fddaec9846" kindref="member">wxFULLSCREEN_NOMENUBAR</ref></computeroutput> </para></listitem><listitem><para><computeroutput><ref refid="toplevel_8h_1a7cc2e4244ca368f68e5746185eda6c4aa201b1534be9376afa9f9bbd8d0f747e0" kindref="member">wxFULLSCREEN_NOTOOLBAR</ref></computeroutput> </para></listitem><listitem><para><computeroutput><ref refid="toplevel_8h_1a7cc2e4244ca368f68e5746185eda6c4aae24e5651560ad32e4defd3fae63c8249" kindref="member">wxFULLSCREEN_NOSTATUSBAR</ref></computeroutput> </para></listitem><listitem><para><computeroutput><ref refid="toplevel_8h_1a7cc2e4244ca368f68e5746185eda6c4aaaa20e9333ae71a20f1f82d93b1384f2e" kindref="member">wxFULLSCREEN_NOBORDER</ref></computeroutput> </para></listitem><listitem><para><computeroutput><ref refid="toplevel_8h_1a7cc2e4244ca368f68e5746185eda6c4aaf4ce9818046a65150e66be67072e85e6" kindref="member">wxFULLSCREEN_NOCAPTION</ref></computeroutput> </para></listitem><listitem><para><computeroutput><ref refid="toplevel_8h_1a7cc2e4244ca368f68e5746185eda6c4aa72ce60840ea903bc619581af981dab15" kindref="member">wxFULLSCREEN_ALL</ref></computeroutput> (all of the above)</para></listitem></itemizedlist>
</para><para>This function has not been tested with MDI frames.</para><para><simplesect kind="note"><para>Showing a window full screen also actually <ref refid="classwx_window_1a7fbc92ce240a8d4f6956b6e0276ef07f" kindref="member">Show()</ref>s the window if it isn&apos;t shown.</para></simplesect>
<simplesect kind="see"><para><ref refid="classwx_top_level_window_1a865e3244aca58679dab610df06c90f02" kindref="member">IsFullScreen()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/toplevel.h" line="558" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_top_level_window_1a4d13f215c9b4fbad26fced00eff20d90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTopLevelWindow::UseNativeDecorations</definition>
        <argsstring>(bool native=true)</argsstring>
        <name>UseNativeDecorations</name>
        <param>
          <type>bool</type>
          <declname>native</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>This method is specific to wxUniversal port. </para>        </briefdescription>
        <detaileddescription>
<para>Use native or custom-drawn decorations for this window only. Notice that to have any effect this method must be called before really creating the window, i.e. two step creation must be used:</para><para><programlisting><codeline><highlight class="normal">MyFrame<sp/>*frame<sp/>=<sp/>new<sp/>MyFrame;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>use<sp/>default<sp/>ctor</highlight></codeline>
<codeline><highlight class="normal">frame-&gt;UseNativeDecorations(false);<sp/>//<sp/>change<sp/>from<sp/>default<sp/>&quot;true&quot;</highlight></codeline>
<codeline><highlight class="normal">frame-&gt;Create(parent,<sp/>title,<sp/>...);<sp/><sp/>//<sp/>really<sp/>create<sp/>the<sp/>frame</highlight></codeline>
</programlisting></para><para><simplesect kind="see"><para><ref refid="classwx_top_level_window_1afd809e099fdd7cef3d9892167a477531" kindref="member">UseNativeDecorationsByDefault()</ref>, <ref refid="classwx_top_level_window_1a8150d86da624002dd83779a51d993b64" kindref="member">IsUsingNativeDecorations()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/toplevel.h" line="576" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_top_level_window_1afd809e099fdd7cef3d9892167a477531" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTopLevelWindow::UseNativeDecorationsByDefault</definition>
        <argsstring>(bool native=true)</argsstring>
        <name>UseNativeDecorationsByDefault</name>
        <param>
          <type>bool</type>
          <declname>native</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>This method is specific to wxUniversal port. </para>        </briefdescription>
        <detaileddescription>
<para>Top level windows in wxUniversal port can use either system-provided window decorations (i.e. title bar and various icons, buttons and menus in it) or draw the decorations themselves. By default the system decorations are used if they are available, but this method can be called with <emphasis>native</emphasis> set to false to change this for all windows created after this point.</para><para>Also note that if <computeroutput>WXDECOR</computeroutput> environment variable is set, then custom decorations are used by default and so it may make sense to call this method with default argument if the application can&apos;t use custom decorations at all for some reason.</para><para><simplesect kind="see"><para><ref refid="classwx_top_level_window_1a4d13f215c9b4fbad26fced00eff20d90" kindref="member">UseNativeDecorations()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/toplevel.h" line="595" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classwx_top_level_window_1ab096a9937afef5bc150686b6a819c64a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_size" kindref="compound">wxSize</ref></type>
        <definition>static wxSize wxTopLevelWindow::GetDefaultSize</definition>
        <argsstring>()</argsstring>
        <name>GetDefaultSize</name>
        <briefdescription>
<para>Get the default size for a new top level window. </para>        </briefdescription>
        <detaileddescription>
<para>This is used internally by wxWidgets on some platforms to determine the default size for a window created using <ref refid="gdicmn_8h_1a33a012cdb075e9f78c93f63bec2dc27b" kindref="member">wxDefaultSize</ref> so it is not necessary to use it when creating a <ref refid="classwx_top_level_window" kindref="compound">wxTopLevelWindow</ref>, however it may be useful if a rough estimation of the window size is needed for some other reason.</para><para><simplesect kind="since"><para>2.9.2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/toplevel.h" line="171" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classwx_top_level_window" kindref="compound">wxTopLevelWindow</ref> is a common base class for <ref refid="classwx_dialog" kindref="compound">wxDialog</ref> and <ref refid="classwx_frame" kindref="compound">wxFrame</ref>. </para>    </briefdescription>
    <detaileddescription>
<para>It is an abstract base class meaning that you never work with objects of this class directly, but all of its methods are also applicable for the two classes above.</para><para>Note that the instances of <ref refid="classwx_top_level_window" kindref="compound">wxTopLevelWindow</ref> are managed by wxWidgets in the internal top level window list.</para><para><linebreak/>
<heading level="2">Events emitted by this class</heading>
</para><para>Event macros for events emitted by this class:</para><para> <itemizedlist>
<listitem><para>EVT_MAXIMIZE(id,  func): Process a <computeroutput>wxEVT_MAXIMIZE</computeroutput> event. See <ref refid="classwx_maximize_event" kindref="compound">wxMaximizeEvent</ref>. </para></listitem>
<listitem><para>EVT_MOVE(func): Process a <computeroutput>wxEVT_MOVE</computeroutput> event, which is generated when a window is moved. See <ref refid="classwx_move_event" kindref="compound">wxMoveEvent</ref>. </para></listitem>
<listitem><para>EVT_MOVE_START(func): Process a <computeroutput>wxEVT_MOVE_START</computeroutput> event, which is generated when the user starts to move or size a window. wxMSW only. See <ref refid="classwx_move_event" kindref="compound">wxMoveEvent</ref>. </para></listitem>
<listitem><para>EVT_MOVE_END(func): Process a <computeroutput>wxEVT_MOVE_END</computeroutput> event, which is generated when the user stops moving or sizing a window. wxMSW only. See <ref refid="classwx_move_event" kindref="compound">wxMoveEvent</ref>. </para></listitem>
<listitem><para>EVT_SHOW(func): Process a <computeroutput>wxEVT_SHOW</computeroutput> event. See <ref refid="classwx_show_event" kindref="compound">wxShowEvent</ref>. <linebreak/>
 <heading level="2"></heading>
</para></listitem>
</itemizedlist>
Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxcore" kindref="member">wxCore</ref> &lt;&gt;&lt; =&apos;&apos;&gt;:&lt;/&gt;&amp;;&amp;;&lt; =&apos;&apos;&gt;\ &lt;/&gt;&lt;/&gt;</para><para><simplesect kind="see"><para><ref refid="classwx_dialog" kindref="compound">wxDialog</ref>, <ref refid="classwx_frame" kindref="compound">wxFrame</ref> </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="8098">
        <label>wxDocChildFrame</label>
        <link refid="classwx_doc_child_frame"/>
        <childnode refid="8096" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8068">
        <label>wxNonOwnedWindow</label>
        <link refid="classwx_non_owned_window"/>
        <childnode refid="8069" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8101">
        <label>wxMDIChildFrame</label>
        <link refid="classwx_m_d_i_child_frame"/>
        <childnode refid="8096" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8079">
        <label>wxGenericProgressDialog</label>
        <link refid="classwx_generic_progress_dialog"/>
        <childnode refid="8073" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8097">
        <label>wxAuiMDIParentFrame</label>
        <link refid="classwx_aui_m_d_i_parent_frame"/>
        <childnode refid="8096" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8071">
        <label>wxObject</label>
        <link refid="classwx_object"/>
      </node>
      <node id="8078">
        <label>wxFontDialog</label>
        <link refid="classwx_font_dialog"/>
        <childnode refid="8073" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8076">
        <label>wxFileDialog</label>
        <link refid="classwx_file_dialog"/>
        <childnode refid="8073" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8070">
        <label>wxEvtHandler</label>
        <link refid="classwx_evt_handler"/>
        <childnode refid="8071" relation="public-inheritance">
        </childnode>
        <childnode refid="8072" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8080">
        <label>wxProgressDialog</label>
        <link refid="classwx_progress_dialog"/>
        <childnode refid="8079" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8090">
        <label>wxRichTextStyleOrganiserDialog</label>
        <link refid="classwx_rich_text_style_organiser_dialog"/>
        <childnode refid="8073" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8099">
        <label>wxDocParentFrame</label>
        <link refid="classwx_doc_parent_frame"/>
        <childnode refid="8096" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8083">
        <label>wxMultiChoiceDialog</label>
        <link refid="classwx_multi_choice_dialog"/>
        <childnode refid="8073" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8095">
        <label>wxWizard</label>
        <link refid="classwx_wizard"/>
        <childnode refid="8073" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8072">
        <label>wxTrackable</label>
        <link refid="classwx_trackable"/>
      </node>
      <node id="8086">
        <label>wxPrintAbortDialog</label>
        <link refid="classwx_print_abort_dialog"/>
        <childnode refid="8073" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8069">
        <label>wxWindow</label>
        <link refid="classwx_window"/>
        <childnode refid="8070" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8104">
        <label>wxDocMDIParentFrame</label>
        <link refid="classwx_doc_m_d_i_parent_frame"/>
        <childnode refid="8103" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8073">
        <label>wxDialog</label>
        <link refid="classwx_dialog"/>
        <childnode refid="8067" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8082">
        <label>wxMessageDialog</label>
        <link refid="classwx_message_dialog"/>
        <childnode refid="8073" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8077">
        <label>wxFindReplaceDialog</label>
        <link refid="classwx_find_replace_dialog"/>
        <childnode refid="8073" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8096">
        <label>wxFrame</label>
        <link refid="classwx_frame"/>
        <childnode refid="8067" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8106">
        <label>wxPreviewFrame</label>
        <link refid="classwx_preview_frame"/>
        <childnode refid="8096" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8091">
        <label>wxSingleChoiceDialog</label>
        <link refid="classwx_single_choice_dialog"/>
        <childnode refid="8073" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8075">
        <label>wxDirDialog</label>
        <link refid="classwx_dir_dialog"/>
        <childnode refid="8073" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8089">
        <label>wxRearrangeDialog</label>
        <link refid="classwx_rearrange_dialog"/>
        <childnode refid="8073" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8081">
        <label>wxHtmlHelpDialog</label>
        <link refid="classwx_html_help_dialog"/>
        <childnode refid="8073" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8074">
        <label>wxColourDialog</label>
        <link refid="classwx_colour_dialog"/>
        <childnode refid="8073" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8105">
        <label>wxMiniFrame</label>
        <link refid="classwx_mini_frame"/>
        <childnode refid="8096" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8067">
        <label>wxTopLevelWindow</label>
        <link refid="classwx_top_level_window"/>
        <childnode refid="8068" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8088">
        <label>wxRichTextFormattingDialog</label>
        <link refid="classwx_rich_text_formatting_dialog"/>
        <childnode refid="8087" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8093">
        <label>wxTextEntryDialog</label>
        <link refid="classwx_text_entry_dialog"/>
        <childnode refid="8073" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8100">
        <label>wxHtmlHelpFrame</label>
        <link refid="classwx_html_help_frame"/>
        <childnode refid="8096" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8107">
        <label>wxSplashScreen</label>
        <link refid="classwx_splash_screen"/>
        <childnode refid="8096" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8103">
        <label>wxMDIParentFrame</label>
        <link refid="classwx_m_d_i_parent_frame"/>
        <childnode refid="8096" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8102">
        <label>wxDocMDIChildFrame</label>
        <link refid="classwx_doc_m_d_i_child_frame"/>
        <childnode refid="8101" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8085">
        <label>wxPGArrayStringEditorDialog</label>
        <link refid="classwx_p_g_array_string_editor_dialog"/>
        <childnode refid="8084" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8084">
        <label>wxPGArrayEditorDialog</label>
        <link refid="classwx_p_g_array_editor_dialog"/>
        <childnode refid="8073" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8094">
        <label>wxPasswordEntryDialog</label>
        <link refid="classwx_password_entry_dialog"/>
        <childnode refid="8093" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8092">
        <label>wxSymbolPickerDialog</label>
        <link refid="classwx_symbol_picker_dialog"/>
        <childnode refid="8073" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8087">
        <label>wxPropertySheetDialog</label>
        <link refid="classwx_property_sheet_dialog"/>
        <childnode refid="8073" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="8109">
        <label>wxNonOwnedWindow</label>
        <link refid="classwx_non_owned_window"/>
        <childnode refid="8110" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8112">
        <label>wxObject</label>
        <link refid="classwx_object"/>
        <childnode refid="8113" relation="usage">
          <edgelabel>m_refData</edgelabel>
        </childnode>
      </node>
      <node id="8111">
        <label>wxEvtHandler</label>
        <link refid="classwx_evt_handler"/>
        <childnode refid="8112" relation="public-inheritance">
        </childnode>
        <childnode refid="8114" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8114">
        <label>wxTrackable</label>
        <link refid="classwx_trackable"/>
      </node>
      <node id="8110">
        <label>wxWindow</label>
        <link refid="classwx_window"/>
        <childnode refid="8111" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8108">
        <label>wxTopLevelWindow</label>
        <link refid="classwx_top_level_window"/>
        <childnode refid="8109" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8113">
        <label>wxObjectRefData</label>
        <link refid="classwx_object_ref_data"/>
      </node>
    </collaborationgraph>
    <location file="interface/wx/toplevel.h" line="79" column="1" bodyfile="interface/wx/toplevel.h" bodystart="78" bodyend="596"/>
    <listofallmembers>
      <member refid="classwx_window_1a1da8baa734b9872d0c085b86a7b5d817" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>AcceptsFocus</name></member>
      <member refid="classwx_window_1a3a0cb3bd5e82462b19df9f24ad6d9ac4" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>AcceptsFocusFromKeyboard</name></member>
      <member refid="classwx_window_1af0c30b930ecf57f94b8cfc8871e8fd94" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>AcceptsFocusRecursively</name></member>
      <member refid="classwx_window_1abf60159278059a5bb397eb8647227bb3" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>AddChild</name></member>
      <member refid="classwx_evt_handler_1a7dc3c701781f4044372049de5004137e" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>AddFilter</name></member>
      <member refid="classwx_window_1a774b5b5548a6258727b5e2099e63ae9a" prot="protected" virt="virtual"><scope>wxTopLevelWindow</scope><name>AddPendingEvent</name></member>
      <member refid="classwx_window_1a71d1daa71f1ad1f6cbaac54db7e71af3" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>AdjustForLayoutDirection</name></member>
      <member refid="classwx_object_1a60204063f3cc3aa2fa1c7ff5bda9eb13" prot="protected" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>AllocExclusive</name></member>
      <member refid="classwx_window_1aae29552806a328c6a55ef8f07647f5ba" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>AlwaysShowScrollbars</name></member>
      <member refid="classwx_window_1ab4cea6ace96193b5c4282e097a6fbfee" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>BeginRepositioningChildren</name></member>
      <member refid="classwx_evt_handler_1a0f30c8fa5583b4a5f661897d63de3b62" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>Bind</name></member>
      <member refid="classwx_evt_handler_1a03cc68ca201fb79c7e837919025be71a" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>Bind</name></member>
      <member refid="classwx_window_1a11b5d8d94efd0ab52eb2c95a6aa88cdf" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>CacheBestSize</name></member>
      <member refid="classwx_evt_handler_1a63c7351618fd77330d80a250b3719519" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>CallAfter</name></member>
      <member refid="classwx_evt_handler_1a910416e4d0b1f38cec02213b8a0c6a12" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>CallAfter</name></member>
      <member refid="classwx_window_1acc4e456ed056a27ec61cd296b96c1e3e" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>CanAcceptFocus</name></member>
      <member refid="classwx_window_1ade15bb13dc6d51a8e6ecd49eb3f0f99b" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>CanAcceptFocusFromKeyboard</name></member>
      <member refid="classwx_window_1a6b5bbd3bf890f98897187879152ad97a" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>CanScroll</name></member>
      <member refid="classwx_top_level_window_1a392cf325512c5558d776ca85abc0c451" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>CanSetTransparent</name></member>
      <member refid="classwx_window_1a5c72c6260a73ef77bb0b1f7ec85fcfef" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>CaptureMouse</name></member>
      <member refid="classwx_window_1a06c0ecb262995b40083bfb446a6cff99" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>Center</name></member>
      <member refid="classwx_window_1a2dc4e0a85d33fc55cc9650eaea1da0a4" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>CenterOnParent</name></member>
      <member refid="classwx_top_level_window_1adaaa8f83cde59e1c4c563c058b381ac4" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>CenterOnScreen</name></member>
      <member refid="classwx_window_1a4a1819eeee3f2143cdde4f329ffde787" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>Centre</name></member>
      <member refid="classwx_window_1ab8e9b91b0e2db344fd71259616dfd433" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>CentreOnParent</name></member>
      <member refid="classwx_top_level_window_1a1d28df1d739af6a3d5d2ec9e43b03c29" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>CentreOnScreen</name></member>
      <member refid="classwx_window_1a61e833684ee5c89775e91e88be1a9a52" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>ClearBackground</name></member>
      <member refid="classwx_window_1af5e852c8695297c0328f1dfe3908605a" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>ClientToScreen</name></member>
      <member refid="classwx_window_1add6f5472d0d8fe0074145a886568721c" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>ClientToScreen</name></member>
      <member refid="classwx_window_1a5c72ca7de40d4e99aff55e79aad3962e" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>ClientToWindowSize</name></member>
      <member refid="classwx_object_1a436fc8fe68cf8a31000296d9cd3d2427" prot="protected" virt="virtual"><scope>wxTopLevelWindow</scope><name>CloneRefData</name></member>
      <member refid="classwx_window_1a3e44f4a494fc9ef4346c4fba70c8de0c" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>Close</name></member>
      <member refid="classwx_evt_handler_1a78719e8b82c9f9c6e4056b3449df1943" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>Connect</name></member>
      <member refid="classwx_evt_handler_1a1e8b5fc4c7e7f6d32d40bc00d4108ba4" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>Connect</name></member>
      <member refid="classwx_evt_handler_1aa290d9b67348e74c1da8497955a4e35c" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>Connect</name></member>
      <member refid="classwx_window_1a3dbe034120d742c4f5f6d64dc5d69590" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>ConvertDialogToPixels</name></member>
      <member refid="classwx_window_1ad70d63964459bb21f81bc0b1f09e84f4" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>ConvertDialogToPixels</name></member>
      <member refid="classwx_window_1a321de67666eff37b39556802c8029201" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>ConvertPixelsToDialog</name></member>
      <member refid="classwx_window_1a533552c4673c7a11f05bf9261b4dff5c" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>ConvertPixelsToDialog</name></member>
      <member refid="classwx_top_level_window_1a3a03f383ee3a98f62b3419463f27f346" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>Create</name></member>
      <member refid="classwx_window_1a95b7ca8faa033f5ab35458887c07bf38" prot="public" virt="non-virtual" ambiguityscope="wxNonOwnedWindow::"><scope>wxTopLevelWindow</scope><name>Create</name></member>
      <member refid="classwx_object_1a3f4f497c65cef611e121c41f21dd5ccc" prot="protected" virt="virtual"><scope>wxTopLevelWindow</scope><name>CreateRefData</name></member>
      <member refid="classwx_evt_handler_1a6e7f9cf4ebd0623c1d94979855d096f8" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>DeletePendingEvents</name></member>
      <member refid="classwx_window_1a6bf0c5be864544d9ce0560087667b7fc" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>Destroy</name></member>
      <member refid="classwx_window_1aff47b32c8d42d515ea0bb6a6c2fea917" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>DestroyChildren</name></member>
      <member refid="classwx_window_1a26d7329a9a753fa0445501f01f66c41e" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>Disable</name></member>
      <member refid="classwx_evt_handler_1a13061cf0ed01ac10a804ac057ef4bdbc" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>Disconnect</name></member>
      <member refid="classwx_evt_handler_1a2f171e19444b9c4034c5e11f24fa9c91" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>Disconnect</name></member>
      <member refid="classwx_evt_handler_1a16a6f823853e4b74b43dd9a2cf3abee6" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>Disconnect</name></member>
      <member refid="classwx_window_1a2d10b472a4962d1c852c83d55252c44b" prot="protected" virt="virtual"><scope>wxTopLevelWindow</scope><name>DoCentre</name></member>
      <member refid="classwx_window_1ae07ab0b5cabb750f4e396b6c95e4abf7" prot="protected" virt="virtual"><scope>wxTopLevelWindow</scope><name>DoGetBestClientHeight</name></member>
      <member refid="classwx_window_1a68f3ec28a29b2a514b20c3e80255d82e" prot="protected" virt="virtual"><scope>wxTopLevelWindow</scope><name>DoGetBestClientSize</name></member>
      <member refid="classwx_window_1ac68cb9912dc456e2faa8c745b2437b75" prot="protected" virt="virtual"><scope>wxTopLevelWindow</scope><name>DoGetBestClientWidth</name></member>
      <member refid="classwx_window_1aac6408f1814dce3f8332cc69fe5104f1" prot="protected" virt="virtual"><scope>wxTopLevelWindow</scope><name>DoGetBestSize</name></member>
      <member refid="classwx_window_1ae8a84a80645e99f4d24a22e5c386f626" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>DoUpdateWindowUI</name></member>
      <member refid="classwx_window_1a7e7015bc61bd79b6821d2dccaecf9eda" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>DragAcceptFiles</name></member>
      <member refid="classwx_window_1a4e933aa891f42fbb3b87438057c573af" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>Enable</name></member>
      <member refid="classwx_top_level_window_1a78a9441746702894fba7653c2d98cb8d" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>EnableCloseButton</name></member>
      <member refid="classwx_window_1a1203fbd238d781253b44e0e459532301" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>EndRepositioningChildren</name></member>
      <member refid="classwx_window_1a777258379a3eef1b0530f12db6b77cab" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>FindFocus</name></member>
      <member refid="classwx_window_1a619b5743645b86054aa3fff12ba4c7ce" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>FindWindow</name></member>
      <member refid="classwx_window_1a3b2f2c9b6346bdb3dcba0edfd9a7f224" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>FindWindow</name></member>
      <member refid="classwx_window_1a101201b12ccd5fba49fa06ed19b5c6fb" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>FindWindowById</name></member>
      <member refid="classwx_window_1ab8eb148fffae109e0fac86e88d569670" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>FindWindowByLabel</name></member>
      <member refid="classwx_window_1adbe4eea02f615313c12a2c00557a44c3" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>FindWindowByName</name></member>
      <member refid="classwx_window_1a2bf38a6cbd1f82fb46f274396f482994" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>Fit</name></member>
      <member refid="classwx_window_1a55aca401aab29d59f7cc53f89ba2e38d" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>FitInside</name></member>
      <member refid="classwx_window_1a15c678314cfc1d807196bc298b713ed3" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>Freeze</name></member>
      <member refid="classwx_window_1aefc02d7275010ebb8d5b66569e7287c4" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>GetAcceleratorTable</name></member>
      <member refid="classwx_window_1ae0469b554e9c501b356b3ed4b6d8a3af" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>GetAccessible</name></member>
      <member refid="classwx_window_1a64e3f936ab812d24966827ea4e0f15c0" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>GetAutoLayout</name></member>
      <member refid="classwx_window_1af51668ec32e9e44db45574a15ec215b4" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>GetBackgroundColour</name></member>
      <member refid="classwx_window_1a4f09e6a20858a0667df3dda44715d6b9" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>GetBackgroundStyle</name></member>
      <member refid="classwx_window_1a9ec151255cbb44935136d9bbff31a082" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>GetBestHeight</name></member>
      <member refid="classwx_window_1ae507a81d682023383e465d8e913595b6" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>GetBestSize</name></member>
      <member refid="classwx_window_1a1e4b09c35c0e5495905da45c1580709d" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>GetBestVirtualSize</name></member>
      <member refid="classwx_window_1a5c797a38418a6f2fb79f800112ec73b0" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>GetBestWidth</name></member>
      <member refid="classwx_window_1a42908ba076f2a93ee81201dc151c3b23" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>GetBorder</name></member>
      <member refid="classwx_window_1a94e3a0ce6c1aae57562678996adbf2fd" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>GetBorder</name></member>
      <member refid="classwx_window_1a483d3f73925bd38c3964dad058672f0a" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>GetCapture</name></member>
      <member refid="classwx_window_1a2ee3eba6dbfb37944ed0ce03383bfc34" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>GetCaret</name></member>
      <member refid="classwx_window_1aa488520238094f858bea3c3a2c6b9809" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>GetCharHeight</name></member>
      <member refid="classwx_window_1a8f92c15635a44b85392d16f5906c31ef" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>GetCharWidth</name></member>
      <member refid="classwx_window_1ad500085ad0511879b5e018706c91a494" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>GetChildren</name></member>
      <member refid="classwx_window_1afcd1cf1f16e375d00b8d0885997adc90" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>GetChildren</name></member>
      <member refid="classwx_window_1a170d85e4aa0cbacbfcdd0728120e1417" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>GetClassDefaultAttributes</name></member>
      <member refid="classwx_object_1ae6d365f2556b26767ced8410c5e839d0" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>GetClassInfo</name></member>
      <member refid="classwx_window_1a4a1b567002d1039bc630885fc09808ae" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>GetClientAreaOrigin</name></member>
      <member refid="classwx_evt_handler_1a291bc92c1bea8abfff276a8e333d46db" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>GetClientData</name></member>
      <member refid="classwx_evt_handler_1a371742bda1686e82065f3a1f2acb31c8" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>GetClientObject</name></member>
      <member refid="classwx_window_1a5c6428c6aa8634b5c5963d1d0eaa75c7" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>GetClientRect</name></member>
      <member refid="classwx_window_1ad34d4bbd6d3064aa56e7a2cc3ee97be3" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>GetClientSize</name></member>
      <member refid="classwx_window_1a13d04f24ab78611f895bc40776118e90" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>GetClientSize</name></member>
      <member refid="classwx_window_1ade068146db3eea2adcde2533de17473b" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>GetConstraints</name></member>
      <member refid="classwx_window_1aec50a3057efbfb35ad16f433603f6f00" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>GetContainingSizer</name></member>
      <member refid="classwx_window_1a7070700104b0f739260a8d803c64e0e1" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>GetContentScaleFactor</name></member>
      <member refid="classwx_window_1aa467591bdb0ae14a625045553e62a120" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>GetCursor</name></member>
      <member refid="classwx_window_1a377de92ac032b60a9241fab88efdbf11" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>GetDefaultAttributes</name></member>
      <member refid="classwx_top_level_window_1ab43efb27fc3c7e17467ec4d0f9ba8756" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>GetDefaultItem</name></member>
      <member refid="classwx_top_level_window_1ab096a9937afef5bc150686b6a819c64a" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>GetDefaultSize</name></member>
      <member refid="classwx_window_1ae4bec3096f7e13eec8a537aa24cd6112" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>GetDropTarget</name></member>
      <member refid="classwx_window_1aa88f6c4946d1ae4821aca652efbf7c62" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>GetEffectiveMinSize</name></member>
      <member refid="classwx_window_1ad54b0c1662006da89d7e5bf8a64f93eb" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>GetEventHandler</name></member>
      <member refid="classwx_evt_handler_1a7742d81c5eb7849a0ad75b9de8575153" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>GetEvtHandlerEnabled</name></member>
      <member refid="classwx_window_1a0db5cd18ab5166b44da9d07f92bb5070" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>GetExtraStyle</name></member>
      <member refid="classwx_window_1af25f8a799106d61b50d3ee796ba43728" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>GetFont</name></member>
      <member refid="classwx_window_1ad9a607b86d9175d395f245ecbe00f38b" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>GetForegroundColour</name></member>
      <member refid="classwx_window_1abe0d47e5d63394b098bdad64eb1a60d2" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>GetGrandParent</name></member>
      <member refid="classwx_window_1a108426e918ac377fef17662885a7a459" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>GetHandle</name></member>
      <member refid="classwx_window_1acb28971fe25abd1f5c6d768e203a042a" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>GetHelpText</name></member>
      <member refid="classwx_window_1a7d11a419fede5049d7c12c337e5f5dfc" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>GetHelpTextAtPoint</name></member>
      <member refid="classwx_top_level_window_1a9e922563d44423c2cb4097326358caf0" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>GetIcon</name></member>
      <member refid="classwx_top_level_window_1a8d69fdfb3cc8341b425b65f19b466824" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>GetIcons</name></member>
      <member refid="classwx_window_1a79037f68b290bba5811628ec67bf3b24" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>GetId</name></member>
      <member refid="classwx_window_1a50db82dadf3cfaee41dd40a9b90ae339" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>GetLabel</name></member>
      <member refid="classwx_window_1afafd17cbb5dd6d899b25360255e0bdae" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>GetLayoutDirection</name></member>
      <member refid="classwx_window_1a6690ee82a5a246e070bf0a7dc4bcb5b3" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>GetMaxClientSize</name></member>
      <member refid="classwx_window_1a98bbe53eddb91b508b0082783402d954" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>GetMaxHeight</name></member>
      <member refid="classwx_window_1a107966aa1b2d50107b3b95cf0d7d9901" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>GetMaxSize</name></member>
      <member refid="classwx_window_1afde7288b24e48f2d0b5d2c7376f10426" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>GetMaxWidth</name></member>
      <member refid="classwx_window_1a24d22aacd834cbe6cd5b252fa91c3bd9" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>GetMinClientSize</name></member>
      <member refid="classwx_window_1a81bfd762272d33850c0511d65d896ca3" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>GetMinHeight</name></member>
      <member refid="classwx_window_1a90ce6ffc8e0af7476157c9e1e6b616df" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>GetMinSize</name></member>
      <member refid="classwx_window_1a327e1a8054d604a34cc5473a8c415e4d" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>GetMinWidth</name></member>
      <member refid="classwx_window_1a93b9ec7d9eaf152c17f3bf2698551ef4" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>GetName</name></member>
      <member refid="classwx_evt_handler_1addedbed1c9f970c2b1e2893a42805b6a" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>GetNextHandler</name></member>
      <member refid="classwx_window_1ad256ad684063935d897956a87c932b38" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>GetNextSibling</name></member>
      <member refid="classwx_window_1a6cd311a6c6ca7329714b969834f679f9" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>GetParent</name></member>
      <member refid="classwx_window_1a9b7de6ea85ca926b668ba0682a61a93e" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>GetPopupMenuSelectionFromUser</name></member>
      <member refid="classwx_window_1a00f5cb3cac003205317a565a33d4bb27" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>GetPopupMenuSelectionFromUser</name></member>
      <member refid="classwx_window_1ac2eece00a4b4b83e1433b59a5d31584f" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>GetPosition</name></member>
      <member refid="classwx_window_1abfeeca6db664c24603f6371811397e0d" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>GetPosition</name></member>
      <member refid="classwx_evt_handler_1a69bfde9623d89eb91e363c53616e4587" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>GetPreviousHandler</name></member>
      <member refid="classwx_window_1a02b3a109f926c86fa1f34a00c1b5ec67" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>GetPrevSibling</name></member>
      <member refid="classwx_window_1a68e83a724887b18525fdbd947b2d8c88" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>GetRect</name></member>
      <member refid="classwx_object_1af3c6c76a775864832f1536d3c0de3a2b" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>GetRefData</name></member>
      <member refid="classwx_window_1a285a81f00ed59fa09938343708938566" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>GetScreenPosition</name></member>
      <member refid="classwx_window_1a5786c420fd2958bde726c923621700aa" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>GetScreenPosition</name></member>
      <member refid="classwx_window_1ae8f6c4a201650ad63bb5ebe4f35eb41e" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>GetScreenRect</name></member>
      <member refid="classwx_window_1add5f4e225e16154f9148451a7d32d0b3" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>GetScrollPos</name></member>
      <member refid="classwx_window_1a23b41cf939ab67a002d8f404ac4cf76b" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>GetScrollRange</name></member>
      <member refid="classwx_window_1ac34f47fef73e3a178e8c335aa38ce567" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>GetScrollThumb</name></member>
      <member refid="classwx_window_1a36ea282508dd55d6f3981ec205ed0449" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>GetSize</name></member>
      <member refid="classwx_window_1a36bf1ac809da1b0cd9c67fd806c4d9b5" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>GetSize</name></member>
      <member refid="classwx_window_1a01e9d43576615166ee309f4358bdd26d" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>GetSizer</name></member>
      <member refid="classwx_window_1a4220668e42f3a173bf29d335da4db2c3" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>GetTextExtent</name></member>
      <member refid="classwx_window_1a69fc79069821a633eba9c5d917fd8b7b" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>GetTextExtent</name></member>
      <member refid="classwx_window_1a578145344f92cfee755a9c87f6703432" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>GetThemeEnabled</name></member>
      <member refid="classwx_top_level_window_1ab6ac6ef93ded0703c105332861ebe6f5" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>GetTitle</name></member>
      <member refid="classwx_top_level_window_1a174be1af9accfdbbfa32bff400e56127" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>GetTmpDefaultItem</name></member>
      <member refid="classwx_window_1a44eecb46979b528c184e26ce6c52b3fa" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>GetToolTip</name></member>
      <member refid="classwx_window_1a7e7c9a92f9efbb47073704646db1344e" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>GetToolTipText</name></member>
      <member refid="classwx_window_1a23370688a951ed60ac25146af854d2ec" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>GetUpdateClientRect</name></member>
      <member refid="classwx_window_1a522f73fd32e54b11466284acc43f76f3" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>GetUpdateRegion</name></member>
      <member refid="classwx_window_1a6a332586346cb9ece4a8fe058a7b88c4" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>GetValidator</name></member>
      <member refid="classwx_window_1a557f92e6c66b6654c95315d4461d0e11" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>GetVirtualSize</name></member>
      <member refid="classwx_window_1a24cefbb69173899ec4d62460b2932ed9" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>GetVirtualSize</name></member>
      <member refid="classwx_window_1a21c97d5bcf61c4c664bd33066f5567b1" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>GetWindowBorderSize</name></member>
      <member refid="classwx_window_1a418007123fec131b47d9841ac6d34891" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>GetWindowStyle</name></member>
      <member refid="classwx_window_1ad67a731cd937a21e561593d4a0c44979" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>GetWindowStyleFlag</name></member>
      <member refid="classwx_window_1a9027305e391de617259407f2c12a54bf" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>GetWindowVariant</name></member>
      <member refid="classwx_window_1a89d1b079de97aac170e999692095872c" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>HandleAsNavigationKey</name></member>
      <member refid="classwx_top_level_window_1ac804159a17302c7e805d70ff4911318c" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>HandleSettingChange</name></member>
      <member refid="classwx_window_1a89816f1b78c125c59418463caea35c9a" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>HandleWindowEvent</name></member>
      <member refid="classwx_window_1a41e1b77ac82c7420d34b8030d5f26046" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>HasCapture</name></member>
      <member refid="classwx_window_1aeee5333e672a3a510db48d2af37ddee9" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>HasExtraStyle</name></member>
      <member refid="classwx_window_1a3d1d00b4cd51fa3c187e9d609d022aa4" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>HasFlag</name></member>
      <member refid="classwx_window_1adaf042744bdbb8a5f9feccbe7749468a" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>HasFocus</name></member>
      <member refid="classwx_window_1a55c7b73596f2eec2694e8f512013ee81" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>HasMultiplePages</name></member>
      <member refid="classwx_window_1ae50c259b165d9366729734bc124cf184" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>HasScrollbar</name></member>
      <member refid="classwx_window_1ab9cbcb6d6f4a272c2f0342e69a13b59a" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>HasTransparentBackground</name></member>
      <member refid="classwx_window_1a7ed103df04014cb3c59c6a3fb4d95328" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>Hide</name></member>
      <member refid="classwx_window_1a5326fbb26557a224507a1c06e5640e89" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>HideWithEffect</name></member>
      <member refid="classwx_window_1ae8705e241daca73105921b72326258b5" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>HitTest</name></member>
      <member refid="classwx_window_1ace65f76df096662bd15722d10c1905c9" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>HitTest</name></member>
      <member refid="classwx_top_level_window_1ae461559192e33ef111c3f147999a26bf" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>Iconize</name></member>
      <member refid="classwx_window_1a9fd5b6520c1b30eb8e82bb5d56bc24c0" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>InformFirstDirection</name></member>
      <member refid="classwx_window_1a6b1bf9e099704e7a493b8c4666b1f7f7" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>InheritAttributes</name></member>
      <member refid="classwx_window_1af05b95cfeed0bee6f44797572367b26e" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>InheritsBackgroundColour</name></member>
      <member refid="classwx_window_1aa90a260c0a835a133043460b7d0024a8" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>InitDialog</name></member>
      <member refid="classwx_window_1ae1b56ca87d8590ee5e576012229a380a" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>InvalidateBestSize</name></member>
      <member refid="classwx_top_level_window_1afa58f411cf488eb9279683b1d20a74b6" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>IsActive</name></member>
      <member refid="classwx_top_level_window_1a84a05afb2ce3ff0f56c9b16c9a656d3e" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>IsAlwaysMaximized</name></member>
      <member refid="classwx_window_1a5fd3fba5d43efb67a834c0483a9c3d0e" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>IsBeingDeleted</name></member>
      <member refid="classwx_window_1ab7f60a0c4acdd832a46aabf0d09cd54a" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>IsDescendant</name></member>
      <member refid="classwx_window_1abe7a8c61796262b517f5e0765374cc2b" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>IsDoubleBuffered</name></member>
      <member refid="classwx_window_1a0c186513884fb2020c6af3c62f0913d2" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>IsEnabled</name></member>
      <member refid="classwx_window_1a687120c4b7095481bbc6d483187d0c56" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>IsExposed</name></member>
      <member refid="classwx_window_1afde1844b856787b95afbb686aaaa206d" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>IsExposed</name></member>
      <member refid="classwx_window_1a3017e9cdde376d567ee37b2a96913eca" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>IsExposed</name></member>
      <member refid="classwx_window_1ac4653d89376b9e88afbec8c342d32530" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>IsExposed</name></member>
      <member refid="classwx_window_1ad78eb073c4fe8271caa4c65301a24ee2" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>IsFocusable</name></member>
      <member refid="classwx_window_1adf34f121a9a94fd7159a8818355f2b67" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>IsFrozen</name></member>
      <member refid="classwx_top_level_window_1a865e3244aca58679dab610df06c90f02" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>IsFullScreen</name></member>
      <member refid="classwx_top_level_window_1a558559389a38bbba4333c4d6d56840aa" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>IsIconized</name></member>
      <member refid="classwx_object_1a3c7115ef4132dcee0c4fc34e84d7fced" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>IsKindOf</name></member>
      <member refid="classwx_top_level_window_1a20143d255165f6780d20f6611b67057e" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>IsMaximized</name></member>
      <member refid="classwx_window_1a77443cb35d15b5006b96a8c5ea0944f6" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>IsRetained</name></member>
      <member refid="classwx_object_1a059373c494c2369d7db2a556efef8ecf" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>IsSameAs</name></member>
      <member refid="classwx_window_1abf4f5068ebf648197ed9ca8ca58f38df" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>IsScrollbarAlwaysShown</name></member>
      <member refid="classwx_window_1ad3544f9c364b7952ac0676217e400061" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>IsShown</name></member>
      <member refid="classwx_window_1ac2722709783e89e76b2eeb7f9f93236a" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>IsShownOnScreen</name></member>
      <member refid="classwx_window_1a1c6a83e5421bb7cfb8a9ad804d251b65" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>IsThisEnabled</name></member>
      <member refid="classwx_window_1afe04dba2155b58429d6c4e0a5a5e1664" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>IsTopLevel</name></member>
      <member refid="classwx_window_1a21c6e2be327062520d9d0aae55b1e8b0" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>IsTransparentBackgroundSupported</name></member>
      <member refid="classwx_evt_handler_1ac0734578a8d929b8b0be440ce0b53ad6" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>IsUnlinked</name></member>
      <member refid="classwx_top_level_window_1a8150d86da624002dd83779a51d993b64" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>IsUsingNativeDecorations</name></member>
      <member refid="classwx_top_level_window_1adfe7e3f4a32f3ed178968f64431bbfe0" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>Layout</name></member>
      <member refid="classwx_window_1ade808784f0e64d9985e2f279b5ca8c02" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>LineDown</name></member>
      <member refid="classwx_window_1afc0816a174ceee6d36d1995c6824a273" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>LineUp</name></member>
      <member refid="classwx_window_1a124944524f36b71385dad8fddaad8ded" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>Lower</name></member>
      <member refid="classwx_object_1a9e31954530a0abd54982effc443ed2b8" prot="protected" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>m_refData</name></member>
      <member refid="classwx_top_level_window_1addb1612e9f00ac82c2e19c2bac6ffc4f" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>Maximize</name></member>
      <member refid="classwx_window_1ab1cb98c8d25b9e6ff7b706b1446c3df7" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>Move</name></member>
      <member refid="classwx_window_1a22a22c1e23ca05776707e7999d8047fe" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>Move</name></member>
      <member refid="classwx_window_1a79e66079125e8420de269811bdb6f2b6" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>MoveAfterInTabOrder</name></member>
      <member refid="classwx_window_1af2b92f61cd9f9e2e0efe4cce307e25b1" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>MoveBeforeInTabOrder</name></member>
      <member refid="classwx_top_level_window_1aacf2bce5390aa1b3ade837e95a636ae0" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>MSWGetSystemMenu</name></member>
      <member refid="classwx_window_1a86904f6785df4af6036b33383490a805" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>Navigate</name></member>
      <member refid="classwx_window_1aa58039c8fc65e19160becf510ee1d1d5" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>NavigateIn</name></member>
      <member refid="classwx_window_1a8175da594e6045635a1d1cfe775cdddb" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>NewControlId</name></member>
      <member refid="classwx_window_1a6b5654c0c6c6245d592c279521f7099c" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>OnInternalIdle</name></member>
      <member refid="classwx_object_1a07b8f34f5afc5743195c5fed052f55d3" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>operator delete</name></member>
      <member refid="classwx_object_1a96fa423a1dbc212c8227a5d83825971f" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>operator new</name></member>
      <member refid="classwx_top_level_window_1aa5f93bc8d4d9ecf132126e10f2e4bffd" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>OSXIsModified</name></member>
      <member refid="classwx_top_level_window_1a6d102c9180b115a7a72b2e21f56cbc3e" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>OSXSetModified</name></member>
      <member refid="classwx_window_1a61e78cb48ece3e9e989e37b475ac1e35" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>PageDown</name></member>
      <member refid="classwx_window_1aa7c2bbc480d8863d9f139c01d7abc1b1" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>PageUp</name></member>
      <member refid="classwx_window_1ac45c1f4cf96c70779764c14cf528790b" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>PopEventHandler</name></member>
      <member refid="classwx_window_1a8f715d238cf74a845488b0e2645e98df" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>PopupMenu</name></member>
      <member refid="classwx_window_1a834bcdfd41f5e5370ebd9ea401c92900" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>PopupMenu</name></member>
      <member refid="classwx_window_1ab1943463e6661f97e072b43337c6cc09" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>PostSizeEvent</name></member>
      <member refid="classwx_window_1aa080d8dcda58bcc6ea2abd8bea592e3e" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>PostSizeEventToParent</name></member>
      <member refid="classwx_window_1a5ebdbd87c28644149a07f1742996df96" prot="protected" virt="virtual"><scope>wxTopLevelWindow</scope><name>ProcessEvent</name></member>
      <member refid="classwx_evt_handler_1ac0f5d2cb29a04c1f7f82eb6b351f79fb" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>ProcessEventLocally</name></member>
      <member refid="classwx_window_1a7cbee38944dab02d753a4dba74230443" prot="protected" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>ProcessPendingEvents</name></member>
      <member refid="classwx_window_1a9350b3a9c2e380707eaea92cedad12a5" prot="protected" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>ProcessThreadEvent</name></member>
      <member refid="classwx_window_1a0a76891d726ad5f9a729e27e4eab2b57" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>ProcessWindowEvent</name></member>
      <member refid="classwx_window_1a0a11aa4a50491d051f947e2618e52178" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>ProcessWindowEventLocally</name></member>
      <member refid="classwx_window_1a398c11ab9af7956067a964f560d1978c" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>PushEventHandler</name></member>
      <member refid="classwx_window_1a69e450f21b0d7013269ec1a4771f043b" prot="protected" virt="virtual"><scope>wxTopLevelWindow</scope><name>QueueEvent</name></member>
      <member refid="classwx_window_1a54808c933f22a891c5db646f6209fa4d" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>Raise</name></member>
      <member refid="classwx_object_1a2f6f1aa51fe9fc2b1415ca4211a90e9e" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>Ref</name></member>
      <member refid="classwx_window_1a29dc7251746154c821b17841b9877830" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>Refresh</name></member>
      <member refid="classwx_window_1ab0ae6b9898cd261c39ebeb2891aa3d67" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>RefreshRect</name></member>
      <member refid="classwx_window_1a53ca57872dac5851ea6ba55a494b899b" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>RegisterHotKey</name></member>
      <member refid="classwx_window_1adcc538819c11ecb3bd3e4e5d13c5ba7a" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>ReleaseMouse</name></member>
      <member refid="classwx_window_1acee332ed4368d26e8bc3db5767c1240a" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>RemoveChild</name></member>
      <member refid="classwx_window_1aacbfe424fa527966b954229a1db96ab5" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>RemoveEventHandler</name></member>
      <member refid="classwx_evt_handler_1a67a57b759c447b121bf70a7c9804c8f2" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>RemoveFilter</name></member>
      <member refid="classwx_window_1a7977b749284e65aecfed2ce146799cb9" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>Reparent</name></member>
      <member refid="classwx_top_level_window_1a749d23ea08f6273fb93fe2c003b650b3" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>RequestUserAttention</name></member>
      <member refid="classwx_top_level_window_1a21e2d58a530c431c26ff098e4f75f249" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>Restore</name></member>
      <member refid="classwx_window_1a0f9814efc50316b4c57b7ec2bf78b716" prot="protected" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>SafelyProcessEvent</name></member>
      <member refid="classwx_window_1a09aca554d41d6e771d3dc72f26b9cacc" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>ScreenToClient</name></member>
      <member refid="classwx_window_1a5f4dab599fda780823841bb2fe5f2f99" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>ScreenToClient</name></member>
      <member refid="classwx_window_1aa5c5b683bd11a0d9771bd2fcdf643c64" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>ScrollLines</name></member>
      <member refid="classwx_window_1adc0ed5e1c4925223cb901ced14b8343d" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>ScrollPages</name></member>
      <member refid="classwx_window_1ab7be4956ff22da37fff2b8aaa581045c" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>ScrollWindow</name></member>
      <member refid="classwx_evt_handler_1a3c07426130d2868a5ae7fa918a251f49" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>SearchEventTable</name></member>
      <member refid="classwx_window_1a7e21eb6a0819281b29134a6432d064fe" prot="protected" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>SendDestroyEvent</name></member>
      <member refid="classwx_window_1a1afc1653413957537073c074dcc3eade" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>SendIdleEvents</name></member>
      <member refid="classwx_window_1a237f739b21937d3e8f1bff5fa82ba4c2" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>SendSizeEvent</name></member>
      <member refid="classwx_window_1af7987987978fd8a93df88b29b19a6388" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>SendSizeEventToParent</name></member>
      <member refid="classwx_window_1a0af5e9aa4dee6a4e92c0700f92605642" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>SetAcceleratorTable</name></member>
      <member refid="classwx_window_1a413220ead41f05a2ec2cfe10b3d573df" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>SetAccessible</name></member>
      <member refid="classwx_window_1ad369fe1db5c20f9d9edff7b5eb1f7226" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>SetAutoLayout</name></member>
      <member refid="classwx_window_1a37219df52734626e23401fd83b25d8a0" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>SetBackgroundColour</name></member>
      <member refid="classwx_window_1af14f8fd2ed2d30a9bbb5d4f9fd6594ec" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>SetBackgroundStyle</name></member>
      <member refid="classwx_window_1a2b8b2e99231a0ec1a05f5066f1b7f3d8" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>SetCanFocus</name></member>
      <member refid="classwx_window_1acfef5e1cada92c73e2937b84ff57ff57" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>SetCaret</name></member>
      <member refid="classwx_evt_handler_1a82c74f2cebfa02cb3c1563d459c872bf" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>SetClientData</name></member>
      <member refid="classwx_evt_handler_1af1e33a06087b8b2ddc43c7d15a91b326" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>SetClientObject</name></member>
      <member refid="classwx_window_1aa59f715217fffa5bcf14cd97f92e7840" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>SetClientSize</name></member>
      <member refid="classwx_window_1ab2aadc857ee7f55f47ab9a8669e3beb7" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>SetClientSize</name></member>
      <member refid="classwx_window_1a582d4d1f60a3f777627773b2da0bb2ef" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>SetClientSize</name></member>
      <member refid="classwx_window_1afa75d111bbd9a68f837101a5fbed60a7" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>SetConstraints</name></member>
      <member refid="classwx_window_1a0ccf78fe06722b500adfb7f36b8ce443" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>SetContainingSizer</name></member>
      <member refid="classwx_window_1ad83f9c51c6f31e0e05f598b47a19ed98" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>SetCursor</name></member>
      <member refid="classwx_top_level_window_1ae27318a65876ca787c0483c960bdbb01" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>SetDefaultItem</name></member>
      <member refid="classwx_window_1a5477a89c17fdcc3ec6c90274796eb1c3" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>SetDoubleBuffered</name></member>
      <member refid="classwx_window_1ae34b4d45433ca8287df0e47d46411e58" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>SetDropTarget</name></member>
      <member refid="classwx_window_1af6c84b7679183b377ba27a52a2f708b4" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>SetEventHandler</name></member>
      <member refid="classwx_evt_handler_1a7388ae19c8657e5656471b658c320036" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>SetEvtHandlerEnabled</name></member>
      <member refid="classwx_window_1ae9655f7c35ce7ac89cac2f6c0054b103" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>SetExtraStyle</name></member>
      <member refid="classwx_window_1a697f9f8d3ff389790f1c74b59bcb1d75" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>SetFocus</name></member>
      <member refid="classwx_window_1a6fa03f82d7917dff482754d0d2e2b1c8" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>SetFocusFromKbd</name></member>
      <member refid="classwx_window_1a9ab11e7da57a1d08918aa75fc33f6ad3" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>SetFont</name></member>
      <member refid="classwx_window_1a69f1e1c7ddd370d72e68c70f13ac8de9" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>SetForegroundColour</name></member>
      <member refid="classwx_window_1a4c1a2cbc7363237b3a7c70af4e702c72" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>SetHelpText</name></member>
      <member refid="classwx_top_level_window_1a33dc013a7cb33384f631b2764ca53b06" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>SetIcon</name></member>
      <member refid="classwx_top_level_window_1a34270084ea5a46c12309abbb99f2004c" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>SetIcons</name></member>
      <member refid="classwx_window_1a7f27d0faed14effa013381bdc40e1bcd" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>SetId</name></member>
      <member refid="classwx_window_1ae6dfe0b0d4a8c666b21ce8df8d96727b" prot="protected" virt="virtual"><scope>wxTopLevelWindow</scope><name>SetInitialBestSize</name></member>
      <member refid="classwx_window_1a1b309ca50ba87e34f968c83b79af1397" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>SetInitialSize</name></member>
      <member refid="classwx_window_1aa00ffea9f53587f29ae343adde033b8e" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>SetLabel</name></member>
      <member refid="classwx_window_1a7d494549f7fcfed44af95f8ee364c1f9" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>SetLayoutDirection</name></member>
      <member refid="classwx_top_level_window_1a198cff4212ff5342c0c4358b59274fd5" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>SetLeftMenu</name></member>
      <member refid="classwx_window_1a664e5b2ddd817d9c58788269fe1d8479" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>SetMaxClientSize</name></member>
      <member refid="classwx_top_level_window_1afd6d2cccfe0ba0ff91e36f4d16cf3c7b" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>SetMaxSize</name></member>
      <member refid="classwx_window_1a6e35ba44b97e374dfffa460d41d94b31" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>SetMinClientSize</name></member>
      <member refid="classwx_top_level_window_1ac491313979c027b67526786b06167e6d" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>SetMinSize</name></member>
      <member refid="classwx_window_1af80875cda5e1af98dcd7c8e712e3c800" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>SetName</name></member>
      <member refid="classwx_window_1aeab905f61df7004c1b76a3351dca9e96" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>SetNextHandler</name></member>
      <member refid="classwx_window_1a9a3f9d8477aab1d9176cd66ee56e75d9" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>SetOwnBackgroundColour</name></member>
      <member refid="classwx_window_1a89a4f62f23c1e7c845b8d07cecae4c43" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>SetOwnFont</name></member>
      <member refid="classwx_window_1a53f4a878e4e2d440bd00543f8014aaaa" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>SetOwnForegroundColour</name></member>
      <member refid="classwx_window_1aee57358435d6bd33f598c81354b47425" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>SetPalette</name></member>
      <member refid="classwx_window_1a81f23590239934fa10fded0566a65d8c" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>SetPosition</name></member>
      <member refid="classwx_window_1a07f5f7ed3f78e0ef7b3dee3f4da81001" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>SetPreviousHandler</name></member>
      <member refid="classwx_object_1afab780710f2adc1bb33310e27590140b" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>SetRefData</name></member>
      <member refid="classwx_top_level_window_1a82afa6f09dd5faef6330807ef59374e8" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>SetRepresentedFilename</name></member>
      <member refid="classwx_top_level_window_1a98e95b1b10f44b80f9b29a03ab09a879" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>SetRightMenu</name></member>
      <member refid="classwx_window_1aa842d59529f873683e55cd8392ec46e9" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>SetScrollbar</name></member>
      <member refid="classwx_window_1afbf4dc9064cf70cfe6884554b97a27bf" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>SetScrollPos</name></member>
      <member refid="classwx_non_owned_window_1a7f223eadbd72caea66efcb0b55e89613" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>SetShape</name></member>
      <member refid="classwx_non_owned_window_1aa3c3e3fe90bd1b20407262157a593de7" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>SetShape</name></member>
      <member refid="classwx_window_1a180312d5ad4a4a5ad805b8d52d67a74e" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>SetSize</name></member>
      <member refid="classwx_window_1a8e383bc6d5ca008965922a36c676aea0" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>SetSize</name></member>
      <member refid="classwx_window_1a030a928cd854de3def97c5720f14695b" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>SetSize</name></member>
      <member refid="classwx_window_1a2ea9b25296d591aea4470c8fd99ff7cb" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>SetSize</name></member>
      <member refid="classwx_top_level_window_1ac01a45e5d82e4e3be22a4841c1217e11" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>SetSizeHints</name></member>
      <member refid="classwx_top_level_window_1a4ddaae1bebf05a2bc474a192a5b30e42" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>SetSizeHints</name></member>
      <member refid="classwx_window_1abc95691b45e29a52c24aa9d33d46dec1" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>SetSizer</name></member>
      <member refid="classwx_window_1a29938af9828fd35da666536cdfb6b73c" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>SetSizerAndFit</name></member>
      <member refid="classwx_window_1a41dd19ed8809fd8ec662e2aa2a9579c3" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>SetThemeEnabled</name></member>
      <member refid="classwx_top_level_window_1afb944376c19d735a8251654ee4ac276f" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>SetTitle</name></member>
      <member refid="classwx_top_level_window_1a03d21174f2a9a527d6483c7562339167" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>SetTmpDefaultItem</name></member>
      <member refid="classwx_window_1a81a9fb74e3c6c7f4416e882f5e589b8c" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>SetToolTip</name></member>
      <member refid="classwx_window_1a494e0b7cfca9299caa40e847767e7357" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>SetToolTip</name></member>
      <member refid="classwx_top_level_window_1a8e37aff45a001a83ff49745298a6978e" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>SetTransparent</name></member>
      <member refid="classwx_window_1a00066c70049a7be3ce6b648d206e6432" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>SetValidator</name></member>
      <member refid="classwx_window_1a37f293b7904bc6668b86cccb0aea5669" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>SetVirtualSize</name></member>
      <member refid="classwx_window_1a8e95201edebe43b9623bd3bdc555af4d" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>SetVirtualSize</name></member>
      <member refid="classwx_window_1a306af30adec68689f74ed537b4f9d5fd" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>SetWindowStyle</name></member>
      <member refid="classwx_window_1aee2cf342f80523432e7f2299d299451b" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>SetWindowStyleFlag</name></member>
      <member refid="classwx_window_1acd955418c336e73b3e32cadf1ca46e29" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>SetWindowVariant</name></member>
      <member refid="classwx_window_1aa51b169745cda1746c1a45b4ffe3217a" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>ShouldInheritColours</name></member>
      <member refid="classwx_top_level_window_1a2491f400227cedfc5140f68dbea46f27" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>ShouldPreventAppExit</name></member>
      <member refid="classwx_window_1a7fbc92ce240a8d4f6956b6e0276ef07f" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>Show</name></member>
      <member refid="classwx_top_level_window_1ab4089f1274bcb74e5f7763d1fb84ee28" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>ShowFullScreen</name></member>
      <member refid="classwx_window_1a596b1715edfc7609f352b2e000ecbaec" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>ShowWithEffect</name></member>
      <member refid="classwx_top_level_window_1a03e526f505716568318d601318527bd0" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>ShowWithoutActivating</name></member>
      <member refid="classwx_window_1a279a532124073261b28131b6afb59a1e" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>Thaw</name></member>
      <member refid="classwx_window_1a8a4fa47129de552bfec37db8c69688a2" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>ToggleWindowStyle</name></member>
      <member refid="classwx_window_1ab8e51f36e7d8790b361c8d8c6f37b1ad" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>TransferDataFromWindow</name></member>
      <member refid="classwx_window_1a88cc65e424a129d9b0057756cdb67ec9" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>TransferDataToWindow</name></member>
      <member refid="classwx_evt_handler_1a5e25fece1cb6cbc11fd1d41ec140319c" prot="protected" virt="virtual"><scope>wxTopLevelWindow</scope><name>TryAfter</name></member>
      <member refid="classwx_evt_handler_1ad4b0eac704dd005ac6a88fdb1e673c13" prot="protected" virt="virtual"><scope>wxTopLevelWindow</scope><name>TryBefore</name></member>
      <member refid="classwx_evt_handler_1a2b7df8272075a96daea78cdd799c00da" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>Unbind</name></member>
      <member refid="classwx_evt_handler_1aa49f9c4ad4462456b4fe4bd1ab53533d" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>Unbind</name></member>
      <member refid="classwx_evt_handler_1a22e5db2ec1d19c8252c056fd116975d7" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>Unlink</name></member>
      <member refid="classwx_object_1af51efc6b1ae632fc7f0cd7ebbce9fa36" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>UnRef</name></member>
      <member refid="classwx_window_1a695f60d65f8f6c12e3c3645ad9c0c35b" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>UnregisterHotKey</name></member>
      <member refid="classwx_window_1ad9bc342d1e38d221e37f0f6396950c8c" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>UnreserveControlId</name></member>
      <member refid="classwx_window_1ae75712451673658b0a533480bf5eeaa4" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>UnsetToolTip</name></member>
      <member refid="classwx_object_1a74b40e42d19a4b9e9bec0b57d62a5725" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>UnShare</name></member>
      <member refid="classwx_window_1abaf28f1a075fd1b10f761a8febe597ec" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>Update</name></member>
      <member refid="classwx_window_1adf0a4987728bd0bf69f922641b3efbfc" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>UpdateWindowUI</name></member>
      <member refid="classwx_window_1a9131e424ddc3b332a08377e5ad713c60" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>UseBgCol</name></member>
      <member refid="classwx_top_level_window_1a4d13f215c9b4fbad26fced00eff20d90" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>UseNativeDecorations</name></member>
      <member refid="classwx_top_level_window_1afd809e099fdd7cef3d9892167a477531" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>UseNativeDecorationsByDefault</name></member>
      <member refid="classwx_window_1ac87f253253a0c5eb498871c83afa40fd" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>Validate</name></member>
      <member refid="classwx_window_1ac500152d1eca3a2ee98a68e7ea7372b5" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>WarpPointer</name></member>
      <member refid="classwx_window_1a75e9c29023e441305574056cd5a725ff" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>WindowToClientSize</name></member>
      <member refid="classwx_evt_handler_1a3f0166c4154227d05575b01eb2c8d4be" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>wxEvtHandler</name></member>
      <member refid="classwx_object_1acaa378363a28af421ab56ad7b46eadf0" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>wxObject</name></member>
      <member refid="classwx_object_1a4721b4dc9b7aff0f30904ba2ea3954cf" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>wxObject</name></member>
      <member refid="classwx_top_level_window_1abb919ad585057de6fce94bb7d5497256" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>wxTopLevelWindow</name></member>
      <member refid="classwx_top_level_window_1abddbaa0d42b46847b679464b485654be" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>wxTopLevelWindow</name></member>
      <member refid="classwx_window_1a695200a4915b934926dcf32afa44544c" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>wxWindow</name></member>
      <member refid="classwx_window_1a7799009b10d1765d1bbb6db4994f922e" prot="public" virt="non-virtual"><scope>wxTopLevelWindow</scope><name>wxWindow</name></member>
      <member refid="classwx_evt_handler_1a372d2239d91521eddc8fd2715fcab584" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>~wxEvtHandler</name></member>
      <member refid="classwx_object_1a2a51aa8bfbab47ca2f051bcf84b3f35b" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>~wxObject</name></member>
      <member refid="classwx_top_level_window_1a643df4d651b5394b8a674067aef4dd04" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>~wxTopLevelWindow</name></member>
      <member refid="classwx_window_1a0c2a46181a89c349327f0b276f5ef8d7" prot="public" virt="virtual"><scope>wxTopLevelWindow</scope><name>~wxWindow</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
