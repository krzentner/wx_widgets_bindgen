<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classwx_system_colour_property" kind="class" language="C++" prot="public">
    <compoundname>wxSystemColourProperty</compoundname>
    <basecompoundref refid="classwx_enum_property" prot="public" virt="non-virtual">wxEnumProperty</basecompoundref>
    <derivedcompoundref refid="classwx_colour_property" prot="public" virt="non-virtual">wxColourProperty</derivedcompoundref>
    <includes local="no">wx/propgrid/advprops.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_system_colour_property_1a62cddb0cf44f3d4bf1926dcd069c33ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxSystemColourProperty::wxSystemColourProperty</definition>
        <argsstring>(const wxString &amp;label=wxPG_LABEL, const wxString &amp;name=wxPG_LABEL, const wxColourPropertyValue &amp;value=wxColourPropertyValue())</argsstring>
        <name>wxSystemColourProperty</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>label</declname>
          <defval><ref refid="propgriddefs_8h_1a02064e949a659998a5b05d94a5203158" kindref="member">wxPG_LABEL</ref></defval>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>name</declname>
          <defval><ref refid="propgriddefs_8h_1a02064e949a659998a5b05d94a5203158" kindref="member">wxPG_LABEL</ref></defval>
        </param>
        <param>
          <type>const <ref refid="classwx_colour_property_value" kindref="compound">wxColourPropertyValue</ref> &amp;</type>
          <declname>value</declname>
          <defval><ref refid="classwx_colour_property_value" kindref="compound">wxColourPropertyValue</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/propgrid/advprops.h" line="103" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_system_colour_property_1ae396b45a85d926283e1b7c64d7d9c4d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual wxSystemColourProperty::~wxSystemColourProperty</definition>
        <argsstring>()</argsstring>
        <name>~wxSystemColourProperty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/propgrid/advprops.h" line="107" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_system_colour_property_1ab5a97bd1acae0a58fa96f8282d89b4e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxSystemColourProperty::OnSetValue</definition>
        <argsstring>()</argsstring>
        <name>OnSetValue</name>
        <reimplements refid="classwx_enum_property_1aff291eff039c6ce9c48099a1149dad21">OnSetValue</reimplements>
        <briefdescription>
<para>This virtual function is called after m_value has been set. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="remark"><para><itemizedlist>
<listitem><para>If m_value was set to Null variant (ie. unspecified value), <ref refid="classwx_system_colour_property_1ab5a97bd1acae0a58fa96f8282d89b4e9" kindref="member">OnSetValue()</ref> will not be called.</para></listitem><listitem><para>m_value may be of any variant type. Typically properties internally support only one variant type, and as such <ref refid="classwx_system_colour_property_1ab5a97bd1acae0a58fa96f8282d89b4e9" kindref="member">OnSetValue()</ref> provides a good opportunity to convert supported values into internal type.</para></listitem><listitem><para>Default implementation does nothing. </para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/propgrid/advprops.h" line="109" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_system_colour_property_1a1ea31aab3faebeeba2931fe409e44a47" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxSystemColourProperty::IntToValue</definition>
        <argsstring>(wxVariant &amp;variant, int number, int argFlags=0) const</argsstring>
        <name>IntToValue</name>
        <reimplements refid="classwx_enum_property_1ae4d50a667e10ebd70a5aac5aa69cbaed">IntToValue</reimplements>
        <param>
          <type><ref refid="classwx_variant" kindref="compound">wxVariant</ref> &amp;</type>
          <declname>variant</declname>
        </param>
        <param>
          <type>int</type>
          <declname>number</declname>
        </param>
        <param>
          <type>int</type>
          <declname>argFlags</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Converts integer (possibly a choice selection) into <ref refid="classwx_variant" kindref="compound">wxVariant</ref> value appropriate for this property. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>variant</parametername>
</parameternamelist>
<parameterdescription>
<para>On function entry this is the old value (should not be wxNullVariant in normal cases). Translated value must be assigned back to it. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>number</parametername>
</parameternamelist>
<parameterdescription>
<para>Integer to be translated into variant. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>argFlags</parametername>
</parameternamelist>
<parameterdescription>
<para>If wxPG_FULL_VALUE is set, returns complete, storable value instead of displayable one.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns true if resulting <ref refid="classwx_variant" kindref="compound">wxVariant</ref> value was different.</para></simplesect>
<simplesect kind="remark"><para><itemizedlist>
<listitem><para>If property is not supposed to use choice or spinctrl or other editor with int-based value, it is not necessary to implement this method.</para></listitem><listitem><para>Default implementation simply assign given int to m_value.</para></listitem><listitem><para>If property uses choice control, and displays a dialog on some choice items, then it is preferred to display that dialog in IntToValue instead of OnEvent.</para></listitem><listitem><para>You might want to take into account that m_value is Mull variant if property value is unspecified (which is usually only case if you explicitly enabled that sort behaviour). </para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/propgrid/advprops.h" line="110" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_system_colour_property_1a4e260dc29b853760773efa0bd91de503" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>virtual wxString wxSystemColourProperty::ColourToString</definition>
        <argsstring>(const wxColour &amp;col, int index, int argFlags=0) const</argsstring>
        <name>ColourToString</name>
        <param>
          <type>const <ref refid="classwx_colour" kindref="compound">wxColour</ref> &amp;</type>
          <declname>col</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>int</type>
          <declname>argFlags</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Override in derived class to customize how colours are printed as strings. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/propgrid/advprops.h" line="118" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_system_colour_property_1a8f554f493d0e687da84a01b473f919db" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>virtual int wxSystemColourProperty::GetCustomColourIndex</definition>
        <argsstring>() const</argsstring>
        <name>GetCustomColourIndex</name>
        <briefdescription>
<para>Returns index of entry that triggers colour picker dialog (default is last). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/propgrid/advprops.h" line="124" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_system_colour_property_1ab547829eac808ba0410637ae8ed1d89c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>virtual wxString wxSystemColourProperty::ValueToString</definition>
        <argsstring>(wxVariant &amp;value, int argFlags=0) const</argsstring>
        <name>ValueToString</name>
        <reimplements refid="classwx_enum_property_1a4261a5e215e7356635b3c3df1d287709">ValueToString</reimplements>
        <reimplementedby refid="classwx_colour_property_1abb403c1636cf765f52f846c18d95aaf1">ValueToString</reimplementedby>
        <param>
          <type><ref refid="classwx_variant" kindref="compound">wxVariant</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>argFlags</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Converts property value into a text representation. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Value to be converted. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>argFlags</parametername>
</parameternamelist>
<parameterdescription>
<para>If 0 (default value), then displayed string is returned. If wxPG_FULL_VALUE is set, returns complete, storable string value instead of displayable. If wxPG_EDITABLE_VALUE is set, returns string value that must be editable in textctrl. If wxPG_COMPOSITE_FRAGMENT is set, returns text that is appropriate to display as a part of string property&apos;s composite text representation.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="remark"><para>Default implementation calls <ref refid="classwx_p_g_property_1a8f9d8bc9c2c878177e617af5ca3d6690" kindref="member">GenerateComposedValue()</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/propgrid/advprops.h" line="126" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_system_colour_property_1a6772706c3aa925778ece6a4ef53f959c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxSystemColourProperty::StringToValue</definition>
        <argsstring>(wxVariant &amp;variant, const wxString &amp;text, int argFlags=0) const</argsstring>
        <name>StringToValue</name>
        <reimplements refid="classwx_enum_property_1ab407bf862d31cc87547df6d29c2a8977">StringToValue</reimplements>
        <param>
          <type><ref refid="classwx_variant" kindref="compound">wxVariant</ref> &amp;</type>
          <declname>variant</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>text</declname>
        </param>
        <param>
          <type>int</type>
          <declname>argFlags</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Converts text into <ref refid="classwx_variant" kindref="compound">wxVariant</ref> value appropriate for this property. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>variant</parametername>
</parameternamelist>
<parameterdescription>
<para>On function entry this is the old value (should not be wxNullVariant in normal cases). Translated value must be assigned back to it.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>text</parametername>
</parameternamelist>
<parameterdescription>
<para>Text to be translated into variant.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>argFlags</parametername>
</parameternamelist>
<parameterdescription>
<para>If wxPG_FULL_VALUE is set, returns complete, storable value instead of displayable one (they may be different). If wxPG_COMPOSITE_FRAGMENT is set, text is interpreted as a part of composite property string value (as generated by <ref refid="classwx_system_colour_property_1ab547829eac808ba0410637ae8ed1d89c" kindref="member">ValueToString()</ref> called with this same flag).</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns true if resulting <ref refid="classwx_variant" kindref="compound">wxVariant</ref> value was different.</para></simplesect>
<simplesect kind="remark"><para>Default implementation converts semicolon delimited tokens into child values. Only works for properties with children.</para></simplesect>
You might want to take into account that m_value is Null variant if property value is unspecified (which is usually only case if you explicitly enabled that sort behaviour). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/propgrid/advprops.h" line="127" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_system_colour_property_1ab00d87fa2c6dee99480849180b70ab4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxSystemColourProperty::OnEvent</definition>
        <argsstring>(wxPropertyGrid *propgrid, wxWindow *primary, wxEvent &amp;event)</argsstring>
        <name>OnEvent</name>
        <reimplements refid="classwx_p_g_property_1a16fbe26240bf47ab0a9a02d21781da73">OnEvent</reimplements>
        <param>
          <type><ref refid="classwx_property_grid" kindref="compound">wxPropertyGrid</ref> *</type>
          <declname>propgrid</declname>
        </param>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>wnd_primary</declname>
        </param>
        <param>
          <type><ref refid="classwx_event" kindref="compound">wxEvent</ref> &amp;</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Events received by editor widgets are processed here. </para>        </briefdescription>
        <detaileddescription>
<para>Note that editor class usually processes most events. Some, such as button press events of TextCtrlAndButton class, can be handled here. Also, if custom handling for regular events is desired, then that can also be done (for example, <ref refid="classwx_system_colour_property" kindref="compound">wxSystemColourProperty</ref> custom handles <computeroutput>wxEVT_CHOICE</computeroutput> to display colour picker dialog when &apos;custom&apos; selection is made).</para><para>If the event causes value to be changed, <ref refid="classwx_p_g_property_1ae3fbf828db909d9d03f3fd9577cf46b0" kindref="member">SetValueInEvent()</ref> should be called to set the new value.</para><para>The parameter <emphasis>event</emphasis> is the associated <ref refid="classwx_event" kindref="compound">wxEvent</ref>.</para><para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>Should</parametername>
</parameternamelist>
<parameterdescription>
<para>return true if any changes in value should be reported.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="remark"><para><itemizedlist>
<listitem><para>If property uses choice control, and displays a dialog on some choice items, then it is preferred to display that dialog in IntToValue instead of OnEvent. </para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/propgrid/advprops.h" line="130" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_system_colour_property_1ae94861630099e15274e7fb73c6acbeec" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxSystemColourProperty::DoSetAttribute</definition>
        <argsstring>(const wxString &amp;name, wxVariant &amp;value)</argsstring>
        <name>DoSetAttribute</name>
        <reimplements refid="classwx_p_g_property_1a7d355ae4bd55f00bc149e5416c39908c">DoSetAttribute</reimplements>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="classwx_variant" kindref="compound">wxVariant</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Reimplement this member function to add special handling for attributes of this property. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Return false to have the attribute automatically stored in m_attributes. Default implementation simply does that and nothing else.</para></simplesect>
<simplesect kind="remark"><para>To actually set property attribute values from the application, use <ref refid="classwx_p_g_property_1a418c1539969b7a0a9378a3411a5680a6" kindref="member">wxPGProperty::SetAttribute()</ref> instead. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/propgrid/advprops.h" line="132" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_system_colour_property_1a707feef3f99bdc88a37d11ac5d5b9a1f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_size" kindref="compound">wxSize</ref></type>
        <definition>virtual wxSize wxSystemColourProperty::OnMeasureImage</definition>
        <argsstring>(int item) const</argsstring>
        <name>OnMeasureImage</name>
        <reimplements refid="classwx_p_g_property_1a657720f3794b4bab1bb7658dc9aa905c">OnMeasureImage</reimplements>
        <param>
          <type>int</type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Returns size of the custom painted image in front of property. </para>        </briefdescription>
        <detaileddescription>
<para>This method must be overridden to return non-default value if OnCustomPaint is to be called.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>item</parametername>
</parameternamelist>
<parameterdescription>
<para>Normally -1, but can be an index to the property&apos;s list of items.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="remark"><para><itemizedlist>
<listitem><para>Default behaviour is to return <ref refid="classwx_size" kindref="compound">wxSize(0,0)</ref>, which means no image.</para></listitem><listitem><para>Default image width or height is indicated with dimension -1.</para></listitem><listitem><para>You can also return wxPG_DEFAULT_IMAGE_SIZE which equals <ref refid="classwx_size" kindref="compound">wxSize</ref>(-1, -1). </para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/propgrid/advprops.h" line="133" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_system_colour_property_1a9951df68b356ad59a51f3cf8910c88fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxSystemColourProperty::OnCustomPaint</definition>
        <argsstring>(wxDC &amp;dc, const wxRect &amp;rect, wxPGPaintData &amp;paintdata)</argsstring>
        <name>OnCustomPaint</name>
        <reimplements refid="classwx_p_g_property_1ad0b00df4a3916cb80adfa1227c70baf4">OnCustomPaint</reimplements>
        <param>
          <type><ref refid="classwx_d_c" kindref="compound">wxDC</ref> &amp;</type>
          <declname>dc</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_rect" kindref="compound">wxRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type><ref refid="structwx_p_g_paint_data" kindref="compound">wxPGPaintData</ref> &amp;</type>
          <declname>paintdata</declname>
        </param>
        <briefdescription>
<para>Override to paint an image in front of the property value text or drop-down list item (but only if <ref refid="classwx_p_g_property_1a657720f3794b4bab1bb7658dc9aa905c" kindref="member">wxPGProperty::OnMeasureImage</ref> is overridden as well). </para>        </briefdescription>
        <detaileddescription>
<para>If property&apos;s <ref refid="classwx_system_colour_property_1a707feef3f99bdc88a37d11ac5d5b9a1f" kindref="member">OnMeasureImage()</ref> returns size that has height != 0 but less than row height ( &lt; 0 has special meanings), <ref refid="classwx_property_grid" kindref="compound">wxPropertyGrid</ref> calls this method to draw a custom image in a limited area in front of the editor control or value text/graphics, and if control has drop-down list, then the image is drawn there as well (even in the case <ref refid="classwx_system_colour_property_1a707feef3f99bdc88a37d11ac5d5b9a1f" kindref="member">OnMeasureImage()</ref> returned higher height than row height).</para><para>NOTE: Following applies when <ref refid="classwx_system_colour_property_1a707feef3f99bdc88a37d11ac5d5b9a1f" kindref="member">OnMeasureImage()</ref> returns a &quot;flexible&quot; height ( using wxPG_FLEXIBLE_SIZE(W,H) macro), which implies variable height items: If rect.x is &lt; 0, then this is a measure item call, which means that dc is invalid and only thing that should be done is to set paintdata.m_drawnHeight to the height of the image of item at index paintdata.m_choiceItem. This call may be done even as often as once every drop-down popup show.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dc</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classwx_d_c" kindref="compound">wxDC</ref> to paint on. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rect</parametername>
</parameternamelist>
<parameterdescription>
<para>Box reserved for custom graphics. Includes surrounding rectangle, if any. If x is &lt; 0, then this is a measure item call (see above). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>paintdata</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structwx_p_g_paint_data" kindref="compound">wxPGPaintData</ref> structure with much useful data about painted item. <programlisting><codeline><highlight class="normal">struct<sp/>wxPGPaintData</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>wxPropertyGrid.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/>wxPropertyGrid*<sp/><sp/><sp/>m_parent;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Normally<sp/>-1,<sp/>otherwise<sp/>index<sp/>to<sp/>drop-down<sp/>list<sp/>item<sp/>that<sp/>has<sp/>to<sp/>be<sp/>drawn.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_choiceItem;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Set<sp/>to<sp/>drawn<sp/>width<sp/>in<sp/>OnCustomPaint<sp/>(optional).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_drawnWidth;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>In<sp/>a<sp/>measure<sp/>item<sp/>call,<sp/>set<sp/>this<sp/>to<sp/>the<sp/>height<sp/>of<sp/>item<sp/>at<sp/>m_choiceItem<sp/>index</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_drawnHeight;</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="remark"><para><itemizedlist>
<listitem><para>You can actually exceed rect width, but if you do so then paintdata.m_drawnWidth must be set to the full width drawn in pixels.</para></listitem><listitem><para>Due to technical reasons, rect&apos;s height will be default even if custom height was reported during measure call.</para></listitem><listitem><para>Brush is guaranteed to be default background colour. It has been already used to clear the background of area being painted. It can be modified.</para></listitem><listitem><para>Pen is guaranteed to be 1-wide &apos;black&apos; (or whatever is the proper colour) pen for drawing framing rectangle. It can be changed as well.</para></listitem></itemizedlist>
</para></simplesect>
<simplesect kind="see"><para><ref refid="classwx_system_colour_property_1ab547829eac808ba0410637ae8ed1d89c" kindref="member">ValueToString()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/propgrid/advprops.h" line="134" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_system_colour_property_1ad94022eb075e4d03e25a24753fdb191f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxSystemColourProperty::QueryColourFromUser</definition>
        <argsstring>(wxVariant &amp;variant) const</argsstring>
        <name>QueryColourFromUser</name>
        <param>
          <type><ref refid="classwx_variant" kindref="compound">wxVariant</ref> &amp;</type>
          <declname>variant</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/propgrid/advprops.h" line="138" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_system_colour_property_1a229b482777e2fb69e51b4d7be4945117" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_colour" kindref="compound">wxColour</ref></type>
        <definition>virtual wxColour wxSystemColourProperty::GetColour</definition>
        <argsstring>(int index) const</argsstring>
        <name>GetColour</name>
        <reimplementedby refid="classwx_colour_property_1a73edd597e720fa5189c90d6ecabb9ba8">GetColour</reimplementedby>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Default is to use wxSystemSettings::GetColour(index). </para>        </briefdescription>
        <detaileddescription>
<para>Override to use custom colour tables etc. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/propgrid/advprops.h" line="143" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_system_colour_property_1a2c8ee9182075022a9e5c8220fc43a9a6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_colour_property_value" kindref="compound">wxColourPropertyValue</ref></type>
        <definition>wxColourPropertyValue wxSystemColourProperty::GetVal</definition>
        <argsstring>(const wxVariant *pVariant=NULL) const</argsstring>
        <name>GetVal</name>
        <param>
          <type>const <ref refid="classwx_variant" kindref="compound">wxVariant</ref> *</type>
          <declname>pVariant</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/propgrid/advprops.h" line="145" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classwx_system_colour_property_1aa4c3353773362a2a14e132bc77e6496f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxSystemColourProperty::wxSystemColourProperty</definition>
        <argsstring>(const wxString &amp;label, const wxString &amp;name, const wxChar *const *labels, const long *values, wxPGChoices *choicesCache, const wxColourPropertyValue &amp;value)</argsstring>
        <name>wxSystemColourProperty</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>label</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="group__group__funcmacro__string_1gad42f64d8c82f1ce4ae58773a89b2d6a7" kindref="member">wxChar</ref> *const *</type>
          <declname>labels</declname>
        </param>
        <param>
          <type>const long *</type>
          <declname>values</declname>
        </param>
        <param>
          <type><ref refid="classwx_p_g_choices" kindref="compound">wxPGChoices</ref> *</type>
          <declname>choicesCache</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_colour_property_value" kindref="compound">wxColourPropertyValue</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/propgrid/advprops.h" line="150" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_system_colour_property_1ad86a2ef9f6275e360d2eb5da55841a86" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxSystemColourProperty::wxSystemColourProperty</definition>
        <argsstring>(const wxString &amp;label, const wxString &amp;name, const wxChar *const *labels, const long *values, wxPGChoices *choicesCache, const wxColour &amp;value)</argsstring>
        <name>wxSystemColourProperty</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>label</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="group__group__funcmacro__string_1gad42f64d8c82f1ce4ae58773a89b2d6a7" kindref="member">wxChar</ref> *const *</type>
          <declname>labels</declname>
        </param>
        <param>
          <type>const long *</type>
          <declname>values</declname>
        </param>
        <param>
          <type><ref refid="classwx_p_g_choices" kindref="compound">wxPGChoices</ref> *</type>
          <declname>choicesCache</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_colour" kindref="compound">wxColour</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/propgrid/advprops.h" line="154" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_system_colour_property_1a132e4331c322bd182f033e3703138320" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxSystemColourProperty::Init</definition>
        <argsstring>(int type, const wxColour &amp;colour)</argsstring>
        <name>Init</name>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_colour" kindref="compound">wxColour</ref> &amp;</type>
          <declname>colour</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/propgrid/advprops.h" line="158" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_system_colour_property_1a9565e2db0c62509160772129bd22393f" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_variant" kindref="compound">wxVariant</ref></type>
        <definition>virtual wxVariant wxSystemColourProperty::DoTranslateVal</definition>
        <argsstring>(wxColourPropertyValue &amp;v) const</argsstring>
        <name>DoTranslateVal</name>
        <reimplementedby refid="classwx_colour_property_1a6a3c6ce2537957a3c31d70cd98ef2651">DoTranslateVal</reimplementedby>
        <param>
          <type><ref refid="classwx_colour_property_value" kindref="compound">wxColourPropertyValue</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/propgrid/advprops.h" line="161" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_system_colour_property_1aef408ea98c049ae9e1a21505493ba772" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_variant" kindref="compound">wxVariant</ref></type>
        <definition>wxVariant wxSystemColourProperty::TranslateVal</definition>
        <argsstring>(wxColourPropertyValue &amp;v) const</argsstring>
        <name>TranslateVal</name>
        <param>
          <type><ref refid="classwx_colour_property_value" kindref="compound">wxColourPropertyValue</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/propgrid/advprops.h" line="162" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_system_colour_property_1af595e86c0c06212d451c46b68c748a01" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_variant" kindref="compound">wxVariant</ref></type>
        <definition>wxVariant wxSystemColourProperty::TranslateVal</definition>
        <argsstring>(int type, const wxColour &amp;colour) const</argsstring>
        <name>TranslateVal</name>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_colour" kindref="compound">wxColour</ref> &amp;</type>
          <declname>colour</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/propgrid/advprops.h" line="163" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_system_colour_property_1a288d9033947c35c4e7a6c9d129d7df75" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxSystemColourProperty::ColToInd</definition>
        <argsstring>(const wxColour &amp;colour) const</argsstring>
        <name>ColToInd</name>
        <param>
          <type>const <ref refid="classwx_colour" kindref="compound">wxColour</ref> &amp;</type>
          <declname>colour</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/propgrid/advprops.h" line="166" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Has dropdown list of wxWidgets system colours. </para>    </briefdescription>
    <detaileddescription>
<para>Value used is of <ref refid="classwx_colour_property_value" kindref="compound">wxColourPropertyValue</ref> type. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="7731">
        <label>wxEnumProperty</label>
        <link refid="classwx_enum_property"/>
        <childnode refid="7732" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7732">
        <label>wxPGProperty</label>
        <link refid="classwx_p_g_property"/>
        <childnode refid="7733" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7733">
        <label>wxObject</label>
        <link refid="classwx_object"/>
      </node>
      <node id="7730">
        <label>wxSystemColourProperty</label>
        <link refid="classwx_system_colour_property"/>
        <childnode refid="7731" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7734">
        <label>wxColourProperty</label>
        <link refid="classwx_colour_property"/>
        <childnode refid="7730" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="7736">
        <label>wxEnumProperty</label>
        <link refid="classwx_enum_property"/>
        <childnode refid="7737" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7737">
        <label>wxPGProperty</label>
        <link refid="classwx_p_g_property"/>
        <childnode refid="7738" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7738">
        <label>wxObject</label>
        <link refid="classwx_object"/>
        <childnode refid="7739" relation="usage">
          <edgelabel>m_refData</edgelabel>
        </childnode>
      </node>
      <node id="7735">
        <label>wxSystemColourProperty</label>
        <link refid="classwx_system_colour_property"/>
        <childnode refid="7736" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7739">
        <label>wxObjectRefData</label>
        <link refid="classwx_object_ref_data"/>
      </node>
    </collaborationgraph>
    <location file="interface/wx/propgrid/advprops.h" line="100" column="1" bodyfile="interface/wx/propgrid/advprops.h" bodystart="99" bodyend="167"/>
    <listofallmembers>
      <member refid="classwx_p_g_property_1a9b3e8f6de3b5181c59b9cbb3e57190aa" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>AdaptListToValue</name></member>
      <member refid="classwx_p_g_property_1a6797d35591eb3d6e63067d7d073c445f" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>AddChild</name></member>
      <member refid="classwx_p_g_property_1ab58afbdcd83f0626f44d152127038a89" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>AddChoice</name></member>
      <member refid="classwx_p_g_property_1abec97e799f836560d4f65c7c5fc97f6f" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>AddPrivateChild</name></member>
      <member refid="classwx_object_1a60204063f3cc3aa2fa1c7ff5bda9eb13" prot="protected" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>AllocExclusive</name></member>
      <member refid="classwx_p_g_property_1a77549498512cfa99b3b3e2c4317d5b70" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>AppendChild</name></member>
      <member refid="classwx_p_g_property_1a820e92441533ff9993e1fdc4a2cf4edd" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>AreAllChildrenSpecified</name></member>
      <member refid="classwx_p_g_property_1abec412a241710b989f25b8e647b1f237" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>AreChildrenComponents</name></member>
      <member refid="classwx_p_g_property_1a8cebe6f162709ab46c878f9c4e7b53a4" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>ChangeFlag</name></member>
      <member refid="classwx_p_g_property_1ac9aab64d5c202eab40e17bff29e6b132" prot="public" virt="virtual"><scope>wxSystemColourProperty</scope><name>ChildChanged</name></member>
      <member refid="classwx_p_g_property_1a2268814902bae1eb9e593c5e127001cb" prot="protected" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>ClearFlag</name></member>
      <member refid="classwx_object_1a436fc8fe68cf8a31000296d9cd3d2427" prot="protected" virt="virtual"><scope>wxSystemColourProperty</scope><name>CloneRefData</name></member>
      <member refid="classwx_system_colour_property_1a4e260dc29b853760773efa0bd91de503" prot="public" virt="virtual"><scope>wxSystemColourProperty</scope><name>ColourToString</name></member>
      <member refid="classwx_system_colour_property_1a288d9033947c35c4e7a6c9d129d7df75" prot="protected" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>ColToInd</name></member>
      <member refid="classwx_object_1a3f4f497c65cef611e121c41f21dd5ccc" prot="protected" virt="virtual"><scope>wxSystemColourProperty</scope><name>CreateRefData</name></member>
      <member refid="classwx_p_g_property_1aa8d29e4896c228f93d14fe2420c99f36" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>DeleteChildren</name></member>
      <member refid="classwx_p_g_property_1a137f1b7ea16f1f18fcc3e50ec107da1f" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>DeleteChoice</name></member>
      <member refid="classwx_p_g_property_1a3630728011e4b973ae8173f235554fa3" prot="public" virt="virtual"><scope>wxSystemColourProperty</scope><name>DoGetAttribute</name></member>
      <member refid="classwx_p_g_property_1a26f2c9e5945b426fc6188a82893ba8c0" prot="public" virt="virtual"><scope>wxSystemColourProperty</scope><name>DoGetEditorClass</name></member>
      <member refid="classwx_p_g_property_1a9104d087b0a8002df8ca5f1dd01d6a9d" prot="public" virt="virtual"><scope>wxSystemColourProperty</scope><name>DoGetValidator</name></member>
      <member refid="classwx_p_g_property_1af98ae209886b9e26afe2ee767433283a" prot="public" virt="virtual"><scope>wxSystemColourProperty</scope><name>DoGetValue</name></member>
      <member refid="classwx_system_colour_property_1ae94861630099e15274e7fb73c6acbeec" prot="public" virt="virtual"><scope>wxSystemColourProperty</scope><name>DoSetAttribute</name></member>
      <member refid="classwx_system_colour_property_1a9565e2db0c62509160772129bd22393f" prot="protected" virt="virtual"><scope>wxSystemColourProperty</scope><name>DoTranslateVal</name></member>
      <member refid="classwx_p_g_property_1abcd8337b04de4934c15b81e4470c5919" prot="protected" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>Empty</name></member>
      <member refid="classwx_p_g_property_1aa024322106dfb1300ed68919c27dd1e1" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>Enable</name></member>
      <member refid="classwx_p_g_property_1a2993285be09f66ae59cdc2fbffe50296" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>EnableCommonValue</name></member>
      <member refid="classwx_p_g_property_1a68b0ae8aab37c387f5fc4b7e9c53968e" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>FlagType</name></member>
      <member refid="classwx_p_g_property_1a8f9d8bc9c2c878177e617af5ca3d6690" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>GenerateComposedValue</name></member>
      <member refid="classwx_p_g_property_1a511ffede21ed4ddd266bb939fc4fd2b5" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>GetAttribute</name></member>
      <member refid="classwx_p_g_property_1a953b7b8018149b3512c90c5c4073c910" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>GetAttribute</name></member>
      <member refid="classwx_p_g_property_1a0b55052ad7668fdbe6eac6f7be16e377" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>GetAttributeAsDouble</name></member>
      <member refid="classwx_p_g_property_1a0ebc8b72bea31f5ab1f3ecdc28a269b8" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>GetAttributeAsLong</name></member>
      <member refid="classwx_p_g_property_1a1d042e1abf963cf7428fbe58e88de064" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>GetAttributes</name></member>
      <member refid="classwx_p_g_property_1a0c79a8fcf4f427ada0034f7d624aae1c" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>GetAttributesAsList</name></member>
      <member refid="classwx_p_g_property_1a0711e2a8e3a2b67944fef2fcaff290fc" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>GetBaseName</name></member>
      <member refid="classwx_p_g_property_1ab8ae1b21e93fda9e560fcb5ec2f50bb2" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>GetCell</name></member>
      <member refid="classwx_p_g_property_1aca895baa1adfa0536d1b623595ad198b" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>GetCell</name></member>
      <member refid="classwx_p_g_property_1a31ed47c81659af29631c07fa23ebca71" prot="public" virt="virtual"><scope>wxSystemColourProperty</scope><name>GetCellRenderer</name></member>
      <member refid="classwx_p_g_property_1ace3496a027a4a4052166e0c9a922e812" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>GetChildCount</name></member>
      <member refid="classwx_p_g_property_1a90c8a63fb00e68ad35e943a9c3786b5e" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>GetChildrenHeight</name></member>
      <member refid="classwx_p_g_property_1a8ab7856557b6bf44681e3be004282da6" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>GetChoices</name></member>
      <member refid="classwx_enum_property_1a109cbd3274856341f3dbcc0675836d17" prot="public" virt="virtual"><scope>wxSystemColourProperty</scope><name>GetChoiceSelection</name></member>
      <member refid="classwx_object_1ae6d365f2556b26767ced8410c5e839d0" prot="public" virt="virtual"><scope>wxSystemColourProperty</scope><name>GetClassInfo</name></member>
      <member refid="classwx_p_g_property_1ac38963f074de805e307f1012f385ce43" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>GetClientData</name></member>
      <member refid="classwx_p_g_property_1a060756aa2256fd6d7499712d7c958217" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>GetClientObject</name></member>
      <member refid="classwx_system_colour_property_1a229b482777e2fb69e51b4d7be4945117" prot="public" virt="virtual"><scope>wxSystemColourProperty</scope><name>GetColour</name></member>
      <member refid="classwx_p_g_property_1ae617f6f7a97062fdc11cf4bea2adfc1a" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>GetColumnEditor</name></member>
      <member refid="classwx_system_colour_property_1a8f554f493d0e687da84a01b473f919db" prot="public" virt="virtual"><scope>wxSystemColourProperty</scope><name>GetCustomColourIndex</name></member>
      <member refid="classwx_p_g_property_1a403487a876a6ba36baa19c8f8a46d625" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>GetDefaultValue</name></member>
      <member refid="classwx_p_g_property_1ae31034ab802c9aa8ae3523bc383e3cf9" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>GetDisplayedString</name></member>
      <member refid="classwx_p_g_property_1aecc6e38aaa04bcabc62ed9ecf41f664d" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>GetEditorClass</name></member>
      <member refid="classwx_p_g_property_1ab30433bbf0c1cbd2a1b29fe06f16fba7" prot="public" virt="virtual"><scope>wxSystemColourProperty</scope><name>GetEditorDialog</name></member>
      <member refid="classwx_p_g_property_1a5e6e96000479dfb6cf3a07dbf4a0bfa9" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>GetFlags</name></member>
      <member refid="classwx_p_g_property_1abdc9814947a47582d15f414c76a751e3" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>GetGrid</name></member>
      <member refid="classwx_p_g_property_1adc29820fd295163609d715d9ca92b2c3" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>GetGridIfDisplayed</name></member>
      <member refid="classwx_p_g_property_1a2a511af65596ada405c991046e67a49d" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>GetHelpString</name></member>
      <member refid="classwx_enum_property_1ac6a11386a98810e9d3a2ae09c8323071" prot="protected" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>GetIndex</name></member>
      <member refid="classwx_enum_property_1ac17054bd4e445e8e2ca2e23d623a1b34" prot="public" virt="virtual"><scope>wxSystemColourProperty</scope><name>GetIndexForValue</name></member>
      <member refid="classwx_p_g_property_1a006e2c4b775342663a458641d648cac1" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>GetIndexInParent</name></member>
      <member refid="classwx_enum_property_1a0a176c29234dcdbaae0e7298d2a3b15f" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>GetItemCount</name></member>
      <member refid="classwx_p_g_property_1a751af48e4efac32e66a605ae637da2c2" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>GetLabel</name></member>
      <member refid="classwx_p_g_property_1a621dd697a7c71c877708929e1be02a44" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>GetLastVisibleSubItem</name></member>
      <member refid="classwx_p_g_property_1afbe4820a3e1afa87d49a32eff6c56f8d" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>GetMainParent</name></member>
      <member refid="classwx_p_g_property_1afa1a0f2650c2485d1525f7368f0f5da6" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>GetMaxLength</name></member>
      <member refid="classwx_p_g_property_1a134ac2e2a4496efbcd4fdc798b6cbec9" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>GetName</name></member>
      <member refid="classwx_p_g_property_1a5c3624606ec872e85fcba2e9d411475c" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>GetOrCreateCell</name></member>
      <member refid="classwx_p_g_property_1a92f7c9e41281a60a81e5ae91f4ba8c66" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>GetParent</name></member>
      <member refid="classwx_p_g_property_1a9e4ecd53a2ae4f689dfece3a5cc2b31e" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>GetPropertyByName</name></member>
      <member refid="classwx_object_1af3c6c76a775864832f1536d3c0de3a2b" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>GetRefData</name></member>
      <member refid="classwx_system_colour_property_1a2c8ee9182075022a9e5c8220fc43a9a6" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>GetVal</name></member>
      <member refid="classwx_p_g_property_1a135cb0eb4fc184f82de8a08b8d2bb021" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>GetValidator</name></member>
      <member refid="classwx_p_g_property_1a73b4c8073f032d17e246aaf40382953c" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>GetValue</name></member>
      <member refid="classwx_p_g_property_1a22451b135458443be5e1c6cfde72a515" prot="public" virt="virtual"><scope>wxSystemColourProperty</scope><name>GetValueAsString</name></member>
      <member refid="classwx_p_g_property_1ab6cf62ca08bed0f17e1e536f396b1b6b" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>GetValueImage</name></member>
      <member refid="classwx_p_g_property_1a6e112857a11de630e43058c8ec0b8736" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>GetValueString</name></member>
      <member refid="classwx_p_g_property_1ab4d4e9f610b636da1a70fab937c27667" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>GetValueType</name></member>
      <member refid="classwx_p_g_property_1a101490b76e22689e502f10304ac02c31" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>GetY</name></member>
      <member refid="classwx_p_g_property_1a7f4c78090df61b2af3d97ce9f48dccee" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>HasFlag</name></member>
      <member refid="classwx_p_g_property_1a145275065be0f14da5ac1ace24ec8ac9" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>HasVisibleChildren</name></member>
      <member refid="classwx_p_g_property_1ad1bd50c81626773176c5d951d0e34c60" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>Hide</name></member>
      <member refid="classwx_p_g_property_1a3779757f33d56444094b51c8b8ca15fb" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>Index</name></member>
      <member refid="classwx_system_colour_property_1a132e4331c322bd182f033e3703138320" prot="protected" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>Init</name></member>
      <member refid="classwx_p_g_property_1a572697e79fd8785f3477cc7f8d72f5d5" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>InsertChild</name></member>
      <member refid="classwx_p_g_property_1ae9f9995783eeaf5320cb0c71482cbbc8" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>InsertChoice</name></member>
      <member refid="classwx_system_colour_property_1a1ea31aab3faebeeba2931fe409e44a47" prot="public" virt="virtual"><scope>wxSystemColourProperty</scope><name>IntToValue</name></member>
      <member refid="classwx_p_g_property_1a9f24f3e96be8f7f614de0989ae0e60fd" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>IsCategory</name></member>
      <member refid="classwx_p_g_property_1a1f934ed66b0a2f580153da89bad611b8" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>IsEnabled</name></member>
      <member refid="classwx_p_g_property_1ae5a6e37d373fa28d923cc91ce96a5507" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>IsExpanded</name></member>
      <member refid="classwx_object_1a3c7115ef4132dcee0c4fc34e84d7fced" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>IsKindOf</name></member>
      <member refid="classwx_p_g_property_1a8322820b5b6005e50d147fd01437a0d8" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>IsRoot</name></member>
      <member refid="classwx_object_1a059373c494c2369d7db2a556efef8ecf" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>IsSameAs</name></member>
      <member refid="classwx_p_g_property_1a584fcd86829ddc4d10a5a5a9a48541af" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>IsSomeParent</name></member>
      <member refid="classwx_p_g_property_1ac7c326b7a1bdc13c3628f24fba460ad5" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>IsSubProperty</name></member>
      <member refid="classwx_p_g_property_1a4febe5bbe4a4e59d0b79702af4da6079" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>IsTextEditable</name></member>
      <member refid="classwx_p_g_property_1af89d7625096a23c0b9df61e9545a4f60" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>IsValueUnspecified</name></member>
      <member refid="classwx_p_g_property_1a2a398ab92cc1257c30af358a55ad788a" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>IsVisible</name></member>
      <member refid="classwx_p_g_property_1a63583ebe6f4bc5e294892291457b6cf7" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>Item</name></member>
      <member refid="classwx_p_g_property_1a093e5515221abf705473e77897b5590c" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>m_clientData</name></member>
      <member refid="classwx_object_1a9e31954530a0abd54982effc443ed2b8" prot="protected" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>m_refData</name></member>
      <member refid="classwx_system_colour_property_1a9951df68b356ad59a51f3cf8910c88fc" prot="public" virt="virtual"><scope>wxSystemColourProperty</scope><name>OnCustomPaint</name></member>
      <member refid="classwx_system_colour_property_1ab00d87fa2c6dee99480849180b70ab4e" prot="public" virt="virtual"><scope>wxSystemColourProperty</scope><name>OnEvent</name></member>
      <member refid="classwx_system_colour_property_1a707feef3f99bdc88a37d11ac5d5b9a1f" prot="public" virt="virtual"><scope>wxSystemColourProperty</scope><name>OnMeasureImage</name></member>
      <member refid="classwx_system_colour_property_1ab5a97bd1acae0a58fa96f8282d89b4e9" prot="public" virt="virtual"><scope>wxSystemColourProperty</scope><name>OnSetValue</name></member>
      <member refid="classwx_enum_property_1a2b30054b6e12c192a14cf92215dd3037" prot="public" virt="virtual"><scope>wxSystemColourProperty</scope><name>OnValidationFailure</name></member>
      <member refid="classwx_object_1a07b8f34f5afc5743195c5fed052f55d3" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>operator delete</name></member>
      <member refid="classwx_object_1a96fa423a1dbc212c8227a5d83825971f" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>operator new</name></member>
      <member refid="classwx_system_colour_property_1ad94022eb075e4d03e25a24753fdb191f" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>QueryColourFromUser</name></member>
      <member refid="classwx_object_1a2f6f1aa51fe9fc2b1415ca4211a90e9e" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>Ref</name></member>
      <member refid="classwx_p_g_property_1a167afcb85ed4d527e34567e32a0cc714" prot="public" virt="virtual"><scope>wxSystemColourProperty</scope><name>RefreshChildren</name></member>
      <member refid="classwx_p_g_property_1af154d4b9d070c594a75164a5482d6888" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>RefreshEditor</name></member>
      <member refid="classwx_enum_property_1aa2ad12f18be8f9e1823708376e61d75c" prot="protected" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>ResetNextIndex</name></member>
      <member refid="classwx_p_g_property_1a418c1539969b7a0a9378a3411a5680a6" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>SetAttribute</name></member>
      <member refid="classwx_p_g_property_1a5d87a9ac5a8298d8a9e5cff8d734eafe" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>SetAttributes</name></member>
      <member refid="classwx_p_g_property_1a126a59cc86786f51cc72469bc2143b4c" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>SetAutoUnspecified</name></member>
      <member refid="classwx_p_g_property_1a5a3851a607cf1f73f34caeaba24374be" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>SetBackgroundColour</name></member>
      <member refid="classwx_p_g_property_1a0ec5afcf091d8100142887f459d3dd52" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>SetCell</name></member>
      <member refid="classwx_p_g_property_1a7275467270d2c7ac3f847f4d1b6a1194" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>SetChoices</name></member>
      <member refid="classwx_p_g_property_1a4244276bf942fd52e1dd182535e7ba5d" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>SetChoiceSelection</name></member>
      <member refid="classwx_p_g_property_1aa27f45f58bbcd53802e6644db33aec83" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>SetClientData</name></member>
      <member refid="classwx_p_g_property_1ab35b3529f2b6afbc1ec02d2bbb187709" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>SetClientObject</name></member>
      <member refid="classwx_p_g_property_1a7722a2c503051fd6ef1477a9c0c081a4" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>SetDefaultValue</name></member>
      <member refid="classwx_p_g_property_1a2cd2e6f0b30a1ab789f9ea8b58226260" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>SetEditor</name></member>
      <member refid="classwx_p_g_property_1a90294ea6cae6cf504d032b46787bb6e4" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>SetEditor</name></member>
      <member refid="classwx_p_g_property_1af8d8afe130e96785eab7f37ea07e326e" prot="protected" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>SetFlag</name></member>
      <member refid="classwx_p_g_property_1a02dd250ff0cfe074a8de9f8cd8643880" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>SetFlagRecursively</name></member>
      <member refid="classwx_p_g_property_1a839af036b24fc35696f0ef3cb2b0670a" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>SetHelpString</name></member>
      <member refid="classwx_enum_property_1a4b5bc38e965e48731f90e23499e9e886" prot="protected" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>SetIndex</name></member>
      <member refid="classwx_p_g_property_1a5acdc1db23a6e219de6619bc54e1a2e3" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>SetLabel</name></member>
      <member refid="classwx_p_g_property_1aa74671893440ce2a0f2a0e47ba897ad5" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>SetMaxLength</name></member>
      <member refid="classwx_p_g_property_1a43f07192741d219d50e94b2d54e93847" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>SetModifiedStatus</name></member>
      <member refid="classwx_p_g_property_1a79f28d83cf79c6bb87337183fb8c56f5" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>SetName</name></member>
      <member refid="classwx_p_g_property_1af7e9a4c245025e118373a3c876c7904d" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>SetParentalType</name></member>
      <member refid="classwx_object_1afab780710f2adc1bb33310e27590140b" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>SetRefData</name></member>
      <member refid="classwx_p_g_property_1a8d34f624ad2f38300741c3caa0929629" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>SetTextColour</name></member>
      <member refid="classwx_p_g_property_1a9eb7d1f243c6fb993b3563c241b2ef4a" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>SetValidator</name></member>
      <member refid="classwx_p_g_property_1aa8e771a01a93fe94f87a449f430afa79" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>SetValue</name></member>
      <member refid="classwx_p_g_property_1a0b3351061910b91a954237735466ca88" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>SetValueFromInt</name></member>
      <member refid="classwx_p_g_property_1a0fbb7142a10cfcf02bb45000ab4527cd" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>SetValueFromString</name></member>
      <member refid="classwx_p_g_property_1a5c5be1292d329945b0a24e33db485207" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>SetValueImage</name></member>
      <member refid="classwx_p_g_property_1ae3fbf828db909d9d03f3fd9577cf46b0" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>SetValueInEvent</name></member>
      <member refid="classwx_p_g_property_1ae810565e96391346fd7913248f0642ab" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>SetValuePlain</name></member>
      <member refid="classwx_p_g_property_1a4e55506bbc49f0b7d447df71a00f2df6" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>SetValueToUnspecified</name></member>
      <member refid="classwx_p_g_property_1a46da7a139ba90c3852710f181280667d" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>SetWasModified</name></member>
      <member refid="classwx_system_colour_property_1a6772706c3aa925778ece6a4ef53f959c" prot="public" virt="virtual"><scope>wxSystemColourProperty</scope><name>StringToValue</name></member>
      <member refid="classwx_system_colour_property_1aef408ea98c049ae9e1a21505493ba772" prot="protected" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>TranslateVal</name></member>
      <member refid="classwx_system_colour_property_1af595e86c0c06212d451c46b68c748a01" prot="protected" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>TranslateVal</name></member>
      <member refid="classwx_object_1af51efc6b1ae632fc7f0cd7ebbce9fa36" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>UnRef</name></member>
      <member refid="classwx_object_1a74b40e42d19a4b9e9bec0b57d62a5725" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>UnShare</name></member>
      <member refid="classwx_p_g_property_1a7b2f517388b0f0038354d5fd9f0bab43" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>UpdateParentValues</name></member>
      <member refid="classwx_p_g_property_1a11e1675d3a38ecce767e3417fad55a76" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>UsesAutoUnspecified</name></member>
      <member refid="classwx_enum_property_1a810c3d48b8bee335767087b0d25b8d71" prot="public" virt="virtual"><scope>wxSystemColourProperty</scope><name>ValidateValue</name></member>
      <member refid="classwx_enum_property_1a9bf10967c061b92f97b91cca2fd7fea3" prot="protected" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>ValueFromInt_</name></member>
      <member refid="classwx_enum_property_1af8f715d7d7d74a33b1fbdd25638f965a" prot="protected" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>ValueFromString_</name></member>
      <member refid="classwx_system_colour_property_1ab547829eac808ba0410637ae8ed1d89c" prot="public" virt="virtual"><scope>wxSystemColourProperty</scope><name>ValueToString</name></member>
      <member refid="classwx_enum_property_1a08b3b48973f82a517ef1d543c4e42f5d" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>wxEnumProperty</name></member>
      <member refid="classwx_enum_property_1a6faa345ddcaf8cadc47004cdde5f232f" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>wxEnumProperty</name></member>
      <member refid="classwx_enum_property_1afaaf98fd15b42e72981e2c95bd4de52b" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>wxEnumProperty</name></member>
      <member refid="classwx_enum_property_1aab4a79ec124220c76957fd74b9aebdf4" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>wxEnumProperty</name></member>
      <member refid="classwx_object_1acaa378363a28af421ab56ad7b46eadf0" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>wxObject</name></member>
      <member refid="classwx_object_1a4721b4dc9b7aff0f30904ba2ea3954cf" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>wxObject</name></member>
      <member refid="classwx_p_g_property_1ade8edb58a7853a539664c77b2d9c9c81" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>wxPGProperty</name></member>
      <member refid="classwx_p_g_property_1adde08613b47eda8e324483ac754e8920" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>wxPGProperty</name></member>
      <member refid="classwx_system_colour_property_1a62cddb0cf44f3d4bf1926dcd069c33ae" prot="public" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>wxSystemColourProperty</name></member>
      <member refid="classwx_system_colour_property_1aa4c3353773362a2a14e132bc77e6496f" prot="protected" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>wxSystemColourProperty</name></member>
      <member refid="classwx_system_colour_property_1ad86a2ef9f6275e360d2eb5da55841a86" prot="protected" virt="non-virtual"><scope>wxSystemColourProperty</scope><name>wxSystemColourProperty</name></member>
      <member refid="classwx_enum_property_1ac0d1610ab6258776ad491738e344ca8f" prot="public" virt="virtual"><scope>wxSystemColourProperty</scope><name>~wxEnumProperty</name></member>
      <member refid="classwx_object_1a2a51aa8bfbab47ca2f051bcf84b3f35b" prot="public" virt="virtual"><scope>wxSystemColourProperty</scope><name>~wxObject</name></member>
      <member refid="classwx_p_g_property_1ac18fca1cac5343b510220929a4f6a0bc" prot="public" virt="virtual"><scope>wxSystemColourProperty</scope><name>~wxPGProperty</name></member>
      <member refid="classwx_system_colour_property_1ae396b45a85d926283e1b7c64d7d9c4d3" prot="public" virt="virtual"><scope>wxSystemColourProperty</scope><name>~wxSystemColourProperty</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
