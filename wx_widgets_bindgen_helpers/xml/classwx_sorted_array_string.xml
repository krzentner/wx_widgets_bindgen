<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classwx_sorted_array_string" kind="class" language="C++" prot="public">
    <compoundname>wxSortedArrayString</compoundname>
    <basecompoundref prot="public" virt="non-virtual">wxArray</basecompoundref>
    <includes local="no">wx/arrstr.h</includes>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classwx_sorted_array_string_1abecc9015c35ee342e594c5fa9f76a927" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxSortedArrayString::Sort</definition>
        <argsstring>(bool reverseOrder=false)</argsstring>
        <name>Sort</name>
        <param>
          <type>bool</type>
          <declname>reverseOrder</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This function should not be used with sorted array because it could break the order of items and, for example, subsequent calls to <ref refid="classwx_sorted_array_string_1a69c2225d50df66af859d583ee62f580a" kindref="member">Index()</ref> would then not work! Also, sorting a <ref refid="classwx_sorted_array_string" kindref="compound">wxSortedArrayString</ref> doesn&apos;t make sense because its elements are always already sorted.</para></simplesect>
<simplesect kind="warning"><para>In STL mode, Sort is private and simply invokes wxFAIL_MSG. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/arrstr.h" line="330" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sorted_array_string_1a0661fc0625d585d1bca263da7a14f608" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxSortedArrayString::Sort</definition>
        <argsstring>(CompareFunction compareFunction)</argsstring>
        <name>Sort</name>
        <param>
          <type>CompareFunction</type>
          <declname>compareFunction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This function should not be used with sorted array because it could break the order of items and, for example, subsequent calls to <ref refid="classwx_sorted_array_string_1a69c2225d50df66af859d583ee62f580a" kindref="member">Index()</ref> would then not work! Also, sorting a <ref refid="classwx_sorted_array_string" kindref="compound">wxSortedArrayString</ref> doesn&apos;t make sense because its elements are always already sorted.</para></simplesect>
<simplesect kind="warning"><para>In STL mode, Sort is private and simply invokes wxFAIL_MSG. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/arrstr.h" line="331" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_sorted_array_string_1a749e5ba32eca259199472427eb29199f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxSortedArrayString::wxSortedArrayString</definition>
        <argsstring>(const wxArrayString &amp;array)</argsstring>
        <name>wxSortedArrayString</name>
        <param>
          <type>const <ref refid="classwx_array_string" kindref="compound">wxArrayString</ref> &amp;</type>
          <declname>array</declname>
        </param>
        <briefdescription>
<para>Conversion constructor. </para>        </briefdescription>
        <detaileddescription>
<para>Constructs a sorted array with the same contents as the (possibly unsorted) &quot;array&quot; argument. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/arrstr.h" line="289" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sorted_array_string_1ae23142317aff290ee6363f02d67ca2cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t wxSortedArrayString::Add</definition>
        <argsstring>(const wxString &amp;str, size_t copies=1)</argsstring>
        <name>Add</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>copies</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>Appends the given number of <emphasis>copies</emphasis> of the new item <emphasis>str</emphasis> to the array and returns the index of the first new item in the array. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classwx_sorted_array_string_1ab9d85c1a7d21952209d6fc87dbb5be32" kindref="member">Insert()</ref></para></simplesect>
<simplesect kind="warning"><para>For sorted arrays, the index of the inserted item will not be, in general, equal to GetCount() - 1 because the item is inserted at the correct position to keep the array sorted and not appended. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/arrstr.h" line="299" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sorted_array_string_1a69c2225d50df66af859d583ee62f580a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxSortedArrayString::Index</definition>
        <argsstring>(const wxString &amp;sz, bool bCase=true, bool bFromEnd=false) const</argsstring>
        <name>Index</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>sz</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bCase</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>bFromEnd</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Search the element in the array, starting from the beginning if <emphasis>bFromEnd</emphasis> is false or from end otherwise. </para>        </briefdescription>
        <detaileddescription>
<para>If <emphasis>bCase</emphasis>, comparison is case sensitive (default), otherwise the case is ignored.</para><para>This function uses linear search for <ref refid="classwx_array_string" kindref="compound">wxArrayString</ref>. Returns index of the first item matched or <computeroutput>wxNOT_FOUND</computeroutput> if there is no match.</para><para>This function uses binary search for <ref refid="classwx_sorted_array_string" kindref="compound">wxSortedArrayString</ref>, but it ignores the <emphasis>bCase</emphasis> and <emphasis>bFromEnd</emphasis> parameters. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/arrstr.h" line="308" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_sorted_array_string_1ab9d85c1a7d21952209d6fc87dbb5be32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxSortedArrayString::Insert</definition>
        <argsstring>(const wxString &amp;str, size_t nIndex, size_t copies=1)</argsstring>
        <name>Insert</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>nIndex</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>copies</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This function should not be used with sorted arrays because it could break the order of items and, for example, subsequent calls to <ref refid="classwx_sorted_array_string_1a69c2225d50df66af859d583ee62f580a" kindref="member">Index()</ref> would then not work!</para></simplesect>
<simplesect kind="warning"><para>In STL mode, Insert is private and simply invokes wxFAIL_MSG. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/arrstr.h" line="318" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classwx_sorted_array_string" kindref="compound">wxSortedArrayString</ref> is an efficient container for storing <ref refid="classwx_string" kindref="compound">wxString</ref> objects which always keeps the string in alphabetical order. </para>    </briefdescription>
    <detaileddescription>
<para><ref refid="classwx_sorted_array_string" kindref="compound">wxSortedArrayString</ref> uses binary search in its <ref refid="classwx_sorted_array_string_1a69c2225d50df66af859d583ee62f580a" kindref="member">wxSortedArrayString::Index()</ref> method (instead of linear search for <ref refid="classwx_array_string_1a1e26774c429d38957b866c034b283f73" kindref="member">wxArrayString::Index()</ref>) which makes it much more efficient if you add strings to the array rarely (because, of course, you have to pay for <ref refid="classwx_sorted_array_string_1a69c2225d50df66af859d583ee62f580a" kindref="member">Index()</ref> efficiency by having <ref refid="classwx_sorted_array_string_1ae23142317aff290ee6363f02d67ca2cc" kindref="member">Add()</ref> be slower) but search for them often. Several methods should not be used with sorted array (basically, all those which break the order of items) which is mentioned in their description.</para><para><heading level="2"></heading>
</para><para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxbase" kindref="member">wxBase</ref> &lt;&gt;&lt; =&apos;&apos;&gt;:&lt;/&gt;&amp;;&amp;;&lt; =&apos;&apos;&gt;\ &lt;/&gt;&lt;/&gt;</para><para><simplesect kind="see"><para>wxArray, <ref refid="classwx_string" kindref="compound">wxString</ref>, <ref refid="overview_string" kindref="compound">wxString Overview</ref> </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="7380">
        <label>wxArray</label>
      </node>
      <node id="7379">
        <label>wxSortedArrayString</label>
        <link refid="classwx_sorted_array_string"/>
        <childnode refid="7380" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="7382">
        <label>wxArray</label>
      </node>
      <node id="7381">
        <label>wxSortedArrayString</label>
        <link refid="classwx_sorted_array_string"/>
        <childnode refid="7382" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="interface/wx/arrstr.h" line="281" column="1" bodyfile="interface/wx/arrstr.h" bodystart="280" bodyend="333"/>
    <listofallmembers>
      <member refid="classwx_sorted_array_string_1ae23142317aff290ee6363f02d67ca2cc" prot="public" virt="non-virtual"><scope>wxSortedArrayString</scope><name>Add</name></member>
      <member refid="classwx_sorted_array_string_1a69c2225d50df66af859d583ee62f580a" prot="public" virt="non-virtual"><scope>wxSortedArrayString</scope><name>Index</name></member>
      <member refid="classwx_sorted_array_string_1ab9d85c1a7d21952209d6fc87dbb5be32" prot="public" virt="non-virtual"><scope>wxSortedArrayString</scope><name>Insert</name></member>
      <member refid="classwx_sorted_array_string_1abecc9015c35ee342e594c5fa9f76a927" prot="public" virt="non-virtual"><scope>wxSortedArrayString</scope><name>Sort</name></member>
      <member refid="classwx_sorted_array_string_1a0661fc0625d585d1bca263da7a14f608" prot="public" virt="non-virtual"><scope>wxSortedArrayString</scope><name>Sort</name></member>
      <member refid="classwx_sorted_array_string_1a749e5ba32eca259199472427eb29199f" prot="public" virt="non-virtual"><scope>wxSortedArrayString</scope><name>wxSortedArrayString</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
