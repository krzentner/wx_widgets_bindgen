<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classwx_text_ctrl" kind="class" language="C++" prot="public">
    <compoundname>wxTextCtrl</compoundname>
    <basecompoundref refid="classwx_control" prot="public" virt="non-virtual">wxControl</basecompoundref>
    <basecompoundref refid="classwx_text_entry" prot="public" virt="non-virtual">wxTextEntry</basecompoundref>
    <derivedcompoundref refid="classwx_search_ctrl" prot="public" virt="non-virtual">wxSearchCtrl</derivedcompoundref>
    <includes local="no">wx/textctrl.h</includes>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classwx_text_ctrl_1aa57985661e958933770a876c047067e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_text_ctrl" kindref="compound">wxTextCtrl</ref> &amp;</type>
        <definition>wxTextCtrl&amp; wxTextCtrl::operator&lt;&lt;</definition>
        <argsstring>(const wxString &amp;s)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Operator definitions for appending to a text control. </para>        </briefdescription>
        <detaileddescription>
<para>These operators can be used as with the standard C++ streams, for example: <programlisting><codeline><highlight class="normal">wxTextCtrl<sp/>*wnd<sp/>=<sp/>new<sp/>wxTextCtrl(my_frame);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">(*wnd)<sp/>&lt;&lt;<sp/>&quot;Welcome<sp/>to<sp/>text<sp/>control<sp/>number<sp/>&quot;<sp/>&lt;&lt;<sp/>1<sp/>&lt;&lt;<sp/>&quot;.\n&quot;;</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="1562" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_ctrl_1a9dca9cf7114b1cf6a6ee7865d8a69511" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_text_ctrl" kindref="compound">wxTextCtrl</ref> &amp;</type>
        <definition>wxTextCtrl&amp; wxTextCtrl::operator&lt;&lt;</definition>
        <argsstring>(int i)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Operator definitions for appending to a text control. </para>        </briefdescription>
        <detaileddescription>
<para>These operators can be used as with the standard C++ streams, for example: <programlisting><codeline><highlight class="normal">wxTextCtrl<sp/>*wnd<sp/>=<sp/>new<sp/>wxTextCtrl(my_frame);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">(*wnd)<sp/>&lt;&lt;<sp/>&quot;Welcome<sp/>to<sp/>text<sp/>control<sp/>number<sp/>&quot;<sp/>&lt;&lt;<sp/>1<sp/>&lt;&lt;<sp/>&quot;.\n&quot;;</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="1563" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_ctrl_1ae8d53f452fc9580069609572f71a8f5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_text_ctrl" kindref="compound">wxTextCtrl</ref> &amp;</type>
        <definition>wxTextCtrl&amp; wxTextCtrl::operator&lt;&lt;</definition>
        <argsstring>(long i)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>long</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Operator definitions for appending to a text control. </para>        </briefdescription>
        <detaileddescription>
<para>These operators can be used as with the standard C++ streams, for example: <programlisting><codeline><highlight class="normal">wxTextCtrl<sp/>*wnd<sp/>=<sp/>new<sp/>wxTextCtrl(my_frame);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">(*wnd)<sp/>&lt;&lt;<sp/>&quot;Welcome<sp/>to<sp/>text<sp/>control<sp/>number<sp/>&quot;<sp/>&lt;&lt;<sp/>1<sp/>&lt;&lt;<sp/>&quot;.\n&quot;;</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="1564" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_ctrl_1ad80aeb5e73b4f2713a992bd8eb9b327b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_text_ctrl" kindref="compound">wxTextCtrl</ref> &amp;</type>
        <definition>wxTextCtrl&amp; wxTextCtrl::operator&lt;&lt;</definition>
        <argsstring>(float f)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>float</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>Operator definitions for appending to a text control. </para>        </briefdescription>
        <detaileddescription>
<para>These operators can be used as with the standard C++ streams, for example: <programlisting><codeline><highlight class="normal">wxTextCtrl<sp/>*wnd<sp/>=<sp/>new<sp/>wxTextCtrl(my_frame);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">(*wnd)<sp/>&lt;&lt;<sp/>&quot;Welcome<sp/>to<sp/>text<sp/>control<sp/>number<sp/>&quot;<sp/>&lt;&lt;<sp/>1<sp/>&lt;&lt;<sp/>&quot;.\n&quot;;</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="1565" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_ctrl_1abc0cdbbfcf38c3425234635d32778a2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_text_ctrl" kindref="compound">wxTextCtrl</ref> &amp;</type>
        <definition>wxTextCtrl&amp; wxTextCtrl::operator&lt;&lt;</definition>
        <argsstring>(double d)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>double</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Operator definitions for appending to a text control. </para>        </briefdescription>
        <detaileddescription>
<para>These operators can be used as with the standard C++ streams, for example: <programlisting><codeline><highlight class="normal">wxTextCtrl<sp/>*wnd<sp/>=<sp/>new<sp/>wxTextCtrl(my_frame);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">(*wnd)<sp/>&lt;&lt;<sp/>&quot;Welcome<sp/>to<sp/>text<sp/>control<sp/>number<sp/>&quot;<sp/>&lt;&lt;<sp/>1<sp/>&lt;&lt;<sp/>&quot;.\n&quot;;</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="1566" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_ctrl_1a95e267bd1556a51690c227f8652443ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_text_ctrl" kindref="compound">wxTextCtrl</ref> &amp;</type>
        <definition>wxTextCtrl&amp; wxTextCtrl::operator&lt;&lt;</definition>
        <argsstring>(char c)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Operator definitions for appending to a text control. </para>        </briefdescription>
        <detaileddescription>
<para>These operators can be used as with the standard C++ streams, for example: <programlisting><codeline><highlight class="normal">wxTextCtrl<sp/>*wnd<sp/>=<sp/>new<sp/>wxTextCtrl(my_frame);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">(*wnd)<sp/>&lt;&lt;<sp/>&quot;Welcome<sp/>to<sp/>text<sp/>control<sp/>number<sp/>&quot;<sp/>&lt;&lt;<sp/>1<sp/>&lt;&lt;<sp/>&quot;.\n&quot;;</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="1567" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_ctrl_1a9bbc65b104703ddccff602150f0baf94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_text_ctrl" kindref="compound">wxTextCtrl</ref> &amp;</type>
        <definition>wxTextCtrl&amp; wxTextCtrl::operator&lt;&lt;</definition>
        <argsstring>(wchar_t c)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>wchar_t</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Operator definitions for appending to a text control. </para>        </briefdescription>
        <detaileddescription>
<para>These operators can be used as with the standard C++ streams, for example: <programlisting><codeline><highlight class="normal">wxTextCtrl<sp/>*wnd<sp/>=<sp/>new<sp/>wxTextCtrl(my_frame);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">(*wnd)<sp/>&lt;&lt;<sp/>&quot;Welcome<sp/>to<sp/>text<sp/>control<sp/>number<sp/>&quot;<sp/>&lt;&lt;<sp/>1<sp/>&lt;&lt;<sp/>&quot;.\n&quot;;</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="1568" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_text_ctrl_1a4d01be66f9a9e95501aa55d54f94d54f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxTextCtrl::wxTextCtrl</definition>
        <argsstring>()</argsstring>
        <name>wxTextCtrl</name>
        <briefdescription>
<para>Default ctor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="1166" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_ctrl_1a4f398e4800a904fdf225fabc366d7910" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxTextCtrl::wxTextCtrl</definition>
        <argsstring>(wxWindow *parent, wxWindowID id, const wxString &amp;value=wxEmptyString, const wxPoint &amp;pos=wxDefaultPosition, const wxSize &amp;size=wxDefaultSize, long style=0, const wxValidator &amp;validator=wxDefaultValidator, const wxString &amp;name=wxTextCtrlNameStr)</argsstring>
        <name>wxTextCtrl</name>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>parent</declname>
        </param>
        <param>
          <type><ref refid="windowid_8h_1ae8091432cc2cb2485d45f2302fb51133" kindref="member">wxWindowID</ref></type>
          <declname>id</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>value</declname>
          <defval><ref refid="interface_2wx_2string_8h_1a9a321d587166a30017b608dd2d234033" kindref="member">wxEmptyString</ref></defval>
        </param>
        <param>
          <type>const <ref refid="classwx_point" kindref="compound">wxPoint</ref> &amp;</type>
          <declname>pos</declname>
          <defval><ref refid="gdicmn_8h_1af5a90c753eaf3d3e3e5068a19ec3c1d0" kindref="member">wxDefaultPosition</ref></defval>
        </param>
        <param>
          <type>const <ref refid="classwx_size" kindref="compound">wxSize</ref> &amp;</type>
          <declname>size</declname>
          <defval><ref refid="gdicmn_8h_1a33a012cdb075e9f78c93f63bec2dc27b" kindref="member">wxDefaultSize</ref></defval>
        </param>
        <param>
          <type>long</type>
          <declname>style</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const <ref refid="classwx_validator" kindref="compound">wxValidator</ref> &amp;</type>
          <declname>validator</declname>
          <defval><ref refid="validate_8h_1af1e90d8aa1824fd2ce4024ef7e40703c" kindref="member">wxDefaultValidator</ref></defval>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>name</declname>
          <defval>wxTextCtrlNameStr</defval>
        </param>
        <briefdescription>
<para>Constructor, creating and showing a text control. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parent</parametername>
</parameternamelist>
<parameterdescription>
<para>Parent window. Should not be NULL. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>Control identifier. A value of -1 denotes a default value. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Default text value. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>Text control position. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Text control size. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>style</parametername>
</parameternamelist>
<parameterdescription>
<para>Window style. See <ref refid="classwx_text_ctrl" kindref="compound">wxTextCtrl</ref>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>validator</parametername>
</parameternamelist>
<parameterdescription>
<para>Window validator. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Window name.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="remark"><para>The horizontal scrollbar (wxHSCROLL style flag) will only be created for multi-line text controls. Without a horizontal scrollbar, text lines that don&apos;t fit in the control&apos;s size will be wrapped (but no newline character is inserted). Single line controls don&apos;t have a horizontal scrollbar, the text is automatically scrolled so that the insertion point is always visible.</para></simplesect>
<simplesect kind="see"><para><ref refid="classwx_text_ctrl_1a4216ca88aa1610edc00c69e26eb92fbd" kindref="member">Create()</ref>, <ref refid="classwx_validator" kindref="compound">wxValidator</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="1198" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_ctrl_1abf8174bc0cfdb5e3cad3f28b27b41b99" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual wxTextCtrl::~wxTextCtrl</definition>
        <argsstring>()</argsstring>
        <name>~wxTextCtrl</name>
        <briefdescription>
<para>Destructor, destroying the text control. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="1209" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_ctrl_1a4216ca88aa1610edc00c69e26eb92fbd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTextCtrl::Create</definition>
        <argsstring>(wxWindow *parent, wxWindowID id, const wxString &amp;value=wxEmptyString, const wxPoint &amp;pos=wxDefaultPosition, const wxSize &amp;size=wxDefaultSize, long style=0, const wxValidator &amp;validator=wxDefaultValidator, const wxString &amp;name=wxTextCtrlNameStr)</argsstring>
        <name>Create</name>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>parent</declname>
        </param>
        <param>
          <type><ref refid="windowid_8h_1ae8091432cc2cb2485d45f2302fb51133" kindref="member">wxWindowID</ref></type>
          <declname>id</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>value</declname>
          <defval><ref refid="interface_2wx_2string_8h_1a9a321d587166a30017b608dd2d234033" kindref="member">wxEmptyString</ref></defval>
        </param>
        <param>
          <type>const <ref refid="classwx_point" kindref="compound">wxPoint</ref> &amp;</type>
          <declname>pos</declname>
          <defval><ref refid="gdicmn_8h_1af5a90c753eaf3d3e3e5068a19ec3c1d0" kindref="member">wxDefaultPosition</ref></defval>
        </param>
        <param>
          <type>const <ref refid="classwx_size" kindref="compound">wxSize</ref> &amp;</type>
          <declname>size</declname>
          <defval><ref refid="gdicmn_8h_1a33a012cdb075e9f78c93f63bec2dc27b" kindref="member">wxDefaultSize</ref></defval>
        </param>
        <param>
          <type>long</type>
          <declname>style</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const <ref refid="classwx_validator" kindref="compound">wxValidator</ref> &amp;</type>
          <declname>validator</declname>
          <defval><ref refid="validate_8h_1af1e90d8aa1824fd2ce4024ef7e40703c" kindref="member">wxDefaultValidator</ref></defval>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>name</declname>
          <defval>wxTextCtrlNameStr</defval>
        </param>
        <briefdescription>
<para>Creates the text control for two-step construction. </para>        </briefdescription>
        <detaileddescription>
<para>This method should be called if the default constructor was used for the control creation. Its parameters have the same meaning as for the non-default constructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="1218" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_ctrl_1ab9653877885738aeacacc731e0b759d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxTextCtrl::DiscardEdits</definition>
        <argsstring>()</argsstring>
        <name>DiscardEdits</name>
        <briefdescription>
<para>Resets the internal modified flag as if the current changes had been saved. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="1229" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_ctrl_1aac3e7f2124aafd67df6f6efbc285a40b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxTextCtrl::EmulateKeyPress</definition>
        <argsstring>(const wxKeyEvent &amp;event)</argsstring>
        <name>EmulateKeyPress</name>
        <param>
          <type>const <ref refid="classwx_key_event" kindref="compound">wxKeyEvent</ref> &amp;</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>This function inserts into the control the character which would have been inserted if the given key event had occurred in the text control. </para>        </briefdescription>
        <detaileddescription>
<para>The <emphasis>event</emphasis> object should be the same as the one passed to <computeroutput>EVT_KEY_DOWN</computeroutput> handler previously by wxWidgets. Please note that this function doesn&apos;t currently work correctly for all keys under any platform but MSW.</para><para><simplesect kind="return"><para>true if the event resulted in a change to the control, false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="1242" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_ctrl_1aa377bc2c4abb51ef163cc5a41f082d70" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="classwx_text_attr" kindref="compound">wxTextAttr</ref> &amp;</type>
        <definition>virtual const wxTextAttr&amp; wxTextCtrl::GetDefaultStyle</definition>
        <argsstring>() const</argsstring>
        <name>GetDefaultStyle</name>
        <briefdescription>
<para>Returns the style currently used for the new text. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classwx_text_ctrl_1a1c0ead0e3a2faa1bc16b1898e418f9e0" kindref="member">SetDefaultStyle()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="1249" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_ctrl_1a26e637b26508d7e97c209d22db32efb6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>virtual int wxTextCtrl::GetLineLength</definition>
        <argsstring>(long lineNo) const</argsstring>
        <name>GetLineLength</name>
        <param>
          <type>long</type>
          <declname>lineNo</declname>
        </param>
        <briefdescription>
<para>Gets the length of the specified line, not including any trailing newline character(s). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lineNo</parametername>
</parameternamelist>
<parameterdescription>
<para>Line number (starting from zero).</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The length of the line, or -1 if <emphasis>lineNo</emphasis> was invalid. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="1261" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_ctrl_1afaa68cea1c13d82d5e98e99d60d5cc81" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>virtual wxString wxTextCtrl::GetLineText</definition>
        <argsstring>(long lineNo) const</argsstring>
        <name>GetLineText</name>
        <param>
          <type>long</type>
          <declname>lineNo</declname>
        </param>
        <briefdescription>
<para>Returns the contents of a given line in the text control, not including any trailing newline character(s). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lineNo</parametername>
</parameternamelist>
<parameterdescription>
<para>The line number, starting from zero.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The contents of the line. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="1273" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_ctrl_1acc92cde8ae6d479f30dd4f1e877f7a16" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>virtual int wxTextCtrl::GetNumberOfLines</definition>
        <argsstring>() const</argsstring>
        <name>GetNumberOfLines</name>
        <briefdescription>
<para>Returns the number of lines in the text control buffer. </para>        </briefdescription>
        <detaileddescription>
<para>The returned number is the number of logical lines, i.e. just the count of the number of newline characters in the control + 1, for wxGTK and wxOSX/Cocoa ports while it is the number of physical lines, i.e. the count of lines actually shown in the control, in wxMSW and wxOSX/Carbon. Because of this discrepancy, it is not recommended to use this function.</para><para><simplesect kind="remark"><para>Note that even empty text controls have one line (where the insertion point is), so <ref refid="classwx_text_ctrl_1acc92cde8ae6d479f30dd4f1e877f7a16" kindref="member">GetNumberOfLines()</ref> never returns 0. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="1288" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_ctrl_1a762bc2bc4875c45776a6df10a88d1b1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxTextCtrl::GetStyle</definition>
        <argsstring>(long position, wxTextAttr &amp;style)</argsstring>
        <name>GetStyle</name>
        <param>
          <type>long</type>
          <declname>position</declname>
        </param>
        <param>
          <type><ref refid="classwx_text_attr" kindref="compound">wxTextAttr</ref> &amp;</type>
          <declname>style</declname>
        </param>
        <briefdescription>
<para>Returns the style at this position in the text control. </para>        </briefdescription>
        <detaileddescription>
<para>Not all platforms support this function.</para><para><simplesect kind="return"><para>true on success, false if an error occurred (this may also mean that the styles are not supported under this platform).</para></simplesect>
<simplesect kind="see"><para><ref refid="classwx_text_ctrl_1a0d972d3007e23ed9270d16b6bb326e80" kindref="member">SetStyle()</ref>, <ref refid="classwx_text_attr" kindref="compound">wxTextAttr</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="1301" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_ctrl_1a1b1bece2f171a59bb7c03cff42f94f4f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="textctrl_8h_1a0ca70276b66011b1ca0a120b8c20fd16" kindref="member">wxTextCtrlHitTestResult</ref></type>
        <definition>wxTextCtrlHitTestResult wxTextCtrl::HitTest</definition>
        <argsstring>(const wxPoint &amp;pt, long *pos) const</argsstring>
        <name>HitTest</name>
        <param>
          <type>const <ref refid="classwx_point" kindref="compound">wxPoint</ref> &amp;</type>
          <declname>pt</declname>
        </param>
        <param>
          <type>long *</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
<para>Finds the position of the character at the specified point. </para>        </briefdescription>
        <detaileddescription>
<para>If the return code is not <computeroutput>wxTE_HT_UNKNOWN</computeroutput> the row and column of the character closest to this position are returned, otherwise the output parameters are not modified.</para><para>Please note that this function is currently only implemented in wxUniv, wxMSW and wxGTK2 ports and always returns <computeroutput>wxTE_HT_UNKNOWN</computeroutput> in the other ports.</para><para><bold>wxPerl Note:</bold> In wxPerl this function takes only the <emphasis>pt</emphasis> argument and returns a 3-element list (result, col, row).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pt</parametername>
</parameternamelist>
<parameterdescription>
<para>The position of the point to check, in window device coordinates. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>Receives the position of the character at the given position. May be NULL.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classwx_text_ctrl_1a898c3d89764271cf8bee160e2d2bbf18" kindref="member">PositionToXY()</ref>, <ref refid="classwx_text_ctrl_1a535bbd06fd08beee9055d5c05946b484" kindref="member">XYToPosition()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="1327" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_ctrl_1a4d3f78900676016e435ad75fac54ad58" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="textctrl_8h_1a0ca70276b66011b1ca0a120b8c20fd16" kindref="member">wxTextCtrlHitTestResult</ref></type>
        <definition>wxTextCtrlHitTestResult wxTextCtrl::HitTest</definition>
        <argsstring>(const wxPoint &amp;pt, wxTextCoord *col, wxTextCoord *row) const</argsstring>
        <name>HitTest</name>
        <param>
          <type>const <ref refid="classwx_point" kindref="compound">wxPoint</ref> &amp;</type>
          <declname>pt</declname>
        </param>
        <param>
          <type><ref refid="textctrl_8h_1ac7f269c911c1d23b7d9eb782a02129be" kindref="member">wxTextCoord</ref> *</type>
          <declname>col</declname>
        </param>
        <param>
          <type><ref refid="textctrl_8h_1ac7f269c911c1d23b7d9eb782a02129be" kindref="member">wxTextCoord</ref> *</type>
          <declname>row</declname>
        </param>
        <briefdescription>
<para>Finds the row and column of the character at the specified point. </para>        </briefdescription>
        <detaileddescription>
<para>If the return code is not <computeroutput>wxTE_HT_UNKNOWN</computeroutput> the row and column of the character closest to this position are returned, otherwise the output parameters are not modified.</para><para>Please note that this function is currently only implemented in wxUniv, wxMSW and wxGTK2 ports and always returns <computeroutput>wxTE_HT_UNKNOWN</computeroutput> in the other ports.</para><para><bold>wxPerl Note:</bold> In wxPerl this function takes only the <emphasis>pt</emphasis> argument and returns a 3-element list (result, col, row).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pt</parametername>
</parameternamelist>
<parameterdescription>
<para>The position of the point to check, in window device coordinates. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>col</parametername>
</parameternamelist>
<parameterdescription>
<para>Receives the column of the character at the given position. May be NULL. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>row</parametername>
</parameternamelist>
<parameterdescription>
<para>Receives the row of the character at the given position. May be NULL.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classwx_text_ctrl_1a898c3d89764271cf8bee160e2d2bbf18" kindref="member">PositionToXY()</ref>, <ref refid="classwx_text_ctrl_1a535bbd06fd08beee9055d5c05946b484" kindref="member">XYToPosition()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="1356" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_ctrl_1a08ad1dc6f4dbb77ecd60d9e1e61b1bd6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxTextCtrl::IsModified</definition>
        <argsstring>() const</argsstring>
        <name>IsModified</name>
        <briefdescription>
<para>Returns true if the text has been modified by user. </para>        </briefdescription>
        <detaileddescription>
<para>Note that calling <ref refid="classwx_text_entry_1a90f876b2dd83ba5c97ba0c193b386e9f" kindref="member">SetValue()</ref> doesn&apos;t make the control modified.</para><para><simplesect kind="see"><para><ref refid="classwx_text_ctrl_1ab89671b5cd9e2da9a978f14e0f9931cf" kindref="member">MarkDirty()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="1367" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_ctrl_1a39ce8a2dfdb3510752e42e0e908f7710" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTextCtrl::IsMultiLine</definition>
        <argsstring>() const</argsstring>
        <name>IsMultiLine</name>
        <briefdescription>
<para>Returns true if this is a multi line edit control and false otherwise. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classwx_text_ctrl_1a021dd82ebcec882520e65baa9ac9be1f" kindref="member">IsSingleLine()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="1374" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_ctrl_1a021dd82ebcec882520e65baa9ac9be1f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTextCtrl::IsSingleLine</definition>
        <argsstring>() const</argsstring>
        <name>IsSingleLine</name>
        <briefdescription>
<para>Returns true if this is a single line edit control and false otherwise. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classwx_text_ctrl_1a021dd82ebcec882520e65baa9ac9be1f" kindref="member">IsSingleLine()</ref>, <ref refid="classwx_text_ctrl_1a39ce8a2dfdb3510752e42e0e908f7710" kindref="member">IsMultiLine()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="1381" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_ctrl_1a40e67be01fca0933542d471aadae04fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTextCtrl::LoadFile</definition>
        <argsstring>(const wxString &amp;filename, int fileType=wxTEXT_TYPE_ANY)</argsstring>
        <name>LoadFile</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fileType</declname>
          <defval><ref refid="textctrl_8h_1a7e8798ee8590fd579f4e80aa06488ec5" kindref="member">wxTEXT_TYPE_ANY</ref></defval>
        </param>
        <briefdescription>
<para>Loads and displays the named file, if it exists. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>The filename of the file to load. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fileType</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of file to load. This is currently ignored in <ref refid="classwx_text_ctrl" kindref="compound">wxTextCtrl</ref>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if successful, false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="1394" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_ctrl_1ab89671b5cd9e2da9a978f14e0f9931cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxTextCtrl::MarkDirty</definition>
        <argsstring>()</argsstring>
        <name>MarkDirty</name>
        <briefdescription>
<para>Mark text as modified (dirty). </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classwx_text_ctrl_1a08ad1dc6f4dbb77ecd60d9e1e61b1bd6" kindref="member">IsModified()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="1402" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_ctrl_1aaa898f4c8d488e17201555ba02411e53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTextCtrl::OnDropFiles</definition>
        <argsstring>(wxDropFilesEvent &amp;event)</argsstring>
        <name>OnDropFiles</name>
        <param>
          <type><ref refid="classwx_drop_files_event" kindref="compound">wxDropFilesEvent</ref> &amp;</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>This event handler function implements default drag and drop behaviour, which is to load the first dropped file into the control. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>The drop files event.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="remark"><para>This is not implemented on non-Windows platforms.</para></simplesect>
<simplesect kind="see"><para><ref refid="classwx_drop_files_event" kindref="compound">wxDropFilesEvent</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="1415" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_ctrl_1a898c3d89764271cf8bee160e2d2bbf18" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxTextCtrl::PositionToXY</definition>
        <argsstring>(long pos, long *x, long *y) const</argsstring>
        <name>PositionToXY</name>
        <param>
          <type>long</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>long *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>long *</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Converts given position to a zero-based column, line number pair. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>Position. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>Receives zero based column number. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>Receives zero based line number.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true on success, false on failure (most likely due to a too large position parameter).</para></simplesect>
<bold>wxPerl Note:</bold> In wxPerl this function takes only the <emphasis>pos</emphasis> argument and returns a 2-element list (x, y).</para><para><simplesect kind="see"><para><ref refid="classwx_text_ctrl_1a535bbd06fd08beee9055d5c05946b484" kindref="member">XYToPosition()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="1438" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_ctrl_1ac7e8926d052dd0dd7210cebab061237e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_point" kindref="compound">wxPoint</ref></type>
        <definition>wxPoint wxTextCtrl::PositionToCoords</definition>
        <argsstring>(long pos) const</argsstring>
        <name>PositionToCoords</name>
        <param>
          <type>long</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
<para>Converts given text position to client coordinates in pixels. </para>        </briefdescription>
        <detaileddescription>
<para>This function allows to find where is the character at the given position displayed in the text control.</para><para>Availability:<nonbreakablespace/><nonbreakablespace/>only available for the <ref refid="page_port_1page_port_wxmsw" kindref="member">wxMSW</ref>, <ref refid="page_port_1page_port_wxgtk" kindref="member">wxGTK</ref> ports. <onlyfor>wxmsw,wxgtk</onlyfor> . Additionally, wxGTK only implements this method for multiline controls and <ref refid="gdicmn_8h_1af5a90c753eaf3d3e3e5068a19ec3c1d0" kindref="member">wxDefaultPosition</ref> is always returned for the single line ones.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>Text position in 0 to <ref refid="classwx_text_entry_1a31f2b491c3039f038a5084da777c9af0" kindref="member">GetLastPosition()</ref> range (inclusive). </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>On success returns a <ref refid="classwx_point" kindref="compound">wxPoint</ref> which contains client coordinates for the given position in pixels, otherwise returns <ref refid="gdicmn_8h_1af5a90c753eaf3d3e3e5068a19ec3c1d0" kindref="member">wxDefaultPosition</ref>.</para></simplesect>
<simplesect kind="since"><para>2.9.3</para></simplesect>
<simplesect kind="see"><para><ref refid="classwx_text_ctrl_1a535bbd06fd08beee9055d5c05946b484" kindref="member">XYToPosition()</ref>, <ref refid="classwx_text_ctrl_1a898c3d89764271cf8bee160e2d2bbf18" kindref="member">PositionToXY()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="1460" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_ctrl_1a5cedd577ca31598235244b992229e411" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxTextCtrl::SaveFile</definition>
        <argsstring>(const wxString &amp;filename=wxEmptyString, int fileType=wxTEXT_TYPE_ANY)</argsstring>
        <name>SaveFile</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>filename</declname>
          <defval><ref refid="interface_2wx_2string_8h_1a9a321d587166a30017b608dd2d234033" kindref="member">wxEmptyString</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>fileType</declname>
          <defval><ref refid="textctrl_8h_1a7e8798ee8590fd579f4e80aa06488ec5" kindref="member">wxTEXT_TYPE_ANY</ref></defval>
        </param>
        <briefdescription>
<para>Saves the contents of the control in a text file. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the file in which to save the text. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fileType</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of file to save. This is currently ignored in <ref refid="classwx_text_ctrl" kindref="compound">wxTextCtrl</ref>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the operation was successful, false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="1473" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_ctrl_1a1c0ead0e3a2faa1bc16b1898e418f9e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxTextCtrl::SetDefaultStyle</definition>
        <argsstring>(const wxTextAttr &amp;style)</argsstring>
        <name>SetDefaultStyle</name>
        <param>
          <type>const <ref refid="classwx_text_attr" kindref="compound">wxTextAttr</ref> &amp;</type>
          <declname>style</declname>
        </param>
        <briefdescription>
<para>Changes the default style to use for the new text which is going to be added to the control using <ref refid="classwx_text_entry_1aa1b9419f95878c44234ff812b528c17b" kindref="member">WriteText()</ref> or <ref refid="classwx_text_entry_1af80b5a51906ca9c65fa6cdaa9640768b" kindref="member">AppendText()</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>If either of the font, foreground, or background colour is not set in <emphasis>style</emphasis>, the values of the previous default style are used for them. If the previous default style didn&apos;t set them neither, the global font or colours of the text control itself are used as fall back.</para><para>However if the <emphasis>style</emphasis> parameter is the default <ref refid="classwx_text_attr" kindref="compound">wxTextAttr</ref>, then the default style is just reset (instead of being combined with the new style which wouldn&apos;t change it at all).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>style</parametername>
</parameternamelist>
<parameterdescription>
<para>The style for the new text.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true on success, false if an error occurred (this may also mean that the styles are not supported under this platform).</para></simplesect>
<simplesect kind="see"><para><ref refid="classwx_text_ctrl_1aa377bc2c4abb51ef163cc5a41f082d70" kindref="member">GetDefaultStyle()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="1498" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_ctrl_1a73a48def8fe76ef303d7adc332d71ce7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxTextCtrl::SetModified</definition>
        <argsstring>(bool modified)</argsstring>
        <name>SetModified</name>
        <param>
          <type>bool</type>
          <declname>modified</declname>
        </param>
        <briefdescription>
<para>Marks the control as being modified by the user or not. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classwx_text_ctrl_1ab89671b5cd9e2da9a978f14e0f9931cf" kindref="member">MarkDirty()</ref>, <ref refid="classwx_text_ctrl_1ab9653877885738aeacacc731e0b759d5" kindref="member">DiscardEdits()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="1505" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_ctrl_1a0d972d3007e23ed9270d16b6bb326e80" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxTextCtrl::SetStyle</definition>
        <argsstring>(long start, long end, const wxTextAttr &amp;style)</argsstring>
        <name>SetStyle</name>
        <param>
          <type>long</type>
          <declname>start</declname>
        </param>
        <param>
          <type>long</type>
          <declname>end</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_text_attr" kindref="compound">wxTextAttr</ref> &amp;</type>
          <declname>style</declname>
        </param>
        <briefdescription>
<para>Changes the style of the given range. </para>        </briefdescription>
        <detaileddescription>
<para>If any attribute within <emphasis>style</emphasis> is not set, the corresponding attribute from <ref refid="classwx_text_ctrl_1aa377bc2c4abb51ef163cc5a41f082d70" kindref="member">GetDefaultStyle()</ref> is used.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>start</parametername>
</parameternamelist>
<parameterdescription>
<para>The start of the range to change. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>The end of the range to change. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>style</parametername>
</parameternamelist>
<parameterdescription>
<para>The new style for the range.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true on success, false if an error occurred (this may also mean that the styles are not supported under this platform).</para></simplesect>
<simplesect kind="see"><para><ref refid="classwx_text_ctrl_1a762bc2bc4875c45776a6df10a88d1b1d" kindref="member">GetStyle()</ref>, <ref refid="classwx_text_attr" kindref="compound">wxTextAttr</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="1526" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_ctrl_1ad4044ce304755d06fcbe5bd432b56783" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxTextCtrl::ShowPosition</definition>
        <argsstring>(long pos)</argsstring>
        <name>ShowPosition</name>
        <param>
          <type>long</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
<para>Makes the line containing the given position visible. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The position that should be visible. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="1534" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_text_ctrl_1a535bbd06fd08beee9055d5c05946b484" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>long</type>
        <definition>virtual long wxTextCtrl::XYToPosition</definition>
        <argsstring>(long x, long y) const</argsstring>
        <name>XYToPosition</name>
        <param>
          <type>long</type>
          <declname>x</declname>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Converts the given zero based column and line number to a position. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The column number. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The line number.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The position value, or -1 if x or y was invalid. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/textctrl.h" line="1547" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A text control allows text to be displayed and edited. </para>    </briefdescription>
    <detaileddescription>
<para>It may be single line or multi-line. Notice that a lot of methods of the text controls are found in the base <ref refid="classwx_text_entry" kindref="compound">wxTextEntry</ref> class which is a common base class for <ref refid="classwx_text_ctrl" kindref="compound">wxTextCtrl</ref> and other controls using a single line text entry field (e.g. <ref refid="classwx_combo_box" kindref="compound">wxComboBox</ref>).</para><para><linebreak/>
<heading level="2">Styles</heading>
</para><para>This class supports the following styles:</para><para> <itemizedlist>
<listitem><para>wxTE_PROCESS_ENTER: The control will generate the event <computeroutput>wxEVT_TEXT_ENTER</computeroutput> (otherwise pressing Enter key is either processed internally by the control or used for navigation between dialog controls). </para></listitem>
<listitem><para>wxTE_PROCESS_TAB: The control will receive <computeroutput>wxEVT_CHAR</computeroutput> events for TAB pressed - normally, TAB is used for passing to the next control in a dialog instead. For the control created with this style, you can still use Ctrl-Enter to pass to the next control from the keyboard. </para></listitem>
<listitem><para>wxTE_MULTILINE: The text control allows multiple lines. If this style is not specified, line break characters should not be used in the controls value. </para></listitem>
<listitem><para>wxTE_PASSWORD: The text will be echoed as asterisks. </para></listitem>
<listitem><para>wxTE_READONLY: The text will not be user-editable. </para></listitem>
<listitem><para>wxTE_RICH: Use rich text control under Win32, this allows to have more than 64KB of text in the control even under Win9x. This style is ignored under other platforms. </para></listitem>
<listitem><para>wxTE_RICH2: Use rich text control version 2.0 or 3.0 under Win32, this style is ignored under other platforms </para></listitem>
<listitem><para>wxTE_AUTO_URL: Highlight the URLs and generate the wxTextUrlEvents when mouse events occur over them. This style is only supported for wxTE_RICH Win32 and multi-line wxGTK2 text controls. </para></listitem>
<listitem><para>wxTE_NOHIDESEL: By default, the Windows text control doesn&apos;t show the selection when it doesn&apos;t have focus - use this style to force it to always show it. It doesn&apos;t do anything under other platforms. </para></listitem>
<listitem><para>wxHSCROLL: A horizontal scrollbar will be created and used, so that text won&apos;t be wrapped. No effect under wxGTK1. </para></listitem>
<listitem><para>wxTE_NO_VSCROLL: For multiline controls only: vertical scrollbar will never be created. This limits the amount of text which can be entered into the control to what can be displayed in it under MSW but not under GTK2. Currently not implemented for the other platforms. </para></listitem>
<listitem><para>wxTE_LEFT: The text in the control will be left-justified (default). </para></listitem>
<listitem><para>wxTE_CENTRE: The text in the control will be centered (currently wxMSW and wxGTK2 only). </para></listitem>
<listitem><para>wxTE_RIGHT: The text in the control will be right-justified (currently wxMSW and wxGTK2 only). </para></listitem>
<listitem><para>wxTE_DONTWRAP: Same as wxHSCROLL style: don&apos;t wrap at all, show horizontal scrollbar instead. </para></listitem>
<listitem><para>wxTE_CHARWRAP: Wrap the lines too long to be shown entirely at any position (wxUniv and wxGTK2 only). </para></listitem>
<listitem><para>wxTE_WORDWRAP: Wrap the lines too long to be shown entirely at word boundaries (wxUniv and wxGTK2 only). </para></listitem>
<listitem><para>wxTE_BESTWRAP: Wrap the lines at word boundaries or at any other character if there are words longer than the window width (this is the default). </para></listitem>
<listitem><para>wxTE_CAPITALIZE: On PocketPC and Smartphone, causes the first letter to be capitalized. <linebreak/>
 Note that alignment styles (wxTE_LEFT, wxTE_CENTRE and wxTE_RIGHT) can be changed dynamically after control creation on wxMSW and wxGTK. wxTE_READONLY, wxTE_PASSWORD and wrapping styles can be dynamically changed under wxGTK but not wxMSW. The other styles can be only set during control creation.</para></listitem>
</itemizedlist>
</para><sect1 id="classwx_text_ctrl_1textctrl_text_format">
<title>wxTextCtrl Text Format</title>
<para>The multiline text controls always store the text as a sequence of lines separated by <computeroutput>&apos;\n&apos;</computeroutput> characters, i.e. in the Unix text format even on non-Unix platforms. This allows the user code to ignore the differences between the platforms but at a price: the indices in the control such as those returned by <ref refid="classwx_text_entry_1aec1a523f158549abdef5271c55906902" kindref="member">GetInsertionPoint()</ref> or <ref refid="classwx_text_entry_1af8d6ff4ff8376bb762987069a69b984b" kindref="member">GetSelection()</ref> can <bold>not</bold> be used as indices into the string returned by <ref refid="classwx_text_entry_1a39335d9009b2053b5daf850c7b9d2974" kindref="member">GetValue()</ref> as they&apos;re going to be slightly off for platforms using <computeroutput>&quot;\\r\\n&quot;</computeroutput> as separator (as Windows does).</para><para>Instead, if you need to obtain a substring between the 2 indices obtained from the control with the help of the functions mentioned above, you should use <ref refid="classwx_text_entry_1ae568ccd892e44bf89f9918f9ed187af3" kindref="member">GetRange()</ref>. And the indices themselves can only be passed to other methods, for example <ref refid="classwx_text_entry_1a6e5460ec6e893ecb3e3ce90300373de8" kindref="member">SetInsertionPoint()</ref> or <ref refid="classwx_text_entry_1af7e298bc2a34bd646328f53efab766aa" kindref="member">SetSelection()</ref>.</para><para>To summarize: never use the indices returned by (multiline) <ref refid="classwx_text_ctrl" kindref="compound">wxTextCtrl</ref> as indices into the string it contains, but only as arguments to be passed back to the other <ref refid="classwx_text_ctrl" kindref="compound">wxTextCtrl</ref> methods. This problem doesn&apos;t arise for single-line platforms however where the indices in the control do correspond to the positions in the value string.</para></sect1>
<sect1 id="classwx_text_ctrl_1textctrl_styles">
<title>wxTextCtrl Styles.</title>
<para>Multi-line text controls support styling, i.e. provide a possibility to set colours and font for individual characters in it (note that under Windows <computeroutput>wxTE_RICH</computeroutput> style is required for style support). To use the styles you can either call <ref refid="classwx_text_ctrl_1a1c0ead0e3a2faa1bc16b1898e418f9e0" kindref="member">SetDefaultStyle()</ref> before inserting the text or call <ref refid="classwx_text_ctrl_1a0d972d3007e23ed9270d16b6bb326e80" kindref="member">SetStyle()</ref> later to change the style of the text already in the control (the first solution is much more efficient).</para><para>In either case, if the style doesn&apos;t specify some of the attributes (for example you only want to set the text colour but without changing the font nor the text background), the values of the default style will be used for them. If there is no default style, the attributes of the text control itself are used.</para><para>So the following code correctly describes what it does: the second call to <ref refid="classwx_text_ctrl_1a1c0ead0e3a2faa1bc16b1898e418f9e0" kindref="member">SetDefaultStyle()</ref> doesn&apos;t change the text foreground colour (which stays red) while the last one doesn&apos;t change the background colour (which stays grey):</para><para><programlisting><codeline><highlight class="normal">text-&gt;SetDefaultStyle(wxTextAttr(*wxRED));</highlight></codeline>
<codeline><highlight class="normal">text-&gt;AppendText(&quot;Red<sp/>text\n&quot;);</highlight></codeline>
<codeline><highlight class="normal">text-&gt;SetDefaultStyle(wxTextAttr(wxNullColour,<sp/>*wxLIGHT_GREY));</highlight></codeline>
<codeline><highlight class="normal">text-&gt;AppendText(&quot;Red<sp/>on<sp/>grey<sp/>text\n&quot;);</highlight></codeline>
<codeline><highlight class="normal">text-&gt;SetDefaultStyle(wxTextAttr(*wxBLUE);</highlight></codeline>
<codeline><highlight class="normal">text-&gt;AppendText(&quot;Blue<sp/>on<sp/>grey<sp/>text\n&quot;);</highlight></codeline>
</programlisting></para></sect1>
<sect1 id="classwx_text_ctrl_1textctrl_cpp_streams">
<title>wxTextCtrl and C++ Streams</title>
<para>This class multiply-inherits from <computeroutput>std::streambuf</computeroutput> (except for some really old compilers using non-standard iostream library), allowing code such as the following:</para><para><programlisting><codeline><highlight class="normal">wxTextCtrl<sp/>*control<sp/>=<sp/>new<sp/>wxTextCtrl(...);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">ostream<sp/>stream(control)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">stream<sp/>&lt;&lt;<sp/>123.456<sp/>&lt;&lt;<sp/>&quot;<sp/>some<sp/>text\n&quot;;</highlight></codeline>
<codeline><highlight class="normal">stream.flush();</highlight></codeline>
</programlisting></para><para>Note that even if your compiler doesn&apos;t support this (the symbol <computeroutput>wxHAS_TEXT_WINDOW_STREAM</computeroutput> has value of 0 then) you can still use <ref refid="classwx_text_ctrl" kindref="compound">wxTextCtrl</ref> itself in a stream-like manner:</para><para><programlisting><codeline><highlight class="normal">wxTextCtrl<sp/>*control<sp/>=<sp/>new<sp/>wxTextCtrl(...);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*control<sp/>&lt;&lt;<sp/>123.456<sp/>&lt;&lt;<sp/>&quot;<sp/>some<sp/>text\n&quot;;</highlight></codeline>
</programlisting></para><para>However the possibility to create a <computeroutput>std::ostream</computeroutput> associated with <ref refid="classwx_text_ctrl" kindref="compound">wxTextCtrl</ref> may be useful if you need to redirect the output of a function taking a <computeroutput>std::ostream</computeroutput> as parameter to a text control.</para><para>Another commonly requested need is to redirect <computeroutput>std::cout</computeroutput> to the text control. This may be done in the following way:</para><para><programlisting><codeline><highlight class="normal">#include<sp/>&lt;iostream&gt;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">wxTextCtrl<sp/>*control<sp/>=<sp/>new<sp/>wxTextCtrl(...);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">std::streambuf<sp/>*sbOld<sp/>=<sp/>std::cout.rdbuf();</highlight></codeline>
<codeline><highlight class="normal">std::cout.rdbuf(control);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>use<sp/>cout<sp/>as<sp/>usual,<sp/>the<sp/>output<sp/>appears<sp/>in<sp/>the<sp/>text<sp/>control</highlight></codeline>
<codeline><highlight class="normal">...</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">std::cout.rdbuf(sbOld);</highlight></codeline>
</programlisting></para><para>But wxWidgets provides a convenient class to make it even simpler so instead you may just do</para><para><programlisting><codeline><highlight class="normal">#include<sp/>&lt;iostream&gt;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">wxTextCtrl<sp/>*control<sp/>=<sp/>new<sp/>wxTextCtrl(...);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">wxStreamToTextRedirector<sp/>redirect(control);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>all<sp/>output<sp/>to<sp/>cout<sp/>goes<sp/>into<sp/>the<sp/>text<sp/>control<sp/>until<sp/>the<sp/>exit<sp/>from</highlight></codeline>
<codeline><highlight class="normal">//<sp/>current<sp/>scope</highlight></codeline>
</programlisting></para><para>See <ref refid="classwx_stream_to_text_redirector" kindref="compound">wxStreamToTextRedirector</ref> for more details.</para></sect1>
<sect1 id="classwx_text_ctrl_1textctrl_event_handling">
<title>Event Handling.</title>
<para>The following commands are processed by default event handlers in <ref refid="classwx_text_ctrl" kindref="compound">wxTextCtrl</ref>: <computeroutput>wxID_CUT</computeroutput>, <computeroutput>wxID_COPY</computeroutput>, <computeroutput>wxID_PASTE</computeroutput>, <computeroutput>wxID_UNDO</computeroutput>, <computeroutput>wxID_REDO</computeroutput>. The associated UI update events are also processed automatically, when the control has the focus.</para><para><linebreak/>
<heading level="2">Events emitted by this class</heading>
</para><para>The following event handler macros redirect the events to member function handlers &apos;<bold>func</bold>&apos; with prototypes like: void<nonbreakablespace/>handlerFuncName(<ref refid="classwx_command_event" kindref="compound">wxCommandEvent</ref>&amp;<nonbreakablespace/>event)</para><para>Event macros for events emitted by this class: <itemizedlist>
<listitem><para>EVT_TEXT(id,  func): Respond to a <computeroutput>wxEVT_TEXT</computeroutput> event, generated when the text changes. Notice that this event will be sent when the text controls contents changes <ndash/> whether this is due to user input or comes from the program itself (for example, if <ref refid="classwx_text_entry_1a90f876b2dd83ba5c97ba0c193b386e9f" kindref="member">wxTextCtrl::SetValue()</ref> is called); see <ref refid="classwx_text_entry_1a8c52ab71f51c8f80556c2c8e763cbca1" kindref="member">wxTextCtrl::ChangeValue()</ref> for a function which does not send this event. This event is however not sent during the control creation. </para></listitem>
<listitem><para>EVT_TEXT_ENTER(id,  func): Respond to a <computeroutput>wxEVT_TEXT_ENTER</computeroutput> event, generated when enter is pressed in a text control which must have wxTE_PROCESS_ENTER style for this event to be generated. </para></listitem>
<listitem><para>EVT_TEXT_URL(id,  func): A mouse event occurred over an URL in the text control (wxMSW and wxGTK2 only currently). </para></listitem>
<listitem><para>EVT_TEXT_MAXLEN(id,  func): This event is generated when the user tries to enter more text into the control than the limit set by <ref refid="classwx_text_entry_1a5b9dea0d1adeb9cc14309600de6aff50" kindref="member">wxTextCtrl::SetMaxLength()</ref>, see its description. <linebreak/>
 <heading level="2"></heading>
</para></listitem>
</itemizedlist>
Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxcore" kindref="member">wxCore</ref> &lt;&gt;&lt; =&apos;&apos;&gt;:&lt;/&gt;&amp;;&amp;;&lt; =&apos;&apos;&gt;\ &lt;/&gt;&lt;/&gt; <linebreak/>
<image type="html" name="appear-textctrl-msw.png">wxMSW Appearance</image>
<linebreak/>
<linebreak/>
<image type="html" name="appear-textctrl-gtk.png">wxGTK Appearance</image>
<linebreak/>
<linebreak/>
<image type="html" name="appear-textctrl-mac.png">wxOSX Appearance</image>
<linebreak/>
</para><para><simplesect kind="see"><para><ref refid="classwx_text_ctrl_1a4216ca88aa1610edc00c69e26eb92fbd" kindref="member">wxTextCtrl::Create</ref>, <ref refid="classwx_validator" kindref="compound">wxValidator</ref> </para></simplesect>
</para></sect1>
    </detaileddescription>
    <inheritancegraph>
      <node id="7860">
        <label>wxObject</label>
        <link refid="classwx_object"/>
      </node>
      <node id="7863">
        <label>wxSearchCtrl</label>
        <link refid="classwx_search_ctrl"/>
        <childnode refid="7856" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7856">
        <label>wxTextCtrl</label>
        <link refid="classwx_text_ctrl"/>
        <childnode refid="7857" relation="public-inheritance">
        </childnode>
        <childnode refid="7862" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7859">
        <label>wxEvtHandler</label>
        <link refid="classwx_evt_handler"/>
        <childnode refid="7860" relation="public-inheritance">
        </childnode>
        <childnode refid="7861" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7861">
        <label>wxTrackable</label>
        <link refid="classwx_trackable"/>
      </node>
      <node id="7862">
        <label>wxTextEntry</label>
        <link refid="classwx_text_entry"/>
      </node>
      <node id="7857">
        <label>wxControl</label>
        <link refid="classwx_control"/>
        <childnode refid="7858" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7858">
        <label>wxWindow</label>
        <link refid="classwx_window"/>
        <childnode refid="7859" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="7868">
        <label>wxObject</label>
        <link refid="classwx_object"/>
        <childnode refid="7869" relation="usage">
          <edgelabel>m_refData</edgelabel>
        </childnode>
      </node>
      <node id="7864">
        <label>wxTextCtrl</label>
        <link refid="classwx_text_ctrl"/>
        <childnode refid="7865" relation="public-inheritance">
        </childnode>
        <childnode refid="7871" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7867">
        <label>wxEvtHandler</label>
        <link refid="classwx_evt_handler"/>
        <childnode refid="7868" relation="public-inheritance">
        </childnode>
        <childnode refid="7870" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7870">
        <label>wxTrackable</label>
        <link refid="classwx_trackable"/>
      </node>
      <node id="7871">
        <label>wxTextEntry</label>
        <link refid="classwx_text_entry"/>
      </node>
      <node id="7865">
        <label>wxControl</label>
        <link refid="classwx_control"/>
        <childnode refid="7866" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7866">
        <label>wxWindow</label>
        <link refid="classwx_window"/>
        <childnode refid="7867" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7869">
        <label>wxObjectRefData</label>
        <link refid="classwx_object_ref_data"/>
      </node>
    </collaborationgraph>
    <location file="interface/wx/textctrl.h" line="1161" column="1" bodyfile="interface/wx/textctrl.h" bodystart="1159" bodyend="1570"/>
    <listofallmembers>
      <member refid="classwx_window_1a1da8baa734b9872d0c085b86a7b5d817" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>AcceptsFocus</name></member>
      <member refid="classwx_window_1a3a0cb3bd5e82462b19df9f24ad6d9ac4" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>AcceptsFocusFromKeyboard</name></member>
      <member refid="classwx_window_1af0c30b930ecf57f94b8cfc8871e8fd94" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>AcceptsFocusRecursively</name></member>
      <member refid="classwx_window_1abf60159278059a5bb397eb8647227bb3" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>AddChild</name></member>
      <member refid="classwx_evt_handler_1a7dc3c701781f4044372049de5004137e" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>AddFilter</name></member>
      <member refid="classwx_window_1a774b5b5548a6258727b5e2099e63ae9a" prot="protected" virt="virtual"><scope>wxTextCtrl</scope><name>AddPendingEvent</name></member>
      <member refid="classwx_window_1a71d1daa71f1ad1f6cbaac54db7e71af3" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>AdjustForLayoutDirection</name></member>
      <member refid="classwx_object_1a60204063f3cc3aa2fa1c7ff5bda9eb13" prot="protected" virt="non-virtual"><scope>wxTextCtrl</scope><name>AllocExclusive</name></member>
      <member refid="classwx_window_1aae29552806a328c6a55ef8f07647f5ba" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>AlwaysShowScrollbars</name></member>
      <member refid="classwx_text_entry_1af80b5a51906ca9c65fa6cdaa9640768b" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>AppendText</name></member>
      <member refid="classwx_text_entry_1ad911d59d6b381a20b0a6c34df2ac1d9f" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>AutoComplete</name></member>
      <member refid="classwx_text_entry_1ae8ca40185ba6bbaacb4715039d73342b" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>AutoComplete</name></member>
      <member refid="classwx_text_entry_1ab02338d68d51f103551454298578851c" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>AutoCompleteDirectories</name></member>
      <member refid="classwx_text_entry_1ad40d7e35d8bb9c9ab8e4ffa1b801a5d5" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>AutoCompleteFileNames</name></member>
      <member refid="classwx_window_1ab4cea6ace96193b5c4282e097a6fbfee" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>BeginRepositioningChildren</name></member>
      <member refid="classwx_evt_handler_1a0f30c8fa5583b4a5f661897d63de3b62" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>Bind</name></member>
      <member refid="classwx_evt_handler_1a03cc68ca201fb79c7e837919025be71a" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>Bind</name></member>
      <member refid="classwx_window_1a11b5d8d94efd0ab52eb2c95a6aa88cdf" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>CacheBestSize</name></member>
      <member refid="classwx_evt_handler_1a63c7351618fd77330d80a250b3719519" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>CallAfter</name></member>
      <member refid="classwx_evt_handler_1a910416e4d0b1f38cec02213b8a0c6a12" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>CallAfter</name></member>
      <member refid="classwx_window_1acc4e456ed056a27ec61cd296b96c1e3e" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>CanAcceptFocus</name></member>
      <member refid="classwx_window_1ade15bb13dc6d51a8e6ecd49eb3f0f99b" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>CanAcceptFocusFromKeyboard</name></member>
      <member refid="classwx_text_entry_1a620eaa062c530c194dd3a079991c1167" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>CanCopy</name></member>
      <member refid="classwx_text_entry_1a5f680c7b00d718f295e09288d3a16b66" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>CanCut</name></member>
      <member refid="classwx_text_entry_1ae03fe0c746bd7230fc02eb7df8d7650c" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>CanPaste</name></member>
      <member refid="classwx_text_entry_1ab99240d67d8c82511ea3954a1c68ca77" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>CanRedo</name></member>
      <member refid="classwx_window_1a6b5bbd3bf890f98897187879152ad97a" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>CanScroll</name></member>
      <member refid="classwx_window_1a64f7f6fb75bf4b7281e1d33542d523c7" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>CanSetTransparent</name></member>
      <member refid="classwx_text_entry_1a7c7e533085c5e4cf61450ccf2ea7a5ed" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>CanUndo</name></member>
      <member refid="classwx_window_1a5c72c6260a73ef77bb0b1f7ec85fcfef" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>CaptureMouse</name></member>
      <member refid="classwx_window_1a06c0ecb262995b40083bfb446a6cff99" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>Center</name></member>
      <member refid="classwx_window_1a2dc4e0a85d33fc55cc9650eaea1da0a4" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>CenterOnParent</name></member>
      <member refid="classwx_window_1a4a1819eeee3f2143cdde4f329ffde787" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>Centre</name></member>
      <member refid="classwx_window_1ab8e9b91b0e2db344fd71259616dfd433" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>CentreOnParent</name></member>
      <member refid="classwx_text_entry_1a8c52ab71f51c8f80556c2c8e763cbca1" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>ChangeValue</name></member>
      <member refid="classwx_text_entry_1a98b8e3fab8a5ac9944c2cefbb09ab3a7" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>Clear</name></member>
      <member refid="classwx_window_1a61e833684ee5c89775e91e88be1a9a52" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>ClearBackground</name></member>
      <member refid="classwx_window_1af5e852c8695297c0328f1dfe3908605a" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>ClientToScreen</name></member>
      <member refid="classwx_window_1add6f5472d0d8fe0074145a886568721c" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>ClientToScreen</name></member>
      <member refid="classwx_window_1a5c72ca7de40d4e99aff55e79aad3962e" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>ClientToWindowSize</name></member>
      <member refid="classwx_object_1a436fc8fe68cf8a31000296d9cd3d2427" prot="protected" virt="virtual"><scope>wxTextCtrl</scope><name>CloneRefData</name></member>
      <member refid="classwx_window_1a3e44f4a494fc9ef4346c4fba70c8de0c" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>Close</name></member>
      <member refid="classwx_control_1a8cd7ac81debaf506d6d146528c3d9a82" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>Command</name></member>
      <member refid="classwx_evt_handler_1a78719e8b82c9f9c6e4056b3449df1943" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>Connect</name></member>
      <member refid="classwx_evt_handler_1a1e8b5fc4c7e7f6d32d40bc00d4108ba4" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>Connect</name></member>
      <member refid="classwx_evt_handler_1aa290d9b67348e74c1da8497955a4e35c" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>Connect</name></member>
      <member refid="classwx_window_1a3dbe034120d742c4f5f6d64dc5d69590" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>ConvertDialogToPixels</name></member>
      <member refid="classwx_window_1ad70d63964459bb21f81bc0b1f09e84f4" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>ConvertDialogToPixels</name></member>
      <member refid="classwx_window_1a321de67666eff37b39556802c8029201" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>ConvertPixelsToDialog</name></member>
      <member refid="classwx_window_1a533552c4673c7a11f05bf9261b4dff5c" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>ConvertPixelsToDialog</name></member>
      <member refid="classwx_text_entry_1a94675646b91a2d5a18e3ca7395cafe77" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>Copy</name></member>
      <member refid="classwx_text_ctrl_1a4216ca88aa1610edc00c69e26eb92fbd" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>Create</name></member>
      <member refid="classwx_control_1abe23789c94c86907463a0e8434be822a" prot="public" virt="non-virtual" ambiguityscope="wxControl::"><scope>wxTextCtrl</scope><name>Create</name></member>
      <member refid="classwx_window_1a95b7ca8faa033f5ab35458887c07bf38" prot="public" virt="non-virtual" ambiguityscope="wxWindow::"><scope>wxTextCtrl</scope><name>Create</name></member>
      <member refid="classwx_object_1a3f4f497c65cef611e121c41f21dd5ccc" prot="protected" virt="virtual"><scope>wxTextCtrl</scope><name>CreateRefData</name></member>
      <member refid="classwx_text_entry_1a571332a18ed5cdecd76a259ee97ae5a1" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>Cut</name></member>
      <member refid="classwx_evt_handler_1a6e7f9cf4ebd0623c1d94979855d096f8" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>DeletePendingEvents</name></member>
      <member refid="classwx_window_1a6bf0c5be864544d9ce0560087667b7fc" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>Destroy</name></member>
      <member refid="classwx_window_1aff47b32c8d42d515ea0bb6a6c2fea917" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>DestroyChildren</name></member>
      <member refid="classwx_window_1a26d7329a9a753fa0445501f01f66c41e" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>Disable</name></member>
      <member refid="classwx_text_ctrl_1ab9653877885738aeacacc731e0b759d5" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>DiscardEdits</name></member>
      <member refid="classwx_evt_handler_1a13061cf0ed01ac10a804ac057ef4bdbc" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>Disconnect</name></member>
      <member refid="classwx_evt_handler_1a2f171e19444b9c4034c5e11f24fa9c91" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>Disconnect</name></member>
      <member refid="classwx_evt_handler_1a16a6f823853e4b74b43dd9a2cf3abee6" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>Disconnect</name></member>
      <member refid="classwx_window_1a2d10b472a4962d1c852c83d55252c44b" prot="protected" virt="virtual"><scope>wxTextCtrl</scope><name>DoCentre</name></member>
      <member refid="classwx_window_1ae07ab0b5cabb750f4e396b6c95e4abf7" prot="protected" virt="virtual"><scope>wxTextCtrl</scope><name>DoGetBestClientHeight</name></member>
      <member refid="classwx_window_1a68f3ec28a29b2a514b20c3e80255d82e" prot="protected" virt="virtual"><scope>wxTextCtrl</scope><name>DoGetBestClientSize</name></member>
      <member refid="classwx_window_1ac68cb9912dc456e2faa8c745b2437b75" prot="protected" virt="virtual"><scope>wxTextCtrl</scope><name>DoGetBestClientWidth</name></member>
      <member refid="classwx_window_1aac6408f1814dce3f8332cc69fe5104f1" prot="protected" virt="virtual"><scope>wxTextCtrl</scope><name>DoGetBestSize</name></member>
      <member refid="classwx_window_1ae8a84a80645e99f4d24a22e5c386f626" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>DoUpdateWindowUI</name></member>
      <member refid="classwx_window_1a7e7015bc61bd79b6821d2dccaecf9eda" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>DragAcceptFiles</name></member>
      <member refid="classwx_control_1a0bb834cae2a8986aceddb89f84ef4ed1" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>Ellipsize</name></member>
      <member refid="classwx_text_ctrl_1aac3e7f2124aafd67df6f6efbc285a40b" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>EmulateKeyPress</name></member>
      <member refid="classwx_window_1a4e933aa891f42fbb3b87438057c573af" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>Enable</name></member>
      <member refid="classwx_window_1a1203fbd238d781253b44e0e459532301" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>EndRepositioningChildren</name></member>
      <member refid="classwx_control_1abdbd9c0684856546671e759dd95b23d4" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>EscapeMnemonics</name></member>
      <member refid="classwx_window_1a777258379a3eef1b0530f12db6b77cab" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>FindFocus</name></member>
      <member refid="classwx_window_1a619b5743645b86054aa3fff12ba4c7ce" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>FindWindow</name></member>
      <member refid="classwx_window_1a3b2f2c9b6346bdb3dcba0edfd9a7f224" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>FindWindow</name></member>
      <member refid="classwx_window_1a101201b12ccd5fba49fa06ed19b5c6fb" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>FindWindowById</name></member>
      <member refid="classwx_window_1ab8eb148fffae109e0fac86e88d569670" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>FindWindowByLabel</name></member>
      <member refid="classwx_window_1adbe4eea02f615313c12a2c00557a44c3" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>FindWindowByName</name></member>
      <member refid="classwx_window_1a2bf38a6cbd1f82fb46f274396f482994" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>Fit</name></member>
      <member refid="classwx_window_1a55aca401aab29d59f7cc53f89ba2e38d" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>FitInside</name></member>
      <member refid="classwx_window_1a15c678314cfc1d807196bc298b713ed3" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>Freeze</name></member>
      <member refid="classwx_window_1aefc02d7275010ebb8d5b66569e7287c4" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>GetAcceleratorTable</name></member>
      <member refid="classwx_window_1ae0469b554e9c501b356b3ed4b6d8a3af" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>GetAccessible</name></member>
      <member refid="classwx_window_1a64e3f936ab812d24966827ea4e0f15c0" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>GetAutoLayout</name></member>
      <member refid="classwx_window_1af51668ec32e9e44db45574a15ec215b4" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>GetBackgroundColour</name></member>
      <member refid="classwx_window_1a4f09e6a20858a0667df3dda44715d6b9" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>GetBackgroundStyle</name></member>
      <member refid="classwx_window_1a9ec151255cbb44935136d9bbff31a082" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>GetBestHeight</name></member>
      <member refid="classwx_window_1ae507a81d682023383e465d8e913595b6" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>GetBestSize</name></member>
      <member refid="classwx_window_1a1e4b09c35c0e5495905da45c1580709d" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>GetBestVirtualSize</name></member>
      <member refid="classwx_window_1a5c797a38418a6f2fb79f800112ec73b0" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>GetBestWidth</name></member>
      <member refid="classwx_window_1a42908ba076f2a93ee81201dc151c3b23" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>GetBorder</name></member>
      <member refid="classwx_window_1a94e3a0ce6c1aae57562678996adbf2fd" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>GetBorder</name></member>
      <member refid="classwx_window_1a483d3f73925bd38c3964dad058672f0a" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>GetCapture</name></member>
      <member refid="classwx_window_1a2ee3eba6dbfb37944ed0ce03383bfc34" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>GetCaret</name></member>
      <member refid="classwx_window_1aa488520238094f858bea3c3a2c6b9809" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>GetCharHeight</name></member>
      <member refid="classwx_window_1a8f92c15635a44b85392d16f5906c31ef" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>GetCharWidth</name></member>
      <member refid="classwx_window_1ad500085ad0511879b5e018706c91a494" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>GetChildren</name></member>
      <member refid="classwx_window_1afcd1cf1f16e375d00b8d0885997adc90" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>GetChildren</name></member>
      <member refid="classwx_window_1a170d85e4aa0cbacbfcdd0728120e1417" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>GetClassDefaultAttributes</name></member>
      <member refid="classwx_object_1ae6d365f2556b26767ced8410c5e839d0" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>GetClassInfo</name></member>
      <member refid="classwx_window_1a4a1b567002d1039bc630885fc09808ae" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>GetClientAreaOrigin</name></member>
      <member refid="classwx_evt_handler_1a291bc92c1bea8abfff276a8e333d46db" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>GetClientData</name></member>
      <member refid="classwx_evt_handler_1a371742bda1686e82065f3a1f2acb31c8" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>GetClientObject</name></member>
      <member refid="classwx_window_1a5c6428c6aa8634b5c5963d1d0eaa75c7" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>GetClientRect</name></member>
      <member refid="classwx_window_1ad34d4bbd6d3064aa56e7a2cc3ee97be3" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>GetClientSize</name></member>
      <member refid="classwx_window_1a13d04f24ab78611f895bc40776118e90" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>GetClientSize</name></member>
      <member refid="classwx_window_1ade068146db3eea2adcde2533de17473b" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>GetConstraints</name></member>
      <member refid="classwx_window_1aec50a3057efbfb35ad16f433603f6f00" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>GetContainingSizer</name></member>
      <member refid="classwx_window_1a7070700104b0f739260a8d803c64e0e1" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>GetContentScaleFactor</name></member>
      <member refid="classwx_window_1aa467591bdb0ae14a625045553e62a120" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>GetCursor</name></member>
      <member refid="classwx_window_1a377de92ac032b60a9241fab88efdbf11" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>GetDefaultAttributes</name></member>
      <member refid="classwx_text_ctrl_1aa377bc2c4abb51ef163cc5a41f082d70" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>GetDefaultStyle</name></member>
      <member refid="classwx_window_1ae4bec3096f7e13eec8a537aa24cd6112" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>GetDropTarget</name></member>
      <member refid="classwx_window_1aa88f6c4946d1ae4821aca652efbf7c62" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>GetEffectiveMinSize</name></member>
      <member refid="classwx_window_1ad54b0c1662006da89d7e5bf8a64f93eb" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>GetEventHandler</name></member>
      <member refid="classwx_evt_handler_1a7742d81c5eb7849a0ad75b9de8575153" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>GetEvtHandlerEnabled</name></member>
      <member refid="classwx_window_1a0db5cd18ab5166b44da9d07f92bb5070" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>GetExtraStyle</name></member>
      <member refid="classwx_window_1af25f8a799106d61b50d3ee796ba43728" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>GetFont</name></member>
      <member refid="classwx_window_1ad9a607b86d9175d395f245ecbe00f38b" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>GetForegroundColour</name></member>
      <member refid="classwx_window_1abe0d47e5d63394b098bdad64eb1a60d2" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>GetGrandParent</name></member>
      <member refid="classwx_window_1a108426e918ac377fef17662885a7a459" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>GetHandle</name></member>
      <member refid="classwx_window_1acb28971fe25abd1f5c6d768e203a042a" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>GetHelpText</name></member>
      <member refid="classwx_window_1a7d11a419fede5049d7c12c337e5f5dfc" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>GetHelpTextAtPoint</name></member>
      <member refid="classwx_text_entry_1ae05d111ea78f08ee38d1b404c3dcf9ae" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>GetHint</name></member>
      <member refid="classwx_window_1a79037f68b290bba5811628ec67bf3b24" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>GetId</name></member>
      <member refid="classwx_text_entry_1aec1a523f158549abdef5271c55906902" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>GetInsertionPoint</name></member>
      <member refid="classwx_control_1a9d03cd7f44c4bb1722f39fbc7a5d8cbd" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>GetLabel</name></member>
      <member refid="classwx_control_1a4ec6a7ee61553cd1df77d50491cee820" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>GetLabelText</name></member>
      <member refid="classwx_control_1ae892fefe6b88168c158e11e975633665" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>GetLabelText</name></member>
      <member refid="classwx_text_entry_1a31f2b491c3039f038a5084da777c9af0" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>GetLastPosition</name></member>
      <member refid="classwx_window_1afafd17cbb5dd6d899b25360255e0bdae" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>GetLayoutDirection</name></member>
      <member refid="classwx_text_ctrl_1a26e637b26508d7e97c209d22db32efb6" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>GetLineLength</name></member>
      <member refid="classwx_text_ctrl_1afaa68cea1c13d82d5e98e99d60d5cc81" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>GetLineText</name></member>
      <member refid="classwx_text_entry_1aff48d044d76f1cc8708bd9abb5968fa8" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>GetMargins</name></member>
      <member refid="classwx_window_1a6690ee82a5a246e070bf0a7dc4bcb5b3" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>GetMaxClientSize</name></member>
      <member refid="classwx_window_1a98bbe53eddb91b508b0082783402d954" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>GetMaxHeight</name></member>
      <member refid="classwx_window_1a107966aa1b2d50107b3b95cf0d7d9901" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>GetMaxSize</name></member>
      <member refid="classwx_window_1afde7288b24e48f2d0b5d2c7376f10426" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>GetMaxWidth</name></member>
      <member refid="classwx_window_1a24d22aacd834cbe6cd5b252fa91c3bd9" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>GetMinClientSize</name></member>
      <member refid="classwx_window_1a81bfd762272d33850c0511d65d896ca3" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>GetMinHeight</name></member>
      <member refid="classwx_window_1a90ce6ffc8e0af7476157c9e1e6b616df" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>GetMinSize</name></member>
      <member refid="classwx_window_1a327e1a8054d604a34cc5473a8c415e4d" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>GetMinWidth</name></member>
      <member refid="classwx_window_1a93b9ec7d9eaf152c17f3bf2698551ef4" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>GetName</name></member>
      <member refid="classwx_evt_handler_1addedbed1c9f970c2b1e2893a42805b6a" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>GetNextHandler</name></member>
      <member refid="classwx_window_1ad256ad684063935d897956a87c932b38" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>GetNextSibling</name></member>
      <member refid="classwx_text_ctrl_1acc92cde8ae6d479f30dd4f1e877f7a16" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>GetNumberOfLines</name></member>
      <member refid="classwx_window_1a6cd311a6c6ca7329714b969834f679f9" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>GetParent</name></member>
      <member refid="classwx_window_1a9b7de6ea85ca926b668ba0682a61a93e" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>GetPopupMenuSelectionFromUser</name></member>
      <member refid="classwx_window_1a00f5cb3cac003205317a565a33d4bb27" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>GetPopupMenuSelectionFromUser</name></member>
      <member refid="classwx_window_1ac2eece00a4b4b83e1433b59a5d31584f" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>GetPosition</name></member>
      <member refid="classwx_window_1abfeeca6db664c24603f6371811397e0d" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>GetPosition</name></member>
      <member refid="classwx_evt_handler_1a69bfde9623d89eb91e363c53616e4587" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>GetPreviousHandler</name></member>
      <member refid="classwx_window_1a02b3a109f926c86fa1f34a00c1b5ec67" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>GetPrevSibling</name></member>
      <member refid="classwx_text_entry_1ae568ccd892e44bf89f9918f9ed187af3" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>GetRange</name></member>
      <member refid="classwx_window_1a68e83a724887b18525fdbd947b2d8c88" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>GetRect</name></member>
      <member refid="classwx_object_1af3c6c76a775864832f1536d3c0de3a2b" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>GetRefData</name></member>
      <member refid="classwx_window_1a285a81f00ed59fa09938343708938566" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>GetScreenPosition</name></member>
      <member refid="classwx_window_1a5786c420fd2958bde726c923621700aa" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>GetScreenPosition</name></member>
      <member refid="classwx_window_1ae8f6c4a201650ad63bb5ebe4f35eb41e" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>GetScreenRect</name></member>
      <member refid="classwx_window_1add5f4e225e16154f9148451a7d32d0b3" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>GetScrollPos</name></member>
      <member refid="classwx_window_1a23b41cf939ab67a002d8f404ac4cf76b" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>GetScrollRange</name></member>
      <member refid="classwx_window_1ac34f47fef73e3a178e8c335aa38ce567" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>GetScrollThumb</name></member>
      <member refid="classwx_text_entry_1af8d6ff4ff8376bb762987069a69b984b" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>GetSelection</name></member>
      <member refid="classwx_window_1a36ea282508dd55d6f3981ec205ed0449" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>GetSize</name></member>
      <member refid="classwx_window_1a36bf1ac809da1b0cd9c67fd806c4d9b5" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>GetSize</name></member>
      <member refid="classwx_control_1a252c7408d6dfa8d70e8dbe88cea9695d" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>GetSizeFromTextSize</name></member>
      <member refid="classwx_control_1a4d9169af074418aa3528f7b5fca61f94" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>GetSizeFromTextSize</name></member>
      <member refid="classwx_window_1a01e9d43576615166ee309f4358bdd26d" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>GetSizer</name></member>
      <member refid="classwx_text_entry_1adac8cae1eef10e198d3f8777d91b2607" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>GetStringSelection</name></member>
      <member refid="classwx_text_ctrl_1a762bc2bc4875c45776a6df10a88d1b1d" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>GetStyle</name></member>
      <member refid="classwx_window_1a4220668e42f3a173bf29d335da4db2c3" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>GetTextExtent</name></member>
      <member refid="classwx_window_1a69fc79069821a633eba9c5d917fd8b7b" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>GetTextExtent</name></member>
      <member refid="classwx_window_1a578145344f92cfee755a9c87f6703432" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>GetThemeEnabled</name></member>
      <member refid="classwx_window_1a44eecb46979b528c184e26ce6c52b3fa" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>GetToolTip</name></member>
      <member refid="classwx_window_1a7e7c9a92f9efbb47073704646db1344e" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>GetToolTipText</name></member>
      <member refid="classwx_window_1a23370688a951ed60ac25146af854d2ec" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>GetUpdateClientRect</name></member>
      <member refid="classwx_window_1a522f73fd32e54b11466284acc43f76f3" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>GetUpdateRegion</name></member>
      <member refid="classwx_window_1a6a332586346cb9ece4a8fe058a7b88c4" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>GetValidator</name></member>
      <member refid="classwx_text_entry_1a39335d9009b2053b5daf850c7b9d2974" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>GetValue</name></member>
      <member refid="classwx_window_1a557f92e6c66b6654c95315d4461d0e11" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>GetVirtualSize</name></member>
      <member refid="classwx_window_1a24cefbb69173899ec4d62460b2932ed9" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>GetVirtualSize</name></member>
      <member refid="classwx_window_1a21c97d5bcf61c4c664bd33066f5567b1" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>GetWindowBorderSize</name></member>
      <member refid="classwx_window_1a418007123fec131b47d9841ac6d34891" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>GetWindowStyle</name></member>
      <member refid="classwx_window_1ad67a731cd937a21e561593d4a0c44979" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>GetWindowStyleFlag</name></member>
      <member refid="classwx_window_1a9027305e391de617259407f2c12a54bf" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>GetWindowVariant</name></member>
      <member refid="classwx_window_1a89d1b079de97aac170e999692095872c" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>HandleAsNavigationKey</name></member>
      <member refid="classwx_window_1a89816f1b78c125c59418463caea35c9a" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>HandleWindowEvent</name></member>
      <member refid="classwx_window_1a41e1b77ac82c7420d34b8030d5f26046" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>HasCapture</name></member>
      <member refid="classwx_window_1aeee5333e672a3a510db48d2af37ddee9" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>HasExtraStyle</name></member>
      <member refid="classwx_window_1a3d1d00b4cd51fa3c187e9d609d022aa4" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>HasFlag</name></member>
      <member refid="classwx_window_1adaf042744bdbb8a5f9feccbe7749468a" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>HasFocus</name></member>
      <member refid="classwx_window_1a55c7b73596f2eec2694e8f512013ee81" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>HasMultiplePages</name></member>
      <member refid="classwx_window_1ae50c259b165d9366729734bc124cf184" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>HasScrollbar</name></member>
      <member refid="classwx_window_1ab9cbcb6d6f4a272c2f0342e69a13b59a" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>HasTransparentBackground</name></member>
      <member refid="classwx_window_1a7ed103df04014cb3c59c6a3fb4d95328" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>Hide</name></member>
      <member refid="classwx_window_1a5326fbb26557a224507a1c06e5640e89" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>HideWithEffect</name></member>
      <member refid="classwx_text_ctrl_1a1b1bece2f171a59bb7c03cff42f94f4f" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>HitTest</name></member>
      <member refid="classwx_text_ctrl_1a4d3f78900676016e435ad75fac54ad58" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>HitTest</name></member>
      <member refid="classwx_window_1ae8705e241daca73105921b72326258b5" prot="public" virt="non-virtual" ambiguityscope="wxControl::"><scope>wxTextCtrl</scope><name>HitTest</name></member>
      <member refid="classwx_window_1ace65f76df096662bd15722d10c1905c9" prot="public" virt="non-virtual" ambiguityscope="wxControl::"><scope>wxTextCtrl</scope><name>HitTest</name></member>
      <member refid="classwx_window_1a9fd5b6520c1b30eb8e82bb5d56bc24c0" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>InformFirstDirection</name></member>
      <member refid="classwx_window_1a6b1bf9e099704e7a493b8c4666b1f7f7" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>InheritAttributes</name></member>
      <member refid="classwx_window_1af05b95cfeed0bee6f44797572367b26e" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>InheritsBackgroundColour</name></member>
      <member refid="classwx_window_1aa90a260c0a835a133043460b7d0024a8" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>InitDialog</name></member>
      <member refid="classwx_window_1ae1b56ca87d8590ee5e576012229a380a" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>InvalidateBestSize</name></member>
      <member refid="classwx_window_1a5fd3fba5d43efb67a834c0483a9c3d0e" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>IsBeingDeleted</name></member>
      <member refid="classwx_window_1ab7f60a0c4acdd832a46aabf0d09cd54a" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>IsDescendant</name></member>
      <member refid="classwx_window_1abe7a8c61796262b517f5e0765374cc2b" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>IsDoubleBuffered</name></member>
      <member refid="classwx_text_entry_1ac7191f01863c91397ac844883e588b43" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>IsEditable</name></member>
      <member refid="classwx_text_entry_1ad8353636538ddf3552a074e597b14c2d" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>IsEmpty</name></member>
      <member refid="classwx_window_1a0c186513884fb2020c6af3c62f0913d2" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>IsEnabled</name></member>
      <member refid="classwx_window_1a687120c4b7095481bbc6d483187d0c56" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>IsExposed</name></member>
      <member refid="classwx_window_1afde1844b856787b95afbb686aaaa206d" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>IsExposed</name></member>
      <member refid="classwx_window_1a3017e9cdde376d567ee37b2a96913eca" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>IsExposed</name></member>
      <member refid="classwx_window_1ac4653d89376b9e88afbec8c342d32530" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>IsExposed</name></member>
      <member refid="classwx_window_1ad78eb073c4fe8271caa4c65301a24ee2" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>IsFocusable</name></member>
      <member refid="classwx_window_1adf34f121a9a94fd7159a8818355f2b67" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>IsFrozen</name></member>
      <member refid="classwx_object_1a3c7115ef4132dcee0c4fc34e84d7fced" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>IsKindOf</name></member>
      <member refid="classwx_text_ctrl_1a08ad1dc6f4dbb77ecd60d9e1e61b1bd6" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>IsModified</name></member>
      <member refid="classwx_text_ctrl_1a39ce8a2dfdb3510752e42e0e908f7710" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>IsMultiLine</name></member>
      <member refid="classwx_window_1a77443cb35d15b5006b96a8c5ea0944f6" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>IsRetained</name></member>
      <member refid="classwx_object_1a059373c494c2369d7db2a556efef8ecf" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>IsSameAs</name></member>
      <member refid="classwx_window_1abf4f5068ebf648197ed9ca8ca58f38df" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>IsScrollbarAlwaysShown</name></member>
      <member refid="classwx_window_1ad3544f9c364b7952ac0676217e400061" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>IsShown</name></member>
      <member refid="classwx_window_1ac2722709783e89e76b2eeb7f9f93236a" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>IsShownOnScreen</name></member>
      <member refid="classwx_text_ctrl_1a021dd82ebcec882520e65baa9ac9be1f" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>IsSingleLine</name></member>
      <member refid="classwx_window_1a1c6a83e5421bb7cfb8a9ad804d251b65" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>IsThisEnabled</name></member>
      <member refid="classwx_window_1afe04dba2155b58429d6c4e0a5a5e1664" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>IsTopLevel</name></member>
      <member refid="classwx_window_1a21c6e2be327062520d9d0aae55b1e8b0" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>IsTransparentBackgroundSupported</name></member>
      <member refid="classwx_evt_handler_1ac0734578a8d929b8b0be440ce0b53ad6" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>IsUnlinked</name></member>
      <member refid="classwx_window_1a1b143c3e72bd0af533b76db4830a6113" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>Layout</name></member>
      <member refid="classwx_window_1ade808784f0e64d9985e2f279b5ca8c02" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>LineDown</name></member>
      <member refid="classwx_window_1afc0816a174ceee6d36d1995c6824a273" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>LineUp</name></member>
      <member refid="classwx_text_ctrl_1a40e67be01fca0933542d471aadae04fd" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>LoadFile</name></member>
      <member refid="classwx_window_1a124944524f36b71385dad8fddaad8ded" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>Lower</name></member>
      <member refid="classwx_object_1a9e31954530a0abd54982effc443ed2b8" prot="protected" virt="non-virtual"><scope>wxTextCtrl</scope><name>m_refData</name></member>
      <member refid="classwx_text_ctrl_1ab89671b5cd9e2da9a978f14e0f9931cf" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>MarkDirty</name></member>
      <member refid="classwx_window_1ab1cb98c8d25b9e6ff7b706b1446c3df7" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>Move</name></member>
      <member refid="classwx_window_1a22a22c1e23ca05776707e7999d8047fe" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>Move</name></member>
      <member refid="classwx_window_1a79e66079125e8420de269811bdb6f2b6" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>MoveAfterInTabOrder</name></member>
      <member refid="classwx_window_1af2b92f61cd9f9e2e0efe4cce307e25b1" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>MoveBeforeInTabOrder</name></member>
      <member refid="classwx_window_1a86904f6785df4af6036b33383490a805" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>Navigate</name></member>
      <member refid="classwx_window_1aa58039c8fc65e19160becf510ee1d1d5" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>NavigateIn</name></member>
      <member refid="classwx_window_1a8175da594e6045635a1d1cfe775cdddb" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>NewControlId</name></member>
      <member refid="classwx_text_ctrl_1aaa898f4c8d488e17201555ba02411e53" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>OnDropFiles</name></member>
      <member refid="classwx_window_1a6b5654c0c6c6245d592c279521f7099c" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>OnInternalIdle</name></member>
      <member refid="classwx_object_1a07b8f34f5afc5743195c5fed052f55d3" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>operator delete</name></member>
      <member refid="classwx_object_1a96fa423a1dbc212c8227a5d83825971f" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>operator new</name></member>
      <member refid="classwx_text_ctrl_1aa57985661e958933770a876c047067e3" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>operator&lt;&lt;</name></member>
      <member refid="classwx_text_ctrl_1a9dca9cf7114b1cf6a6ee7865d8a69511" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>operator&lt;&lt;</name></member>
      <member refid="classwx_text_ctrl_1ae8d53f452fc9580069609572f71a8f5b" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>operator&lt;&lt;</name></member>
      <member refid="classwx_text_ctrl_1ad80aeb5e73b4f2713a992bd8eb9b327b" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>operator&lt;&lt;</name></member>
      <member refid="classwx_text_ctrl_1abc0cdbbfcf38c3425234635d32778a2c" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>operator&lt;&lt;</name></member>
      <member refid="classwx_text_ctrl_1a95e267bd1556a51690c227f8652443ac" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>operator&lt;&lt;</name></member>
      <member refid="classwx_text_ctrl_1a9bbc65b104703ddccff602150f0baf94" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>operator&lt;&lt;</name></member>
      <member refid="classwx_window_1a61e78cb48ece3e9e989e37b475ac1e35" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>PageDown</name></member>
      <member refid="classwx_window_1aa7c2bbc480d8863d9f139c01d7abc1b1" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>PageUp</name></member>
      <member refid="classwx_text_entry_1a5889d0d240e603e32c11bd580b65b3d7" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>Paste</name></member>
      <member refid="classwx_window_1ac45c1f4cf96c70779764c14cf528790b" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>PopEventHandler</name></member>
      <member refid="classwx_window_1a8f715d238cf74a845488b0e2645e98df" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>PopupMenu</name></member>
      <member refid="classwx_window_1a834bcdfd41f5e5370ebd9ea401c92900" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>PopupMenu</name></member>
      <member refid="classwx_text_ctrl_1ac7e8926d052dd0dd7210cebab061237e" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>PositionToCoords</name></member>
      <member refid="classwx_text_ctrl_1a898c3d89764271cf8bee160e2d2bbf18" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>PositionToXY</name></member>
      <member refid="classwx_window_1ab1943463e6661f97e072b43337c6cc09" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>PostSizeEvent</name></member>
      <member refid="classwx_window_1aa080d8dcda58bcc6ea2abd8bea592e3e" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>PostSizeEventToParent</name></member>
      <member refid="classwx_window_1a5ebdbd87c28644149a07f1742996df96" prot="protected" virt="virtual"><scope>wxTextCtrl</scope><name>ProcessEvent</name></member>
      <member refid="classwx_evt_handler_1ac0f5d2cb29a04c1f7f82eb6b351f79fb" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>ProcessEventLocally</name></member>
      <member refid="classwx_window_1a7cbee38944dab02d753a4dba74230443" prot="protected" virt="non-virtual"><scope>wxTextCtrl</scope><name>ProcessPendingEvents</name></member>
      <member refid="classwx_window_1a9350b3a9c2e380707eaea92cedad12a5" prot="protected" virt="non-virtual"><scope>wxTextCtrl</scope><name>ProcessThreadEvent</name></member>
      <member refid="classwx_window_1a0a76891d726ad5f9a729e27e4eab2b57" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>ProcessWindowEvent</name></member>
      <member refid="classwx_window_1a0a11aa4a50491d051f947e2618e52178" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>ProcessWindowEventLocally</name></member>
      <member refid="classwx_window_1a398c11ab9af7956067a964f560d1978c" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>PushEventHandler</name></member>
      <member refid="classwx_window_1a69e450f21b0d7013269ec1a4771f043b" prot="protected" virt="virtual"><scope>wxTextCtrl</scope><name>QueueEvent</name></member>
      <member refid="classwx_window_1a54808c933f22a891c5db646f6209fa4d" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>Raise</name></member>
      <member refid="classwx_text_entry_1a3aa0d89ddb8a922c941818dafe4852a4" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>Redo</name></member>
      <member refid="classwx_object_1a2f6f1aa51fe9fc2b1415ca4211a90e9e" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>Ref</name></member>
      <member refid="classwx_window_1a29dc7251746154c821b17841b9877830" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>Refresh</name></member>
      <member refid="classwx_window_1ab0ae6b9898cd261c39ebeb2891aa3d67" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>RefreshRect</name></member>
      <member refid="classwx_window_1a53ca57872dac5851ea6ba55a494b899b" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>RegisterHotKey</name></member>
      <member refid="classwx_window_1adcc538819c11ecb3bd3e4e5d13c5ba7a" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>ReleaseMouse</name></member>
      <member refid="classwx_text_entry_1ab38f2786becabdacf27c7e31a2922bcc" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>Remove</name></member>
      <member refid="classwx_window_1acee332ed4368d26e8bc3db5767c1240a" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>RemoveChild</name></member>
      <member refid="classwx_window_1aacbfe424fa527966b954229a1db96ab5" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>RemoveEventHandler</name></member>
      <member refid="classwx_evt_handler_1a67a57b759c447b121bf70a7c9804c8f2" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>RemoveFilter</name></member>
      <member refid="classwx_control_1ab7df4ca0dfde3a6409833cf470ee02e6" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>RemoveMnemonics</name></member>
      <member refid="classwx_window_1a7977b749284e65aecfed2ce146799cb9" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>Reparent</name></member>
      <member refid="classwx_text_entry_1a1fb3ac76d270b2c64cff595497815f8d" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>Replace</name></member>
      <member refid="classwx_window_1a0f9814efc50316b4c57b7ec2bf78b716" prot="protected" virt="non-virtual"><scope>wxTextCtrl</scope><name>SafelyProcessEvent</name></member>
      <member refid="classwx_text_ctrl_1a5cedd577ca31598235244b992229e411" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>SaveFile</name></member>
      <member refid="classwx_window_1a09aca554d41d6e771d3dc72f26b9cacc" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>ScreenToClient</name></member>
      <member refid="classwx_window_1a5f4dab599fda780823841bb2fe5f2f99" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>ScreenToClient</name></member>
      <member refid="classwx_window_1aa5c5b683bd11a0d9771bd2fcdf643c64" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>ScrollLines</name></member>
      <member refid="classwx_window_1adc0ed5e1c4925223cb901ced14b8343d" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>ScrollPages</name></member>
      <member refid="classwx_window_1ab7be4956ff22da37fff2b8aaa581045c" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>ScrollWindow</name></member>
      <member refid="classwx_evt_handler_1a3c07426130d2868a5ae7fa918a251f49" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>SearchEventTable</name></member>
      <member refid="classwx_text_entry_1a2f7cb6fe4a1c2d1cd79edec6391ea91e" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>SelectAll</name></member>
      <member refid="classwx_text_entry_1a7ab161521fee2982118f109cfeaa4f22" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>SelectNone</name></member>
      <member refid="classwx_window_1a7e21eb6a0819281b29134a6432d064fe" prot="protected" virt="non-virtual"><scope>wxTextCtrl</scope><name>SendDestroyEvent</name></member>
      <member refid="classwx_window_1a1afc1653413957537073c074dcc3eade" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>SendIdleEvents</name></member>
      <member refid="classwx_window_1a237f739b21937d3e8f1bff5fa82ba4c2" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>SendSizeEvent</name></member>
      <member refid="classwx_window_1af7987987978fd8a93df88b29b19a6388" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>SendSizeEventToParent</name></member>
      <member refid="classwx_window_1a0af5e9aa4dee6a4e92c0700f92605642" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>SetAcceleratorTable</name></member>
      <member refid="classwx_window_1a413220ead41f05a2ec2cfe10b3d573df" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>SetAccessible</name></member>
      <member refid="classwx_window_1ad369fe1db5c20f9d9edff7b5eb1f7226" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>SetAutoLayout</name></member>
      <member refid="classwx_window_1a37219df52734626e23401fd83b25d8a0" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>SetBackgroundColour</name></member>
      <member refid="classwx_window_1af14f8fd2ed2d30a9bbb5d4f9fd6594ec" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>SetBackgroundStyle</name></member>
      <member refid="classwx_window_1a2b8b2e99231a0ec1a05f5066f1b7f3d8" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>SetCanFocus</name></member>
      <member refid="classwx_window_1acfef5e1cada92c73e2937b84ff57ff57" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>SetCaret</name></member>
      <member refid="classwx_evt_handler_1a82c74f2cebfa02cb3c1563d459c872bf" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>SetClientData</name></member>
      <member refid="classwx_evt_handler_1af1e33a06087b8b2ddc43c7d15a91b326" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>SetClientObject</name></member>
      <member refid="classwx_window_1aa59f715217fffa5bcf14cd97f92e7840" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>SetClientSize</name></member>
      <member refid="classwx_window_1ab2aadc857ee7f55f47ab9a8669e3beb7" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>SetClientSize</name></member>
      <member refid="classwx_window_1a582d4d1f60a3f777627773b2da0bb2ef" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>SetClientSize</name></member>
      <member refid="classwx_window_1afa75d111bbd9a68f837101a5fbed60a7" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>SetConstraints</name></member>
      <member refid="classwx_window_1a0ccf78fe06722b500adfb7f36b8ce443" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>SetContainingSizer</name></member>
      <member refid="classwx_window_1ad83f9c51c6f31e0e05f598b47a19ed98" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>SetCursor</name></member>
      <member refid="classwx_text_ctrl_1a1c0ead0e3a2faa1bc16b1898e418f9e0" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>SetDefaultStyle</name></member>
      <member refid="classwx_window_1a5477a89c17fdcc3ec6c90274796eb1c3" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>SetDoubleBuffered</name></member>
      <member refid="classwx_window_1ae34b4d45433ca8287df0e47d46411e58" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>SetDropTarget</name></member>
      <member refid="classwx_text_entry_1a7d95c0f42b5e1dc0559ae1ec56cb8b86" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>SetEditable</name></member>
      <member refid="classwx_window_1af6c84b7679183b377ba27a52a2f708b4" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>SetEventHandler</name></member>
      <member refid="classwx_evt_handler_1a7388ae19c8657e5656471b658c320036" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>SetEvtHandlerEnabled</name></member>
      <member refid="classwx_window_1ae9655f7c35ce7ac89cac2f6c0054b103" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>SetExtraStyle</name></member>
      <member refid="classwx_window_1a697f9f8d3ff389790f1c74b59bcb1d75" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>SetFocus</name></member>
      <member refid="classwx_window_1a6fa03f82d7917dff482754d0d2e2b1c8" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>SetFocusFromKbd</name></member>
      <member refid="classwx_window_1a9ab11e7da57a1d08918aa75fc33f6ad3" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>SetFont</name></member>
      <member refid="classwx_window_1a69f1e1c7ddd370d72e68c70f13ac8de9" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>SetForegroundColour</name></member>
      <member refid="classwx_window_1a4c1a2cbc7363237b3a7c70af4e702c72" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>SetHelpText</name></member>
      <member refid="classwx_text_entry_1a4e9dfe958dbd1918c54b45be83f1bed4" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>SetHint</name></member>
      <member refid="classwx_window_1a7f27d0faed14effa013381bdc40e1bcd" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>SetId</name></member>
      <member refid="classwx_window_1ae6dfe0b0d4a8c666b21ce8df8d96727b" prot="protected" virt="virtual"><scope>wxTextCtrl</scope><name>SetInitialBestSize</name></member>
      <member refid="classwx_window_1a1b309ca50ba87e34f968c83b79af1397" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>SetInitialSize</name></member>
      <member refid="classwx_text_entry_1a6e5460ec6e893ecb3e3ce90300373de8" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>SetInsertionPoint</name></member>
      <member refid="classwx_text_entry_1a954a065a2f20da350ae830faff1fff95" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>SetInsertionPointEnd</name></member>
      <member refid="classwx_control_1a2c2ae20554e7db5e765f163022ce09c0" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>SetLabel</name></member>
      <member refid="classwx_control_1afeb308dc3b54d8d735b33cb250395503" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>SetLabelMarkup</name></member>
      <member refid="classwx_control_1ae092899c3fe658831a9c796755a65eb7" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>SetLabelText</name></member>
      <member refid="classwx_window_1a7d494549f7fcfed44af95f8ee364c1f9" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>SetLayoutDirection</name></member>
      <member refid="classwx_text_entry_1af2f9684123d3f4d7233945016b2d5c1d" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>SetMargins</name></member>
      <member refid="classwx_text_entry_1ad8dc1eb9633c73d26c968b337525c6c2" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>SetMargins</name></member>
      <member refid="classwx_window_1a664e5b2ddd817d9c58788269fe1d8479" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>SetMaxClientSize</name></member>
      <member refid="classwx_text_entry_1a5b9dea0d1adeb9cc14309600de6aff50" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>SetMaxLength</name></member>
      <member refid="classwx_window_1a38b496214d728a3212afadee5ed51606" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>SetMaxSize</name></member>
      <member refid="classwx_window_1a6e35ba44b97e374dfffa460d41d94b31" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>SetMinClientSize</name></member>
      <member refid="classwx_window_1a3fc066f4d8083319f004ac43811d545d" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>SetMinSize</name></member>
      <member refid="classwx_text_ctrl_1a73a48def8fe76ef303d7adc332d71ce7" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>SetModified</name></member>
      <member refid="classwx_window_1af80875cda5e1af98dcd7c8e712e3c800" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>SetName</name></member>
      <member refid="classwx_window_1aeab905f61df7004c1b76a3351dca9e96" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>SetNextHandler</name></member>
      <member refid="classwx_window_1a9a3f9d8477aab1d9176cd66ee56e75d9" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>SetOwnBackgroundColour</name></member>
      <member refid="classwx_window_1a89a4f62f23c1e7c845b8d07cecae4c43" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>SetOwnFont</name></member>
      <member refid="classwx_window_1a53f4a878e4e2d440bd00543f8014aaaa" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>SetOwnForegroundColour</name></member>
      <member refid="classwx_window_1aee57358435d6bd33f598c81354b47425" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>SetPalette</name></member>
      <member refid="classwx_window_1a81f23590239934fa10fded0566a65d8c" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>SetPosition</name></member>
      <member refid="classwx_window_1a07f5f7ed3f78e0ef7b3dee3f4da81001" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>SetPreviousHandler</name></member>
      <member refid="classwx_object_1afab780710f2adc1bb33310e27590140b" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>SetRefData</name></member>
      <member refid="classwx_window_1aa842d59529f873683e55cd8392ec46e9" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>SetScrollbar</name></member>
      <member refid="classwx_window_1afbf4dc9064cf70cfe6884554b97a27bf" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>SetScrollPos</name></member>
      <member refid="classwx_text_entry_1af7e298bc2a34bd646328f53efab766aa" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>SetSelection</name></member>
      <member refid="classwx_window_1a180312d5ad4a4a5ad805b8d52d67a74e" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>SetSize</name></member>
      <member refid="classwx_window_1a8e383bc6d5ca008965922a36c676aea0" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>SetSize</name></member>
      <member refid="classwx_window_1a030a928cd854de3def97c5720f14695b" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>SetSize</name></member>
      <member refid="classwx_window_1a2ea9b25296d591aea4470c8fd99ff7cb" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>SetSize</name></member>
      <member refid="classwx_window_1a307329dc3b10f5584aeb2cbce9293ffd" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>SetSizeHints</name></member>
      <member refid="classwx_window_1ae813c640e1e2bc6014423247050846cf" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>SetSizeHints</name></member>
      <member refid="classwx_window_1abc95691b45e29a52c24aa9d33d46dec1" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>SetSizer</name></member>
      <member refid="classwx_window_1a29938af9828fd35da666536cdfb6b73c" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>SetSizerAndFit</name></member>
      <member refid="classwx_text_ctrl_1a0d972d3007e23ed9270d16b6bb326e80" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>SetStyle</name></member>
      <member refid="classwx_window_1a41dd19ed8809fd8ec662e2aa2a9579c3" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>SetThemeEnabled</name></member>
      <member refid="classwx_window_1a81a9fb74e3c6c7f4416e882f5e589b8c" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>SetToolTip</name></member>
      <member refid="classwx_window_1a494e0b7cfca9299caa40e847767e7357" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>SetToolTip</name></member>
      <member refid="classwx_window_1ac8cf4398cec50ac36634760f45a0656f" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>SetTransparent</name></member>
      <member refid="classwx_window_1a00066c70049a7be3ce6b648d206e6432" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>SetValidator</name></member>
      <member refid="classwx_text_entry_1a90f876b2dd83ba5c97ba0c193b386e9f" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>SetValue</name></member>
      <member refid="classwx_window_1a37f293b7904bc6668b86cccb0aea5669" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>SetVirtualSize</name></member>
      <member refid="classwx_window_1a8e95201edebe43b9623bd3bdc555af4d" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>SetVirtualSize</name></member>
      <member refid="classwx_window_1a306af30adec68689f74ed537b4f9d5fd" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>SetWindowStyle</name></member>
      <member refid="classwx_window_1aee2cf342f80523432e7f2299d299451b" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>SetWindowStyleFlag</name></member>
      <member refid="classwx_window_1acd955418c336e73b3e32cadf1ca46e29" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>SetWindowVariant</name></member>
      <member refid="classwx_window_1aa51b169745cda1746c1a45b4ffe3217a" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>ShouldInheritColours</name></member>
      <member refid="classwx_window_1a7fbc92ce240a8d4f6956b6e0276ef07f" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>Show</name></member>
      <member refid="classwx_text_ctrl_1ad4044ce304755d06fcbe5bd432b56783" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>ShowPosition</name></member>
      <member refid="classwx_window_1a596b1715edfc7609f352b2e000ecbaec" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>ShowWithEffect</name></member>
      <member refid="classwx_window_1a279a532124073261b28131b6afb59a1e" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>Thaw</name></member>
      <member refid="classwx_window_1a8a4fa47129de552bfec37db8c69688a2" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>ToggleWindowStyle</name></member>
      <member refid="classwx_window_1ab8e51f36e7d8790b361c8d8c6f37b1ad" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>TransferDataFromWindow</name></member>
      <member refid="classwx_window_1a88cc65e424a129d9b0057756cdb67ec9" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>TransferDataToWindow</name></member>
      <member refid="classwx_evt_handler_1a5e25fece1cb6cbc11fd1d41ec140319c" prot="protected" virt="virtual"><scope>wxTextCtrl</scope><name>TryAfter</name></member>
      <member refid="classwx_evt_handler_1ad4b0eac704dd005ac6a88fdb1e673c13" prot="protected" virt="virtual"><scope>wxTextCtrl</scope><name>TryBefore</name></member>
      <member refid="classwx_evt_handler_1a2b7df8272075a96daea78cdd799c00da" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>Unbind</name></member>
      <member refid="classwx_evt_handler_1aa49f9c4ad4462456b4fe4bd1ab53533d" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>Unbind</name></member>
      <member refid="classwx_text_entry_1ad3784d539a2554c6eec76c80aa6d97de" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>Undo</name></member>
      <member refid="classwx_evt_handler_1a22e5db2ec1d19c8252c056fd116975d7" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>Unlink</name></member>
      <member refid="classwx_object_1af51efc6b1ae632fc7f0cd7ebbce9fa36" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>UnRef</name></member>
      <member refid="classwx_window_1a695f60d65f8f6c12e3c3645ad9c0c35b" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>UnregisterHotKey</name></member>
      <member refid="classwx_window_1ad9bc342d1e38d221e37f0f6396950c8c" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>UnreserveControlId</name></member>
      <member refid="classwx_window_1ae75712451673658b0a533480bf5eeaa4" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>UnsetToolTip</name></member>
      <member refid="classwx_object_1a74b40e42d19a4b9e9bec0b57d62a5725" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>UnShare</name></member>
      <member refid="classwx_window_1abaf28f1a075fd1b10f761a8febe597ec" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>Update</name></member>
      <member refid="classwx_window_1adf0a4987728bd0bf69f922641b3efbfc" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>UpdateWindowUI</name></member>
      <member refid="classwx_window_1a9131e424ddc3b332a08377e5ad713c60" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>UseBgCol</name></member>
      <member refid="classwx_window_1ac87f253253a0c5eb498871c83afa40fd" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>Validate</name></member>
      <member refid="classwx_window_1ac500152d1eca3a2ee98a68e7ea7372b5" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>WarpPointer</name></member>
      <member refid="classwx_window_1a75e9c29023e441305574056cd5a725ff" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>WindowToClientSize</name></member>
      <member refid="classwx_text_entry_1aa1b9419f95878c44234ff812b528c17b" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>WriteText</name></member>
      <member refid="classwx_control_1adb8f3edf807efa9159de826bf92d6a44" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>wxControl</name></member>
      <member refid="classwx_control_1a08428de2ba5cc988a86fe17071d49522" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>wxControl</name></member>
      <member refid="classwx_evt_handler_1a3f0166c4154227d05575b01eb2c8d4be" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>wxEvtHandler</name></member>
      <member refid="classwx_object_1acaa378363a28af421ab56ad7b46eadf0" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>wxObject</name></member>
      <member refid="classwx_object_1a4721b4dc9b7aff0f30904ba2ea3954cf" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>wxObject</name></member>
      <member refid="classwx_text_ctrl_1a4d01be66f9a9e95501aa55d54f94d54f" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>wxTextCtrl</name></member>
      <member refid="classwx_text_ctrl_1a4f398e4800a904fdf225fabc366d7910" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>wxTextCtrl</name></member>
      <member refid="classwx_window_1a695200a4915b934926dcf32afa44544c" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>wxWindow</name></member>
      <member refid="classwx_window_1a7799009b10d1765d1bbb6db4994f922e" prot="public" virt="non-virtual"><scope>wxTextCtrl</scope><name>wxWindow</name></member>
      <member refid="classwx_text_ctrl_1a535bbd06fd08beee9055d5c05946b484" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>XYToPosition</name></member>
      <member refid="classwx_evt_handler_1a372d2239d91521eddc8fd2715fcab584" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>~wxEvtHandler</name></member>
      <member refid="classwx_object_1a2a51aa8bfbab47ca2f051bcf84b3f35b" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>~wxObject</name></member>
      <member refid="classwx_text_ctrl_1abf8174bc0cfdb5e3cad3f28b27b41b99" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>~wxTextCtrl</name></member>
      <member refid="classwx_window_1a0c2a46181a89c349327f0b276f5ef8d7" prot="public" virt="virtual"><scope>wxTextCtrl</scope><name>~wxWindow</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
