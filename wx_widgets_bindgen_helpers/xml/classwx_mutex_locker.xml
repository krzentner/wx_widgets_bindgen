<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classwx_mutex_locker" kind="class" language="C++" prot="public">
    <compoundname>wxMutexLocker</compoundname>
    <includes local="no">wx/thread.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_mutex_locker_1a846661cac4017f5978092ec15fe5f3e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxMutexLocker::wxMutexLocker</definition>
        <argsstring>(wxMutex &amp;mutex)</argsstring>
        <name>wxMutexLocker</name>
        <param>
          <type><ref refid="classwx_mutex" kindref="compound">wxMutex</ref> &amp;</type>
          <declname>mutex</declname>
        </param>
        <briefdescription>
<para>Constructs a <ref refid="classwx_mutex_locker" kindref="compound">wxMutexLocker</ref> object associated with mutex and locks it. </para>        </briefdescription>
        <detaileddescription>
<para>Call <ref refid="classwx_mutex_locker_1a0b9ee2a96bfbfc7061bd1eada4d1936a" kindref="member">IsOk()</ref> to check if the mutex was successfully locked. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/thread.h" line="1500" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_mutex_locker_1acd87ecf32ccff66c182695c23c870154" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxMutexLocker::~wxMutexLocker</definition>
        <argsstring>()</argsstring>
        <name>~wxMutexLocker</name>
        <briefdescription>
<para>Destructor releases the mutex if it was successfully acquired in the ctor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/thread.h" line="1505" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_mutex_locker_1a0b9ee2a96bfbfc7061bd1eada4d1936a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxMutexLocker::IsOk</definition>
        <argsstring>() const</argsstring>
        <name>IsOk</name>
        <briefdescription>
<para>Returns true if mutex was acquired in the constructor, false otherwise. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/thread.h" line="1510" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This is a small helper class to be used with <ref refid="classwx_mutex" kindref="compound">wxMutex</ref> objects. </para>    </briefdescription>
    <detaileddescription>
<para>A <ref refid="classwx_mutex_locker" kindref="compound">wxMutexLocker</ref> acquires a mutex lock in the constructor and releases (or unlocks) the mutex in the destructor making it much more difficult to forget to release a mutex (which, in general, will promptly lead to serious problems). See <ref refid="classwx_mutex" kindref="compound">wxMutex</ref> for an example of <ref refid="classwx_mutex_locker" kindref="compound">wxMutexLocker</ref> usage.</para><para><heading level="2"></heading>
</para><para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxbase" kindref="member">wxBase</ref> &lt;&gt;&lt; =&apos;&apos;&gt;:&lt;/&gt;&amp;;&amp;;&lt; =&apos;&apos;&gt;\ &lt;/&gt;&lt;/&gt;</para><para><simplesect kind="see"><para><ref refid="classwx_mutex" kindref="compound">wxMutex</ref>, <ref refid="classwx_critical_section_locker" kindref="compound">wxCriticalSectionLocker</ref> </para></simplesect>
</para>    </detaileddescription>
    <location file="interface/wx/thread.h" line="1494" column="1" bodyfile="interface/wx/thread.h" bodystart="1493" bodyend="1511"/>
    <listofallmembers>
      <member refid="classwx_mutex_locker_1a0b9ee2a96bfbfc7061bd1eada4d1936a" prot="public" virt="non-virtual"><scope>wxMutexLocker</scope><name>IsOk</name></member>
      <member refid="classwx_mutex_locker_1a846661cac4017f5978092ec15fe5f3e5" prot="public" virt="non-virtual"><scope>wxMutexLocker</scope><name>wxMutexLocker</name></member>
      <member refid="classwx_mutex_locker_1acd87ecf32ccff66c182695c23c870154" prot="public" virt="non-virtual"><scope>wxMutexLocker</scope><name>~wxMutexLocker</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
