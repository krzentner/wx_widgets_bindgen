<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classwx_zip_output_stream" kind="class" language="C++" prot="public">
    <compoundname>wxZipOutputStream</compoundname>
    <basecompoundref refid="classwx_archive_output_stream" prot="public" virt="non-virtual">wxArchiveOutputStream</basecompoundref>
    <includes local="no">wx/zipstrm.h</includes>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classwx_zip_output_stream_1ad22d73c10ed4f1082f0fc6488b94e72d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxZipOutputStream::wxZipOutputStream</definition>
        <argsstring>(wxOutputStream &amp;stream, int level=-1, wxMBConv &amp;conv=wxConvLocal)</argsstring>
        <name>wxZipOutputStream</name>
        <param>
          <type><ref refid="classwx_output_stream" kindref="compound">wxOutputStream</ref> &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>int</type>
          <declname>level</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type><ref refid="classwx_m_b_conv" kindref="compound">wxMBConv</ref> &amp;</type>
          <declname>conv</declname>
          <defval>wxConvLocal</defval>
        </param>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
<para><emphasis>level</emphasis> is the compression level to use. It can be a value between 0 and 9 or -1 to use the default value which currently is equivalent to 6.</para><para>If the parent stream is passed as a pointer then the new filter stream takes ownership of it. If it is passed by reference then it does not. In a Unicode build the third parameter <emphasis>conv</emphasis> is used to translate the filename and comment fields to an 8-bit encoding. It has no effect on the stream&apos;s data. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/zipstrm.h" line="493" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_zip_output_stream_1afa04f2760607dfd8aeac5199d22991db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxZipOutputStream::wxZipOutputStream</definition>
        <argsstring>(wxOutputStream *stream, int level=-1, wxMBConv &amp;conv=wxConvLocal)</argsstring>
        <name>wxZipOutputStream</name>
        <param>
          <type><ref refid="classwx_output_stream" kindref="compound">wxOutputStream</ref> *</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>int</type>
          <declname>level</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type><ref refid="classwx_m_b_conv" kindref="compound">wxMBConv</ref> &amp;</type>
          <declname>conv</declname>
          <defval>wxConvLocal</defval>
        </param>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
<para><emphasis>level</emphasis> is the compression level to use. It can be a value between 0 and 9 or -1 to use the default value which currently is equivalent to 6.</para><para>If the parent stream is passed as a pointer then the new filter stream takes ownership of it. If it is passed by reference then it does not. In a Unicode build the third parameter <emphasis>conv</emphasis> is used to translate the filename and comment fields to an 8-bit encoding. It has no effect on the stream&apos;s data. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/zipstrm.h" line="495" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classwx_zip_output_stream_1aa8c45e47b7b15618ded64228e45c43d3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxZipOutputStream::GetLevel</definition>
        <argsstring>() const</argsstring>
        <name>GetLevel</name>
        <briefdescription>
<para>Set the compression level that will be used the next time an entry is created. </para>        </briefdescription>
        <detaileddescription>
<para>It can be a value between 0 and 9 or -1 to use the default value which currently is equivalent to 6. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/zipstrm.h" line="547" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_zip_output_stream_1acd503189dc57277be3ddce5ff6de743c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxZipOutputStream::SetLevel</definition>
        <argsstring>(int level)</argsstring>
        <name>SetLevel</name>
        <param>
          <type>int</type>
          <declname>level</declname>
        </param>
        <briefdescription>
<para>Set the compression level that will be used the next time an entry is created. </para>        </briefdescription>
        <detaileddescription>
<para>It can be a value between 0 and 9 or -1 to use the default value which currently is equivalent to 6. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/zipstrm.h" line="548" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classwx_zip_output_stream_1a3ef78370a66ac4c0030164df04eec61d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxZipOutputStream::PutNextEntry</definition>
        <argsstring>(wxZipEntry *entry)</argsstring>
        <name>PutNextEntry</name>
        <param>
          <type><ref refid="classwx_zip_entry" kindref="compound">wxZipEntry</ref> *</type>
          <declname>entry</declname>
        </param>
        <briefdescription>
<para>Takes ownership of <emphasis>entry</emphasis> and uses it to create a new entry in the zip. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/zipstrm.h" line="565" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_zip_output_stream_1a4190f1b14a18d059689406951de42442" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool wxZipOutputStream::PutNextEntry</definition>
        <argsstring>(const wxString &amp;name, const wxDateTime &amp;dt=wxDateTime::Now(), wxFileOffset size=wxInvalidOffset)</argsstring>
        <name>PutNextEntry</name>
        <reimplements refid="classwx_archive_output_stream_1ae10bb31a9edecd54b739d4504734bc46">PutNextEntry</reimplements>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_date_time" kindref="compound">wxDateTime</ref> &amp;</type>
          <declname>dt</declname>
          <defval><ref refid="classwx_date_time_1a6e6c37a0414bb4831e2cc03b37f498a2" kindref="member">wxDateTime::Now</ref>()</defval>
        </param>
        <param>
          <type><ref refid="group__group__funcmacro__file_1ga69d831b3febabc149c67b716c8e22de5" kindref="member">wxFileOffset</ref></type>
          <declname>size</declname>
          <defval><ref refid="group__group__funcmacro__file_1gab184c7199d93541d22ae42e515cbbcb7" kindref="member">wxInvalidOffset</ref></defval>
        </param>
        <briefdescription>
<para>Create a new entry with the given name, timestamp and size. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/zipstrm.h" line="570" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_zip_output_stream_1a2b70e588571810235c0c5d01c0257acc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual wxZipOutputStream::~wxZipOutputStream</definition>
        <argsstring>()</argsstring>
        <name>~wxZipOutputStream</name>
        <briefdescription>
<para>The destructor calls <ref refid="classwx_zip_output_stream_1a8c1c85831fa28ddca211200fd315ad04" kindref="member">Close()</ref> to finish writing the zip if it has not been called already. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/zipstrm.h" line="503" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_zip_output_stream_1a8c1c85831fa28ddca211200fd315ad04" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool wxZipOutputStream::Close</definition>
        <argsstring>()</argsstring>
        <name>Close</name>
        <reimplements refid="classwx_archive_output_stream_1a2d6ec4ddefa626a2400985c676bfbfea">Close</reimplements>
        <briefdescription>
<para>Finishes writing the zip, returning true if successful. </para>        </briefdescription>
        <detaileddescription>
<para>Called by the destructor if not called explicitly. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/zipstrm.h" line="509" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_zip_output_stream_1aa8c78bdb0eba298b9a3648756b3562bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool wxZipOutputStream::CloseEntry</definition>
        <argsstring>()</argsstring>
        <name>CloseEntry</name>
        <reimplements refid="classwx_archive_output_stream_1a497dca3a3860f375c58488f78e0a75ad">CloseEntry</reimplements>
        <briefdescription>
<para>Close the current entry. </para>        </briefdescription>
        <detaileddescription>
<para>It is called implicitly whenever another new entry is created with <ref refid="classwx_zip_output_stream_1a8dbdbb89330f20bdc5ea9feeaaf13729" kindref="member">CopyEntry()</ref> or <ref refid="classwx_zip_output_stream_1a3ef78370a66ac4c0030164df04eec61d" kindref="member">PutNextEntry()</ref>, or when the zip is closed. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/zipstrm.h" line="516" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_zip_output_stream_1aadc5bec41140d1b24ad14e6c128f57a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxZipOutputStream::CopyArchiveMetaData</definition>
        <argsstring>(wxZipInputStream &amp;inputStream)</argsstring>
        <name>CopyArchiveMetaData</name>
        <param>
          <type><ref refid="classwx_zip_input_stream" kindref="compound">wxZipInputStream</ref> &amp;</type>
          <declname>inputStream</declname>
        </param>
        <briefdescription>
<para>Transfers the zip comment from the <ref refid="classwx_zip_input_stream" kindref="compound">wxZipInputStream</ref> to this output stream. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/zipstrm.h" line="522" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_zip_output_stream_1a8dbdbb89330f20bdc5ea9feeaaf13729" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxZipOutputStream::CopyEntry</definition>
        <argsstring>(wxZipEntry *entry, wxZipInputStream &amp;inputStream)</argsstring>
        <name>CopyEntry</name>
        <param>
          <type><ref refid="classwx_zip_entry" kindref="compound">wxZipEntry</ref> *</type>
          <declname>entry</declname>
        </param>
        <param>
          <type><ref refid="classwx_zip_input_stream" kindref="compound">wxZipInputStream</ref> &amp;</type>
          <declname>inputStream</declname>
        </param>
        <briefdescription>
<para>Takes ownership of <emphasis>entry</emphasis> and uses it to create a new entry in the zip. </para>        </briefdescription>
        <detaileddescription>
<para><emphasis>entry</emphasis> is then opened in <emphasis>inputStream</emphasis> and its contents copied to this stream.</para><para><ref refid="classwx_zip_output_stream_1a8dbdbb89330f20bdc5ea9feeaaf13729" kindref="member">CopyEntry()</ref> is much more efficient than transferring the data using Read() and <ref refid="classwx_output_stream_1a22154f02408431ffe8b1590407c3b011" kindref="member">Write()</ref> since it will copy them without decompressing and recompressing them.</para><para>For zips on seekable streams, <emphasis>entry</emphasis> must be from the same zip file as <emphasis>inputStream</emphasis>. For non-seekable streams, <emphasis>entry</emphasis> must also be the last thing read from <emphasis>inputStream</emphasis>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/zipstrm.h" line="537" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_zip_output_stream_1a8b92bb0f3837e79f8a289c9cecde7d3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool wxZipOutputStream::PutNextDirEntry</definition>
        <argsstring>(const wxString &amp;name, const wxDateTime &amp;dt=wxDateTime::Now())</argsstring>
        <name>PutNextDirEntry</name>
        <reimplements refid="classwx_archive_output_stream_1ab27a35cd63e39dd9cccfc1b5566478f5">PutNextDirEntry</reimplements>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_date_time" kindref="compound">wxDateTime</ref> &amp;</type>
          <declname>dt</declname>
          <defval><ref refid="classwx_date_time_1a6e6c37a0414bb4831e2cc03b37f498a2" kindref="member">wxDateTime::Now</ref>()</defval>
        </param>
        <briefdescription>
<para>Create a new directory entry (see <ref refid="classwx_archive_entry_1a548d3b6f4aeba699dc0d1ec1c21b7ce2" kindref="member">wxArchiveEntry::IsDir</ref>) with the given name and timestamp. </para>        </briefdescription>
        <detaileddescription>
<para><ref refid="classwx_zip_output_stream_1a3ef78370a66ac4c0030164df04eec61d" kindref="member">PutNextEntry()</ref> can also be used to create directory entries, by supplying a name with a trailing path separator. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/zipstrm.h" line="558" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_zip_output_stream_1a939d59ea1b953158036a99ab9ab42235" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxZipOutputStream::SetComment</definition>
        <argsstring>(const wxString &amp;comment)</argsstring>
        <name>SetComment</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>comment</declname>
        </param>
        <briefdescription>
<para>Sets a comment for the zip as a whole. </para>        </briefdescription>
        <detaileddescription>
<para>It is written at the end of the zip. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/zipstrm.h" line="579" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Output stream for writing zip files. </para>    </briefdescription>
    <detaileddescription>
<para><ref refid="classwx_zip_output_stream_1a3ef78370a66ac4c0030164df04eec61d" kindref="member">wxZipOutputStream::PutNextEntry()</ref> is used to create a new entry in the output zip, then the entry&apos;s data is written to the <ref refid="classwx_zip_output_stream" kindref="compound">wxZipOutputStream</ref>. Another call to <ref refid="classwx_zip_output_stream_1a3ef78370a66ac4c0030164df04eec61d" kindref="member">wxZipOutputStream::PutNextEntry()</ref> closes the current entry and begins the next.</para><para><heading level="2"></heading>
</para><para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxbase" kindref="member">wxBase</ref> &lt;&gt;&lt; =&apos;&apos;&gt;:&lt;/&gt;&amp;;&amp;;&lt; =&apos;&apos;&gt;\ , \ &lt;/&gt;&lt;/&gt;</para><para><simplesect kind="see"><para><ref refid="overview_archive" kindref="compound">Archive Formats</ref>, <ref refid="classwx_zip_entry" kindref="compound">wxZipEntry</ref>, <ref refid="classwx_zip_input_stream" kindref="compound">wxZipInputStream</ref> </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="9014">
        <label>wxZipOutputStream</label>
        <link refid="classwx_zip_output_stream"/>
        <childnode refid="9015" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9018">
        <label>wxStreamBase</label>
        <link refid="classwx_stream_base"/>
      </node>
      <node id="9016">
        <label>wxFilterOutputStream</label>
        <link refid="classwx_filter_output_stream"/>
        <childnode refid="9017" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9017">
        <label>wxOutputStream</label>
        <link refid="classwx_output_stream"/>
        <childnode refid="9018" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9015">
        <label>wxArchiveOutputStream</label>
        <link refid="classwx_archive_output_stream"/>
        <childnode refid="9016" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="9019">
        <label>wxZipOutputStream</label>
        <link refid="classwx_zip_output_stream"/>
        <childnode refid="9020" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9023">
        <label>wxStreamBase</label>
        <link refid="classwx_stream_base"/>
      </node>
      <node id="9021">
        <label>wxFilterOutputStream</label>
        <link refid="classwx_filter_output_stream"/>
        <childnode refid="9022" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9022">
        <label>wxOutputStream</label>
        <link refid="classwx_output_stream"/>
        <childnode refid="9023" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9020">
        <label>wxArchiveOutputStream</label>
        <link refid="classwx_archive_output_stream"/>
        <childnode refid="9021" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="interface/wx/zipstrm.h" line="477" column="1" bodyfile="interface/wx/zipstrm.h" bodystart="476" bodyend="580"/>
    <listofallmembers>
      <member refid="classwx_zip_output_stream_1a8c1c85831fa28ddca211200fd315ad04" prot="public" virt="virtual"><scope>wxZipOutputStream</scope><name>Close</name></member>
      <member refid="classwx_zip_output_stream_1aa8c78bdb0eba298b9a3648756b3562bd" prot="public" virt="virtual"><scope>wxZipOutputStream</scope><name>CloseEntry</name></member>
      <member refid="classwx_zip_output_stream_1aadc5bec41140d1b24ad14e6c128f57a6" prot="public" virt="non-virtual"><scope>wxZipOutputStream</scope><name>CopyArchiveMetaData</name></member>
      <member refid="classwx_archive_output_stream_1a043827f9c01ef7bb4bfebf7b9be8ee55" prot="public" virt="pure-virtual" ambiguityscope="wxArchiveOutputStream::"><scope>wxZipOutputStream</scope><name>CopyArchiveMetaData</name></member>
      <member refid="classwx_zip_output_stream_1a8dbdbb89330f20bdc5ea9feeaaf13729" prot="public" virt="non-virtual"><scope>wxZipOutputStream</scope><name>CopyEntry</name></member>
      <member refid="classwx_archive_output_stream_1acf19a29865cca24282fd163a20a4b137" prot="public" virt="pure-virtual" ambiguityscope="wxArchiveOutputStream::"><scope>wxZipOutputStream</scope><name>CopyEntry</name></member>
      <member refid="classwx_stream_base_1a33440c8ea3f8df382adecd7d188a1662" prot="public" virt="non-virtual"><scope>wxZipOutputStream</scope><name>GetLastError</name></member>
      <member refid="classwx_stream_base_1a052d67c85f63873fabb45ecd108ea615" prot="public" virt="virtual"><scope>wxZipOutputStream</scope><name>GetLength</name></member>
      <member refid="classwx_zip_output_stream_1aa8c45e47b7b15618ded64228e45c43d3" prot="public" virt="non-virtual"><scope>wxZipOutputStream</scope><name>GetLevel</name></member>
      <member refid="classwx_stream_base_1aae8094702c3aee35c38e3e06e052479c" prot="public" virt="virtual"><scope>wxZipOutputStream</scope><name>GetSize</name></member>
      <member refid="classwx_stream_base_1ad33abd694469e858fc3bbb0163a7fc4b" prot="public" virt="virtual"><scope>wxZipOutputStream</scope><name>IsOk</name></member>
      <member refid="classwx_stream_base_1a927368a32e940a11b96dbfb617d9afda" prot="public" virt="virtual"><scope>wxZipOutputStream</scope><name>IsSeekable</name></member>
      <member refid="classwx_output_stream_1ac21c598e20937355e538fdf2e2926164" prot="public" virt="virtual"><scope>wxZipOutputStream</scope><name>LastWrite</name></member>
      <member refid="classwx_stream_base_1ae38e82c374f82d39993909f0a5d3017e" prot="protected" virt="virtual"><scope>wxZipOutputStream</scope><name>OnSysSeek</name></member>
      <member refid="classwx_stream_base_1a7131a1f866ea911e90bb85bc1937d29b" prot="protected" virt="virtual"><scope>wxZipOutputStream</scope><name>OnSysTell</name></member>
      <member refid="classwx_output_stream_1a41773bceb97b1981cbc3d69c596df929" prot="protected" virt="non-virtual"><scope>wxZipOutputStream</scope><name>OnSysWrite</name></member>
      <member refid="classwx_stream_base_1a2559b4fcfc7f7173259d703b39cb0d33" prot="public" virt="non-virtual"><scope>wxZipOutputStream</scope><name>operator!</name></member>
      <member refid="classwx_output_stream_1a526dbd35592b0280659cf96c0a77e804" prot="public" virt="non-virtual"><scope>wxZipOutputStream</scope><name>PutC</name></member>
      <member refid="classwx_zip_output_stream_1a8b92bb0f3837e79f8a289c9cecde7d3d" prot="public" virt="virtual"><scope>wxZipOutputStream</scope><name>PutNextDirEntry</name></member>
      <member refid="classwx_zip_output_stream_1a3ef78370a66ac4c0030164df04eec61d" prot="public" virt="non-virtual"><scope>wxZipOutputStream</scope><name>PutNextEntry</name></member>
      <member refid="classwx_zip_output_stream_1a4190f1b14a18d059689406951de42442" prot="public" virt="virtual"><scope>wxZipOutputStream</scope><name>PutNextEntry</name></member>
      <member refid="classwx_archive_output_stream_1a4a5dd11b0dbd57b78a94315c9e841ceb" prot="public" virt="pure-virtual" ambiguityscope="wxArchiveOutputStream::"><scope>wxZipOutputStream</scope><name>PutNextEntry</name></member>
      <member refid="classwx_stream_base_1a52353ac42f72538b2022a84f416e5fe2" prot="public" virt="non-virtual"><scope>wxZipOutputStream</scope><name>Reset</name></member>
      <member refid="classwx_output_stream_1ac898dd36e44e5f4785a6658f470e9752" prot="public" virt="virtual"><scope>wxZipOutputStream</scope><name>SeekO</name></member>
      <member refid="classwx_zip_output_stream_1a939d59ea1b953158036a99ab9ab42235" prot="public" virt="non-virtual"><scope>wxZipOutputStream</scope><name>SetComment</name></member>
      <member refid="classwx_zip_output_stream_1acd503189dc57277be3ddce5ff6de743c" prot="public" virt="non-virtual"><scope>wxZipOutputStream</scope><name>SetLevel</name></member>
      <member refid="classwx_output_stream_1a468208f94273630dcbdb0c692645e42c" prot="public" virt="virtual"><scope>wxZipOutputStream</scope><name>TellO</name></member>
      <member refid="classwx_output_stream_1a22154f02408431ffe8b1590407c3b011" prot="public" virt="virtual"><scope>wxZipOutputStream</scope><name>Write</name></member>
      <member refid="classwx_output_stream_1aacced095d3e9b19b4f6264d94c85cf8f" prot="public" virt="non-virtual"><scope>wxZipOutputStream</scope><name>Write</name></member>
      <member refid="classwx_output_stream_1aa82aca41108fba5cebbba951c84431f0" prot="public" virt="non-virtual"><scope>wxZipOutputStream</scope><name>WriteAll</name></member>
      <member refid="classwx_filter_output_stream_1af602ad1b7673a587430733f4cfb493d0" prot="public" virt="non-virtual"><scope>wxZipOutputStream</scope><name>wxFilterOutputStream</name></member>
      <member refid="classwx_filter_output_stream_1a0358028d12b8dde1ef969efd1703908e" prot="public" virt="non-virtual"><scope>wxZipOutputStream</scope><name>wxFilterOutputStream</name></member>
      <member refid="classwx_output_stream_1ab2391df744df6ec2d4e4e3f561c51118" prot="public" virt="non-virtual"><scope>wxZipOutputStream</scope><name>wxOutputStream</name></member>
      <member refid="classwx_stream_base_1a2bdb01f1ccd34d551d3cfc848054bf1e" prot="public" virt="non-virtual"><scope>wxZipOutputStream</scope><name>wxStreamBase</name></member>
      <member refid="classwx_zip_output_stream_1ad22d73c10ed4f1082f0fc6488b94e72d" prot="public" virt="non-virtual"><scope>wxZipOutputStream</scope><name>wxZipOutputStream</name></member>
      <member refid="classwx_zip_output_stream_1afa04f2760607dfd8aeac5199d22991db" prot="public" virt="non-virtual"><scope>wxZipOutputStream</scope><name>wxZipOutputStream</name></member>
      <member refid="classwx_archive_output_stream_1a398e15a6c9b1799e64672b4320053376" prot="public" virt="virtual"><scope>wxZipOutputStream</scope><name>~wxArchiveOutputStream</name></member>
      <member refid="classwx_output_stream_1aadf4d69a6ab7430e99ecb8d02feecfd3" prot="public" virt="virtual"><scope>wxZipOutputStream</scope><name>~wxOutputStream</name></member>
      <member refid="classwx_stream_base_1aebba32b4da79c60933fa997735a8bfe5" prot="public" virt="virtual"><scope>wxZipOutputStream</scope><name>~wxStreamBase</name></member>
      <member refid="classwx_zip_output_stream_1a2b70e588571810235c0c5d01c0257acc" prot="public" virt="virtual"><scope>wxZipOutputStream</scope><name>~wxZipOutputStream</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
