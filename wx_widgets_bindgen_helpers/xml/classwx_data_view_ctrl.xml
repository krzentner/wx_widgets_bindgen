<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classwx_data_view_ctrl" kind="class" language="C++" prot="public">
    <compoundname>wxDataViewCtrl</compoundname>
    <basecompoundref refid="classwx_control" prot="public" virt="non-virtual">wxControl</basecompoundref>
    <derivedcompoundref refid="classwx_data_view_list_ctrl" prot="public" virt="non-virtual">wxDataViewListCtrl</derivedcompoundref>
    <derivedcompoundref refid="classwx_data_view_tree_ctrl" prot="public" virt="non-virtual">wxDataViewTreeCtrl</derivedcompoundref>
    <includes local="no">wx/dataview.h</includes>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classwx_data_view_ctrl_1abbdf9f5b7c1e65d792f92a737efc0a29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_data_view_column" kindref="compound">wxDataViewColumn</ref> *</type>
        <definition>wxDataViewColumn* wxDataViewCtrl::AppendBitmapColumn</definition>
        <argsstring>(const wxString &amp;label, unsigned int model_column, wxDataViewCellMode mode=wxDATAVIEW_CELL_INERT, int width=-1, wxAlignment align=wxALIGN_CENTER, int flags=wxDATAVIEW_COL_RESIZABLE)</argsstring>
        <name>AppendBitmapColumn</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>label</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>model_column</declname>
        </param>
        <param>
          <type><ref refid="dataview_8h_1a82ea89fa957cf47b29e59799429bda7e" kindref="member">wxDataViewCellMode</ref></type>
          <declname>mode</declname>
          <defval><ref refid="dataview_8h_1a82ea89fa957cf47b29e59799429bda7eade831fcdedc84d6ed5a03f8548f777e9" kindref="member">wxDATAVIEW_CELL_INERT</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type><ref refid="defs_8h_1a543dd017a172dc316253a8a1f351dde9" kindref="member">wxAlignment</ref></type>
          <declname>align</declname>
          <defval><ref refid="defs_8h_1a543dd017a172dc316253a8a1f351dde9aea58cfe429cf1512d3b026dea8c1b044" kindref="member">wxALIGN_CENTER</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval><ref refid="dataview_8h_1a156305189c948da3fa8fa0268d9774f9ac590d7a142905fffb2be2bffa6886d0e" kindref="member">wxDATAVIEW_COL_RESIZABLE</ref></defval>
        </param>
        <briefdescription>
<para>Appends a column for rendering a bitmap. </para>        </briefdescription>
        <detaileddescription>
<para>Returns the <ref refid="classwx_data_view_column" kindref="compound">wxDataViewColumn</ref> created in the function or NULL on failure. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="961" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_ctrl_1a9c322041d48a0d111b1153a78a48eec0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_data_view_column" kindref="compound">wxDataViewColumn</ref> *</type>
        <definition>wxDataViewColumn* wxDataViewCtrl::AppendBitmapColumn</definition>
        <argsstring>(const wxBitmap &amp;label, unsigned int model_column, wxDataViewCellMode mode=wxDATAVIEW_CELL_INERT, int width=-1, wxAlignment align=wxALIGN_CENTER, int flags=wxDATAVIEW_COL_RESIZABLE)</argsstring>
        <name>AppendBitmapColumn</name>
        <param>
          <type>const <ref refid="classwx_bitmap" kindref="compound">wxBitmap</ref> &amp;</type>
          <declname>label</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>model_column</declname>
        </param>
        <param>
          <type><ref refid="dataview_8h_1a82ea89fa957cf47b29e59799429bda7e" kindref="member">wxDataViewCellMode</ref></type>
          <declname>mode</declname>
          <defval><ref refid="dataview_8h_1a82ea89fa957cf47b29e59799429bda7eade831fcdedc84d6ed5a03f8548f777e9" kindref="member">wxDATAVIEW_CELL_INERT</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type><ref refid="defs_8h_1a543dd017a172dc316253a8a1f351dde9" kindref="member">wxAlignment</ref></type>
          <declname>align</declname>
          <defval><ref refid="defs_8h_1a543dd017a172dc316253a8a1f351dde9aea58cfe429cf1512d3b026dea8c1b044" kindref="member">wxALIGN_CENTER</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval><ref refid="dataview_8h_1a156305189c948da3fa8fa0268d9774f9ac590d7a142905fffb2be2bffa6886d0e" kindref="member">wxDATAVIEW_COL_RESIZABLE</ref></defval>
        </param>
        <briefdescription>
<para>Appends a column for rendering a bitmap. </para>        </briefdescription>
        <detaileddescription>
<para>Returns the <ref refid="classwx_data_view_column" kindref="compound">wxDataViewColumn</ref> created in the function or NULL on failure. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="967" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classwx_data_view_ctrl_1a1b3676f1a51a3ce15fb6153a78c9d1e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_data_view_column" kindref="compound">wxDataViewColumn</ref> *</type>
        <definition>wxDataViewColumn* wxDataViewCtrl::PrependBitmapColumn</definition>
        <argsstring>(const wxString &amp;label, unsigned int model_column, wxDataViewCellMode mode=wxDATAVIEW_CELL_INERT, int width=-1, wxAlignment align=wxALIGN_CENTER, int flags=wxDATAVIEW_COL_RESIZABLE)</argsstring>
        <name>PrependBitmapColumn</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>label</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>model_column</declname>
        </param>
        <param>
          <type><ref refid="dataview_8h_1a82ea89fa957cf47b29e59799429bda7e" kindref="member">wxDataViewCellMode</ref></type>
          <declname>mode</declname>
          <defval><ref refid="dataview_8h_1a82ea89fa957cf47b29e59799429bda7eade831fcdedc84d6ed5a03f8548f777e9" kindref="member">wxDATAVIEW_CELL_INERT</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type><ref refid="defs_8h_1a543dd017a172dc316253a8a1f351dde9" kindref="member">wxAlignment</ref></type>
          <declname>align</declname>
          <defval><ref refid="defs_8h_1a543dd017a172dc316253a8a1f351dde9aea58cfe429cf1512d3b026dea8c1b044" kindref="member">wxALIGN_CENTER</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval><ref refid="dataview_8h_1a156305189c948da3fa8fa0268d9774f9ac590d7a142905fffb2be2bffa6886d0e" kindref="member">wxDATAVIEW_COL_RESIZABLE</ref></defval>
        </param>
        <briefdescription>
<para>Prepends a column for rendering a bitmap. </para>        </briefdescription>
        <detaileddescription>
<para>Returns the <ref refid="classwx_data_view_column" kindref="compound">wxDataViewColumn</ref> created in the function or NULL on failure. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="980" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_ctrl_1a5ebe472b090b3074ae5c1a869f249af6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_data_view_column" kindref="compound">wxDataViewColumn</ref> *</type>
        <definition>wxDataViewColumn* wxDataViewCtrl::PrependBitmapColumn</definition>
        <argsstring>(const wxBitmap &amp;label, unsigned int model_column, wxDataViewCellMode mode=wxDATAVIEW_CELL_INERT, int width=-1, wxAlignment align=wxALIGN_CENTER, int flags=wxDATAVIEW_COL_RESIZABLE)</argsstring>
        <name>PrependBitmapColumn</name>
        <param>
          <type>const <ref refid="classwx_bitmap" kindref="compound">wxBitmap</ref> &amp;</type>
          <declname>label</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>model_column</declname>
        </param>
        <param>
          <type><ref refid="dataview_8h_1a82ea89fa957cf47b29e59799429bda7e" kindref="member">wxDataViewCellMode</ref></type>
          <declname>mode</declname>
          <defval><ref refid="dataview_8h_1a82ea89fa957cf47b29e59799429bda7eade831fcdedc84d6ed5a03f8548f777e9" kindref="member">wxDATAVIEW_CELL_INERT</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type><ref refid="defs_8h_1a543dd017a172dc316253a8a1f351dde9" kindref="member">wxAlignment</ref></type>
          <declname>align</declname>
          <defval><ref refid="defs_8h_1a543dd017a172dc316253a8a1f351dde9aea58cfe429cf1512d3b026dea8c1b044" kindref="member">wxALIGN_CENTER</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval><ref refid="dataview_8h_1a156305189c948da3fa8fa0268d9774f9ac590d7a142905fffb2be2bffa6886d0e" kindref="member">wxDATAVIEW_COL_RESIZABLE</ref></defval>
        </param>
        <briefdescription>
<para>Prepends a column for rendering a bitmap. </para>        </briefdescription>
        <detaileddescription>
<para>Returns the <ref refid="classwx_data_view_column" kindref="compound">wxDataViewColumn</ref> created in the function or NULL on failure. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="986" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classwx_data_view_ctrl_1a3959835e6d2fb130c362be66a812ecee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_data_view_column" kindref="compound">wxDataViewColumn</ref> *</type>
        <definition>wxDataViewColumn* wxDataViewCtrl::AppendDateColumn</definition>
        <argsstring>(const wxString &amp;label, unsigned int model_column, wxDataViewCellMode mode=wxDATAVIEW_CELL_ACTIVATABLE, int width=-1, wxAlignment align=wxALIGN_NOT, int flags=wxDATAVIEW_COL_RESIZABLE)</argsstring>
        <name>AppendDateColumn</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>label</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>model_column</declname>
        </param>
        <param>
          <type><ref refid="dataview_8h_1a82ea89fa957cf47b29e59799429bda7e" kindref="member">wxDataViewCellMode</ref></type>
          <declname>mode</declname>
          <defval><ref refid="dataview_8h_1a82ea89fa957cf47b29e59799429bda7ea2c376841929158b551b6563868451cc8" kindref="member">wxDATAVIEW_CELL_ACTIVATABLE</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type><ref refid="defs_8h_1a543dd017a172dc316253a8a1f351dde9" kindref="member">wxAlignment</ref></type>
          <declname>align</declname>
          <defval><ref refid="defs_8h_1a543dd017a172dc316253a8a1f351dde9a5e0bbb65574703f4d7f9b11734a3af0f" kindref="member">wxALIGN_NOT</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval><ref refid="dataview_8h_1a156305189c948da3fa8fa0268d9774f9ac590d7a142905fffb2be2bffa6886d0e" kindref="member">wxDATAVIEW_COL_RESIZABLE</ref></defval>
        </param>
        <briefdescription>
<para>Appends a column for rendering a date. </para>        </briefdescription>
        <detaileddescription>
<para>Returns the <ref refid="classwx_data_view_column" kindref="compound">wxDataViewColumn</ref> created in the function or NULL on failure.</para><para><simplesect kind="note"><para>The <emphasis>align</emphasis> parameter is applied to both the column header and the column renderer. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="1002" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_ctrl_1a390a9dee6b1672b299dd305e4fcb746c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_data_view_column" kindref="compound">wxDataViewColumn</ref> *</type>
        <definition>wxDataViewColumn* wxDataViewCtrl::AppendDateColumn</definition>
        <argsstring>(const wxBitmap &amp;label, unsigned int model_column, wxDataViewCellMode mode=wxDATAVIEW_CELL_ACTIVATABLE, int width=-1, wxAlignment align=wxALIGN_NOT, int flags=wxDATAVIEW_COL_RESIZABLE)</argsstring>
        <name>AppendDateColumn</name>
        <param>
          <type>const <ref refid="classwx_bitmap" kindref="compound">wxBitmap</ref> &amp;</type>
          <declname>label</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>model_column</declname>
        </param>
        <param>
          <type><ref refid="dataview_8h_1a82ea89fa957cf47b29e59799429bda7e" kindref="member">wxDataViewCellMode</ref></type>
          <declname>mode</declname>
          <defval><ref refid="dataview_8h_1a82ea89fa957cf47b29e59799429bda7ea2c376841929158b551b6563868451cc8" kindref="member">wxDATAVIEW_CELL_ACTIVATABLE</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type><ref refid="defs_8h_1a543dd017a172dc316253a8a1f351dde9" kindref="member">wxAlignment</ref></type>
          <declname>align</declname>
          <defval><ref refid="defs_8h_1a543dd017a172dc316253a8a1f351dde9a5e0bbb65574703f4d7f9b11734a3af0f" kindref="member">wxALIGN_NOT</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval><ref refid="dataview_8h_1a156305189c948da3fa8fa0268d9774f9ac590d7a142905fffb2be2bffa6886d0e" kindref="member">wxDATAVIEW_COL_RESIZABLE</ref></defval>
        </param>
        <briefdescription>
<para>Appends a column for rendering a date. </para>        </briefdescription>
        <detaileddescription>
<para>Returns the <ref refid="classwx_data_view_column" kindref="compound">wxDataViewColumn</ref> created in the function or NULL on failure.</para><para><simplesect kind="note"><para>The <emphasis>align</emphasis> parameter is applied to both the column header and the column renderer. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="1008" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classwx_data_view_ctrl_1a29c3041e87a4197406e9518a9929568e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_data_view_column" kindref="compound">wxDataViewColumn</ref> *</type>
        <definition>wxDataViewColumn* wxDataViewCtrl::PrependDateColumn</definition>
        <argsstring>(const wxString &amp;label, unsigned int model_column, wxDataViewCellMode mode=wxDATAVIEW_CELL_ACTIVATABLE, int width=-1, wxAlignment align=wxALIGN_NOT, int flags=wxDATAVIEW_COL_RESIZABLE)</argsstring>
        <name>PrependDateColumn</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>label</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>model_column</declname>
        </param>
        <param>
          <type><ref refid="dataview_8h_1a82ea89fa957cf47b29e59799429bda7e" kindref="member">wxDataViewCellMode</ref></type>
          <declname>mode</declname>
          <defval><ref refid="dataview_8h_1a82ea89fa957cf47b29e59799429bda7ea2c376841929158b551b6563868451cc8" kindref="member">wxDATAVIEW_CELL_ACTIVATABLE</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type><ref refid="defs_8h_1a543dd017a172dc316253a8a1f351dde9" kindref="member">wxAlignment</ref></type>
          <declname>align</declname>
          <defval><ref refid="defs_8h_1a543dd017a172dc316253a8a1f351dde9a5e0bbb65574703f4d7f9b11734a3af0f" kindref="member">wxALIGN_NOT</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval><ref refid="dataview_8h_1a156305189c948da3fa8fa0268d9774f9ac590d7a142905fffb2be2bffa6886d0e" kindref="member">wxDATAVIEW_COL_RESIZABLE</ref></defval>
        </param>
        <briefdescription>
<para>Prepends a column for rendering a date. </para>        </briefdescription>
        <detaileddescription>
<para>Returns the <ref refid="classwx_data_view_column" kindref="compound">wxDataViewColumn</ref> created in the function or NULL on failure.</para><para><simplesect kind="note"><para>The <emphasis>align</emphasis> parameter is applied to both the column header and the column renderer. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="1024" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_ctrl_1a88bed68dfe2425fb3920bcf2f0983428" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_data_view_column" kindref="compound">wxDataViewColumn</ref> *</type>
        <definition>wxDataViewColumn* wxDataViewCtrl::PrependDateColumn</definition>
        <argsstring>(const wxBitmap &amp;label, unsigned int model_column, wxDataViewCellMode mode=wxDATAVIEW_CELL_ACTIVATABLE, int width=-1, wxAlignment align=wxALIGN_NOT, int flags=wxDATAVIEW_COL_RESIZABLE)</argsstring>
        <name>PrependDateColumn</name>
        <param>
          <type>const <ref refid="classwx_bitmap" kindref="compound">wxBitmap</ref> &amp;</type>
          <declname>label</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>model_column</declname>
        </param>
        <param>
          <type><ref refid="dataview_8h_1a82ea89fa957cf47b29e59799429bda7e" kindref="member">wxDataViewCellMode</ref></type>
          <declname>mode</declname>
          <defval><ref refid="dataview_8h_1a82ea89fa957cf47b29e59799429bda7ea2c376841929158b551b6563868451cc8" kindref="member">wxDATAVIEW_CELL_ACTIVATABLE</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type><ref refid="defs_8h_1a543dd017a172dc316253a8a1f351dde9" kindref="member">wxAlignment</ref></type>
          <declname>align</declname>
          <defval><ref refid="defs_8h_1a543dd017a172dc316253a8a1f351dde9a5e0bbb65574703f4d7f9b11734a3af0f" kindref="member">wxALIGN_NOT</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval><ref refid="dataview_8h_1a156305189c948da3fa8fa0268d9774f9ac590d7a142905fffb2be2bffa6886d0e" kindref="member">wxDATAVIEW_COL_RESIZABLE</ref></defval>
        </param>
        <briefdescription>
<para>Prepends a column for rendering a date. </para>        </briefdescription>
        <detaileddescription>
<para>Returns the <ref refid="classwx_data_view_column" kindref="compound">wxDataViewColumn</ref> created in the function or NULL on failure.</para><para><simplesect kind="note"><para>The <emphasis>align</emphasis> parameter is applied to both the column header and the column renderer. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="1030" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classwx_data_view_ctrl_1adcb2c3f763081e1f3b2b477a1e645ff6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_data_view_column" kindref="compound">wxDataViewColumn</ref> *</type>
        <definition>wxDataViewColumn* wxDataViewCtrl::AppendIconTextColumn</definition>
        <argsstring>(const wxString &amp;label, unsigned int model_column, wxDataViewCellMode mode=wxDATAVIEW_CELL_INERT, int width=-1, wxAlignment align=wxALIGN_NOT, int flags=wxDATAVIEW_COL_RESIZABLE)</argsstring>
        <name>AppendIconTextColumn</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>label</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>model_column</declname>
        </param>
        <param>
          <type><ref refid="dataview_8h_1a82ea89fa957cf47b29e59799429bda7e" kindref="member">wxDataViewCellMode</ref></type>
          <declname>mode</declname>
          <defval><ref refid="dataview_8h_1a82ea89fa957cf47b29e59799429bda7eade831fcdedc84d6ed5a03f8548f777e9" kindref="member">wxDATAVIEW_CELL_INERT</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type><ref refid="defs_8h_1a543dd017a172dc316253a8a1f351dde9" kindref="member">wxAlignment</ref></type>
          <declname>align</declname>
          <defval><ref refid="defs_8h_1a543dd017a172dc316253a8a1f351dde9a5e0bbb65574703f4d7f9b11734a3af0f" kindref="member">wxALIGN_NOT</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval><ref refid="dataview_8h_1a156305189c948da3fa8fa0268d9774f9ac590d7a142905fffb2be2bffa6886d0e" kindref="member">wxDATAVIEW_COL_RESIZABLE</ref></defval>
        </param>
        <briefdescription>
<para>Appends a column for rendering text with an icon. </para>        </briefdescription>
        <detaileddescription>
<para>Returns the <ref refid="classwx_data_view_column" kindref="compound">wxDataViewColumn</ref> created in the function or NULL on failure. This method uses the <ref refid="classwx_data_view_icon_text_renderer" kindref="compound">wxDataViewIconTextRenderer</ref> class.</para><para><simplesect kind="note"><para>The <emphasis>align</emphasis> parameter is applied to both the column header and the column renderer. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="1047" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_ctrl_1a0093ea8efcee16d0d4d81a929a251775" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_data_view_column" kindref="compound">wxDataViewColumn</ref> *</type>
        <definition>wxDataViewColumn* wxDataViewCtrl::AppendIconTextColumn</definition>
        <argsstring>(const wxBitmap &amp;label, unsigned int model_column, wxDataViewCellMode mode=wxDATAVIEW_CELL_INERT, int width=-1, wxAlignment align=wxALIGN_NOT, int flags=wxDATAVIEW_COL_RESIZABLE)</argsstring>
        <name>AppendIconTextColumn</name>
        <param>
          <type>const <ref refid="classwx_bitmap" kindref="compound">wxBitmap</ref> &amp;</type>
          <declname>label</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>model_column</declname>
        </param>
        <param>
          <type><ref refid="dataview_8h_1a82ea89fa957cf47b29e59799429bda7e" kindref="member">wxDataViewCellMode</ref></type>
          <declname>mode</declname>
          <defval><ref refid="dataview_8h_1a82ea89fa957cf47b29e59799429bda7eade831fcdedc84d6ed5a03f8548f777e9" kindref="member">wxDATAVIEW_CELL_INERT</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type><ref refid="defs_8h_1a543dd017a172dc316253a8a1f351dde9" kindref="member">wxAlignment</ref></type>
          <declname>align</declname>
          <defval><ref refid="defs_8h_1a543dd017a172dc316253a8a1f351dde9a5e0bbb65574703f4d7f9b11734a3af0f" kindref="member">wxALIGN_NOT</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval><ref refid="dataview_8h_1a156305189c948da3fa8fa0268d9774f9ac590d7a142905fffb2be2bffa6886d0e" kindref="member">wxDATAVIEW_COL_RESIZABLE</ref></defval>
        </param>
        <briefdescription>
<para>Appends a column for rendering text with an icon. </para>        </briefdescription>
        <detaileddescription>
<para>Returns the <ref refid="classwx_data_view_column" kindref="compound">wxDataViewColumn</ref> created in the function or NULL on failure. This method uses the <ref refid="classwx_data_view_icon_text_renderer" kindref="compound">wxDataViewIconTextRenderer</ref> class.</para><para><simplesect kind="note"><para>The <emphasis>align</emphasis> parameter is applied to both the column header and the column renderer. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="1053" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classwx_data_view_ctrl_1ab0b8be6b91b621593bb47134c30f7ef2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_data_view_column" kindref="compound">wxDataViewColumn</ref> *</type>
        <definition>wxDataViewColumn* wxDataViewCtrl::PrependIconTextColumn</definition>
        <argsstring>(const wxString &amp;label, unsigned int model_column, wxDataViewCellMode mode=wxDATAVIEW_CELL_INERT, int width=-1, wxAlignment align=wxALIGN_NOT, int flags=wxDATAVIEW_COL_RESIZABLE)</argsstring>
        <name>PrependIconTextColumn</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>label</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>model_column</declname>
        </param>
        <param>
          <type><ref refid="dataview_8h_1a82ea89fa957cf47b29e59799429bda7e" kindref="member">wxDataViewCellMode</ref></type>
          <declname>mode</declname>
          <defval><ref refid="dataview_8h_1a82ea89fa957cf47b29e59799429bda7eade831fcdedc84d6ed5a03f8548f777e9" kindref="member">wxDATAVIEW_CELL_INERT</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type><ref refid="defs_8h_1a543dd017a172dc316253a8a1f351dde9" kindref="member">wxAlignment</ref></type>
          <declname>align</declname>
          <defval><ref refid="defs_8h_1a543dd017a172dc316253a8a1f351dde9a5e0bbb65574703f4d7f9b11734a3af0f" kindref="member">wxALIGN_NOT</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval><ref refid="dataview_8h_1a156305189c948da3fa8fa0268d9774f9ac590d7a142905fffb2be2bffa6886d0e" kindref="member">wxDATAVIEW_COL_RESIZABLE</ref></defval>
        </param>
        <briefdescription>
<para>Prepends a column for rendering text with an icon. </para>        </briefdescription>
        <detaileddescription>
<para>Returns the <ref refid="classwx_data_view_column" kindref="compound">wxDataViewColumn</ref> created in the function or NULL on failure. This method uses the <ref refid="classwx_data_view_icon_text_renderer" kindref="compound">wxDataViewIconTextRenderer</ref> class.</para><para><simplesect kind="note"><para>The <emphasis>align</emphasis> parameter is applied to both the column header and the column renderer. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="1070" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_ctrl_1a17b6a80483169dc642dacd8096b32809" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_data_view_column" kindref="compound">wxDataViewColumn</ref> *</type>
        <definition>wxDataViewColumn* wxDataViewCtrl::PrependIconTextColumn</definition>
        <argsstring>(const wxBitmap &amp;label, unsigned int model_column, wxDataViewCellMode mode=wxDATAVIEW_CELL_INERT, int width=-1, wxAlignment align=wxALIGN_NOT, int flags=wxDATAVIEW_COL_RESIZABLE)</argsstring>
        <name>PrependIconTextColumn</name>
        <param>
          <type>const <ref refid="classwx_bitmap" kindref="compound">wxBitmap</ref> &amp;</type>
          <declname>label</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>model_column</declname>
        </param>
        <param>
          <type><ref refid="dataview_8h_1a82ea89fa957cf47b29e59799429bda7e" kindref="member">wxDataViewCellMode</ref></type>
          <declname>mode</declname>
          <defval><ref refid="dataview_8h_1a82ea89fa957cf47b29e59799429bda7eade831fcdedc84d6ed5a03f8548f777e9" kindref="member">wxDATAVIEW_CELL_INERT</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type><ref refid="defs_8h_1a543dd017a172dc316253a8a1f351dde9" kindref="member">wxAlignment</ref></type>
          <declname>align</declname>
          <defval><ref refid="defs_8h_1a543dd017a172dc316253a8a1f351dde9a5e0bbb65574703f4d7f9b11734a3af0f" kindref="member">wxALIGN_NOT</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval><ref refid="dataview_8h_1a156305189c948da3fa8fa0268d9774f9ac590d7a142905fffb2be2bffa6886d0e" kindref="member">wxDATAVIEW_COL_RESIZABLE</ref></defval>
        </param>
        <briefdescription>
<para>Prepends a column for rendering text with an icon. </para>        </briefdescription>
        <detaileddescription>
<para>Returns the <ref refid="classwx_data_view_column" kindref="compound">wxDataViewColumn</ref> created in the function or NULL on failure. This method uses the <ref refid="classwx_data_view_icon_text_renderer" kindref="compound">wxDataViewIconTextRenderer</ref> class.</para><para><simplesect kind="note"><para>The <emphasis>align</emphasis> parameter is applied to both the column header and the column renderer. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="1076" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classwx_data_view_ctrl_1ae2cd84628a4df6ce7723774115e1b2c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_data_view_column" kindref="compound">wxDataViewColumn</ref> *</type>
        <definition>wxDataViewColumn* wxDataViewCtrl::AppendProgressColumn</definition>
        <argsstring>(const wxString &amp;label, unsigned int model_column, wxDataViewCellMode mode=wxDATAVIEW_CELL_INERT, int width=80, wxAlignment align=wxALIGN_CENTER, int flags=wxDATAVIEW_COL_RESIZABLE)</argsstring>
        <name>AppendProgressColumn</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>label</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>model_column</declname>
        </param>
        <param>
          <type><ref refid="dataview_8h_1a82ea89fa957cf47b29e59799429bda7e" kindref="member">wxDataViewCellMode</ref></type>
          <declname>mode</declname>
          <defval><ref refid="dataview_8h_1a82ea89fa957cf47b29e59799429bda7eade831fcdedc84d6ed5a03f8548f777e9" kindref="member">wxDATAVIEW_CELL_INERT</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
          <defval>80</defval>
        </param>
        <param>
          <type><ref refid="defs_8h_1a543dd017a172dc316253a8a1f351dde9" kindref="member">wxAlignment</ref></type>
          <declname>align</declname>
          <defval><ref refid="defs_8h_1a543dd017a172dc316253a8a1f351dde9aea58cfe429cf1512d3b026dea8c1b044" kindref="member">wxALIGN_CENTER</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval><ref refid="dataview_8h_1a156305189c948da3fa8fa0268d9774f9ac590d7a142905fffb2be2bffa6886d0e" kindref="member">wxDATAVIEW_COL_RESIZABLE</ref></defval>
        </param>
        <briefdescription>
<para>Appends a column for rendering a progress indicator. </para>        </briefdescription>
        <detaileddescription>
<para>Returns the <ref refid="classwx_data_view_column" kindref="compound">wxDataViewColumn</ref> created in the function or NULL on failure.</para><para><simplesect kind="note"><para>The <emphasis>align</emphasis> parameter is applied to both the column header and the column renderer. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="1092" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_ctrl_1a0d7f8f8369efd8ae574001db0ef09e08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_data_view_column" kindref="compound">wxDataViewColumn</ref> *</type>
        <definition>wxDataViewColumn* wxDataViewCtrl::AppendProgressColumn</definition>
        <argsstring>(const wxBitmap &amp;label, unsigned int model_column, wxDataViewCellMode mode=wxDATAVIEW_CELL_INERT, int width=80, wxAlignment align=wxALIGN_CENTER, int flags=wxDATAVIEW_COL_RESIZABLE)</argsstring>
        <name>AppendProgressColumn</name>
        <param>
          <type>const <ref refid="classwx_bitmap" kindref="compound">wxBitmap</ref> &amp;</type>
          <declname>label</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>model_column</declname>
        </param>
        <param>
          <type><ref refid="dataview_8h_1a82ea89fa957cf47b29e59799429bda7e" kindref="member">wxDataViewCellMode</ref></type>
          <declname>mode</declname>
          <defval><ref refid="dataview_8h_1a82ea89fa957cf47b29e59799429bda7eade831fcdedc84d6ed5a03f8548f777e9" kindref="member">wxDATAVIEW_CELL_INERT</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
          <defval>80</defval>
        </param>
        <param>
          <type><ref refid="defs_8h_1a543dd017a172dc316253a8a1f351dde9" kindref="member">wxAlignment</ref></type>
          <declname>align</declname>
          <defval><ref refid="defs_8h_1a543dd017a172dc316253a8a1f351dde9aea58cfe429cf1512d3b026dea8c1b044" kindref="member">wxALIGN_CENTER</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval><ref refid="dataview_8h_1a156305189c948da3fa8fa0268d9774f9ac590d7a142905fffb2be2bffa6886d0e" kindref="member">wxDATAVIEW_COL_RESIZABLE</ref></defval>
        </param>
        <briefdescription>
<para>Appends a column for rendering a progress indicator. </para>        </briefdescription>
        <detaileddescription>
<para>Returns the <ref refid="classwx_data_view_column" kindref="compound">wxDataViewColumn</ref> created in the function or NULL on failure.</para><para><simplesect kind="note"><para>The <emphasis>align</emphasis> parameter is applied to both the column header and the column renderer. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="1098" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classwx_data_view_ctrl_1a896be8a69bedb71f880447c39c84c694" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_data_view_column" kindref="compound">wxDataViewColumn</ref> *</type>
        <definition>wxDataViewColumn* wxDataViewCtrl::PrependProgressColumn</definition>
        <argsstring>(const wxString &amp;label, unsigned int model_column, wxDataViewCellMode mode=wxDATAVIEW_CELL_INERT, int width=80, wxAlignment align=wxALIGN_CENTER, int flags=wxDATAVIEW_COL_RESIZABLE)</argsstring>
        <name>PrependProgressColumn</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>label</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>model_column</declname>
        </param>
        <param>
          <type><ref refid="dataview_8h_1a82ea89fa957cf47b29e59799429bda7e" kindref="member">wxDataViewCellMode</ref></type>
          <declname>mode</declname>
          <defval><ref refid="dataview_8h_1a82ea89fa957cf47b29e59799429bda7eade831fcdedc84d6ed5a03f8548f777e9" kindref="member">wxDATAVIEW_CELL_INERT</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
          <defval>80</defval>
        </param>
        <param>
          <type><ref refid="defs_8h_1a543dd017a172dc316253a8a1f351dde9" kindref="member">wxAlignment</ref></type>
          <declname>align</declname>
          <defval><ref refid="defs_8h_1a543dd017a172dc316253a8a1f351dde9aea58cfe429cf1512d3b026dea8c1b044" kindref="member">wxALIGN_CENTER</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval><ref refid="dataview_8h_1a156305189c948da3fa8fa0268d9774f9ac590d7a142905fffb2be2bffa6886d0e" kindref="member">wxDATAVIEW_COL_RESIZABLE</ref></defval>
        </param>
        <briefdescription>
<para>Prepends a column for rendering a progress indicator. </para>        </briefdescription>
        <detaileddescription>
<para>Returns the <ref refid="classwx_data_view_column" kindref="compound">wxDataViewColumn</ref> created in the function or NULL on failure.</para><para><simplesect kind="note"><para>The <emphasis>align</emphasis> parameter is applied to both the column header and the column renderer. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="1114" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_ctrl_1aa121eb9bf84608dac48b5f7dfe9b87b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_data_view_column" kindref="compound">wxDataViewColumn</ref> *</type>
        <definition>wxDataViewColumn* wxDataViewCtrl::PrependProgressColumn</definition>
        <argsstring>(const wxBitmap &amp;label, unsigned int model_column, wxDataViewCellMode mode=wxDATAVIEW_CELL_INERT, int width=80, wxAlignment align=wxALIGN_CENTER, int flags=wxDATAVIEW_COL_RESIZABLE)</argsstring>
        <name>PrependProgressColumn</name>
        <param>
          <type>const <ref refid="classwx_bitmap" kindref="compound">wxBitmap</ref> &amp;</type>
          <declname>label</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>model_column</declname>
        </param>
        <param>
          <type><ref refid="dataview_8h_1a82ea89fa957cf47b29e59799429bda7e" kindref="member">wxDataViewCellMode</ref></type>
          <declname>mode</declname>
          <defval><ref refid="dataview_8h_1a82ea89fa957cf47b29e59799429bda7eade831fcdedc84d6ed5a03f8548f777e9" kindref="member">wxDATAVIEW_CELL_INERT</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
          <defval>80</defval>
        </param>
        <param>
          <type><ref refid="defs_8h_1a543dd017a172dc316253a8a1f351dde9" kindref="member">wxAlignment</ref></type>
          <declname>align</declname>
          <defval><ref refid="defs_8h_1a543dd017a172dc316253a8a1f351dde9aea58cfe429cf1512d3b026dea8c1b044" kindref="member">wxALIGN_CENTER</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval><ref refid="dataview_8h_1a156305189c948da3fa8fa0268d9774f9ac590d7a142905fffb2be2bffa6886d0e" kindref="member">wxDATAVIEW_COL_RESIZABLE</ref></defval>
        </param>
        <briefdescription>
<para>Prepends a column for rendering a progress indicator. </para>        </briefdescription>
        <detaileddescription>
<para>Returns the <ref refid="classwx_data_view_column" kindref="compound">wxDataViewColumn</ref> created in the function or NULL on failure.</para><para><simplesect kind="note"><para>The <emphasis>align</emphasis> parameter is applied to both the column header and the column renderer. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="1120" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classwx_data_view_ctrl_1aa5102491ec5dc8f29fd6ca3a3f9f5219" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_data_view_column" kindref="compound">wxDataViewColumn</ref> *</type>
        <definition>wxDataViewColumn* wxDataViewCtrl::AppendTextColumn</definition>
        <argsstring>(const wxString &amp;label, unsigned int model_column, wxDataViewCellMode mode=wxDATAVIEW_CELL_INERT, int width=-1, wxAlignment align=wxALIGN_NOT, int flags=wxDATAVIEW_COL_RESIZABLE)</argsstring>
        <name>AppendTextColumn</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>label</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>model_column</declname>
        </param>
        <param>
          <type><ref refid="dataview_8h_1a82ea89fa957cf47b29e59799429bda7e" kindref="member">wxDataViewCellMode</ref></type>
          <declname>mode</declname>
          <defval><ref refid="dataview_8h_1a82ea89fa957cf47b29e59799429bda7eade831fcdedc84d6ed5a03f8548f777e9" kindref="member">wxDATAVIEW_CELL_INERT</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type><ref refid="defs_8h_1a543dd017a172dc316253a8a1f351dde9" kindref="member">wxAlignment</ref></type>
          <declname>align</declname>
          <defval><ref refid="defs_8h_1a543dd017a172dc316253a8a1f351dde9a5e0bbb65574703f4d7f9b11734a3af0f" kindref="member">wxALIGN_NOT</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval><ref refid="dataview_8h_1a156305189c948da3fa8fa0268d9774f9ac590d7a142905fffb2be2bffa6886d0e" kindref="member">wxDATAVIEW_COL_RESIZABLE</ref></defval>
        </param>
        <briefdescription>
<para>Appends a column for rendering text. </para>        </briefdescription>
        <detaileddescription>
<para>Returns the <ref refid="classwx_data_view_column" kindref="compound">wxDataViewColumn</ref> created in the function or NULL on failure.</para><para><simplesect kind="note"><para>The <emphasis>align</emphasis> parameter is applied to both the column header and the column renderer. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="1136" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_ctrl_1a98a01c0dcc31d2f907c181bd82e0317f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_data_view_column" kindref="compound">wxDataViewColumn</ref> *</type>
        <definition>wxDataViewColumn* wxDataViewCtrl::AppendTextColumn</definition>
        <argsstring>(const wxBitmap &amp;label, unsigned int model_column, wxDataViewCellMode mode=wxDATAVIEW_CELL_INERT, int width=-1, wxAlignment align=wxALIGN_NOT, int flags=wxDATAVIEW_COL_RESIZABLE)</argsstring>
        <name>AppendTextColumn</name>
        <param>
          <type>const <ref refid="classwx_bitmap" kindref="compound">wxBitmap</ref> &amp;</type>
          <declname>label</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>model_column</declname>
        </param>
        <param>
          <type><ref refid="dataview_8h_1a82ea89fa957cf47b29e59799429bda7e" kindref="member">wxDataViewCellMode</ref></type>
          <declname>mode</declname>
          <defval><ref refid="dataview_8h_1a82ea89fa957cf47b29e59799429bda7eade831fcdedc84d6ed5a03f8548f777e9" kindref="member">wxDATAVIEW_CELL_INERT</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type><ref refid="defs_8h_1a543dd017a172dc316253a8a1f351dde9" kindref="member">wxAlignment</ref></type>
          <declname>align</declname>
          <defval><ref refid="defs_8h_1a543dd017a172dc316253a8a1f351dde9a5e0bbb65574703f4d7f9b11734a3af0f" kindref="member">wxALIGN_NOT</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval><ref refid="dataview_8h_1a156305189c948da3fa8fa0268d9774f9ac590d7a142905fffb2be2bffa6886d0e" kindref="member">wxDATAVIEW_COL_RESIZABLE</ref></defval>
        </param>
        <briefdescription>
<para>Appends a column for rendering text. </para>        </briefdescription>
        <detaileddescription>
<para>Returns the <ref refid="classwx_data_view_column" kindref="compound">wxDataViewColumn</ref> created in the function or NULL on failure.</para><para><simplesect kind="note"><para>The <emphasis>align</emphasis> parameter is applied to both the column header and the column renderer. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="1142" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classwx_data_view_ctrl_1a0fe50ca4bae834afc85bd135a8b2ec31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_data_view_column" kindref="compound">wxDataViewColumn</ref> *</type>
        <definition>wxDataViewColumn* wxDataViewCtrl::PrependTextColumn</definition>
        <argsstring>(const wxString &amp;label, unsigned int model_column, wxDataViewCellMode mode=wxDATAVIEW_CELL_INERT, int width=-1, wxAlignment align=wxALIGN_NOT, int flags=wxDATAVIEW_COL_RESIZABLE)</argsstring>
        <name>PrependTextColumn</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>label</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>model_column</declname>
        </param>
        <param>
          <type><ref refid="dataview_8h_1a82ea89fa957cf47b29e59799429bda7e" kindref="member">wxDataViewCellMode</ref></type>
          <declname>mode</declname>
          <defval><ref refid="dataview_8h_1a82ea89fa957cf47b29e59799429bda7eade831fcdedc84d6ed5a03f8548f777e9" kindref="member">wxDATAVIEW_CELL_INERT</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type><ref refid="defs_8h_1a543dd017a172dc316253a8a1f351dde9" kindref="member">wxAlignment</ref></type>
          <declname>align</declname>
          <defval><ref refid="defs_8h_1a543dd017a172dc316253a8a1f351dde9a5e0bbb65574703f4d7f9b11734a3af0f" kindref="member">wxALIGN_NOT</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval><ref refid="dataview_8h_1a156305189c948da3fa8fa0268d9774f9ac590d7a142905fffb2be2bffa6886d0e" kindref="member">wxDATAVIEW_COL_RESIZABLE</ref></defval>
        </param>
        <briefdescription>
<para>Prepends a column for rendering text. </para>        </briefdescription>
        <detaileddescription>
<para>Returns the <ref refid="classwx_data_view_column" kindref="compound">wxDataViewColumn</ref> created in the function or NULL on failure.</para><para><simplesect kind="note"><para>The <emphasis>align</emphasis> parameter is applied to both the column header and the column renderer. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="1158" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_ctrl_1a1a92716275d7fffb5af6ff4e57ef4075" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_data_view_column" kindref="compound">wxDataViewColumn</ref> *</type>
        <definition>wxDataViewColumn* wxDataViewCtrl::PrependTextColumn</definition>
        <argsstring>(const wxBitmap &amp;label, unsigned int model_column, wxDataViewCellMode mode=wxDATAVIEW_CELL_INERT, int width=-1, wxAlignment align=wxALIGN_NOT, int flags=wxDATAVIEW_COL_RESIZABLE)</argsstring>
        <name>PrependTextColumn</name>
        <param>
          <type>const <ref refid="classwx_bitmap" kindref="compound">wxBitmap</ref> &amp;</type>
          <declname>label</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>model_column</declname>
        </param>
        <param>
          <type><ref refid="dataview_8h_1a82ea89fa957cf47b29e59799429bda7e" kindref="member">wxDataViewCellMode</ref></type>
          <declname>mode</declname>
          <defval><ref refid="dataview_8h_1a82ea89fa957cf47b29e59799429bda7eade831fcdedc84d6ed5a03f8548f777e9" kindref="member">wxDATAVIEW_CELL_INERT</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type><ref refid="defs_8h_1a543dd017a172dc316253a8a1f351dde9" kindref="member">wxAlignment</ref></type>
          <declname>align</declname>
          <defval><ref refid="defs_8h_1a543dd017a172dc316253a8a1f351dde9a5e0bbb65574703f4d7f9b11734a3af0f" kindref="member">wxALIGN_NOT</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval><ref refid="dataview_8h_1a156305189c948da3fa8fa0268d9774f9ac590d7a142905fffb2be2bffa6886d0e" kindref="member">wxDATAVIEW_COL_RESIZABLE</ref></defval>
        </param>
        <briefdescription>
<para>Prepends a column for rendering text. </para>        </briefdescription>
        <detaileddescription>
<para>Returns the <ref refid="classwx_data_view_column" kindref="compound">wxDataViewColumn</ref> created in the function or NULL on failure.</para><para><simplesect kind="note"><para>The <emphasis>align</emphasis> parameter is applied to both the column header and the column renderer. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="1164" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classwx_data_view_ctrl_1a6d84e3146baa4499566a548653a77541" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_data_view_column" kindref="compound">wxDataViewColumn</ref> *</type>
        <definition>wxDataViewColumn* wxDataViewCtrl::AppendToggleColumn</definition>
        <argsstring>(const wxString &amp;label, unsigned int model_column, wxDataViewCellMode mode=wxDATAVIEW_CELL_INERT, int width=30, wxAlignment align=wxALIGN_CENTER, int flags=wxDATAVIEW_COL_RESIZABLE)</argsstring>
        <name>AppendToggleColumn</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>label</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>model_column</declname>
        </param>
        <param>
          <type><ref refid="dataview_8h_1a82ea89fa957cf47b29e59799429bda7e" kindref="member">wxDataViewCellMode</ref></type>
          <declname>mode</declname>
          <defval><ref refid="dataview_8h_1a82ea89fa957cf47b29e59799429bda7eade831fcdedc84d6ed5a03f8548f777e9" kindref="member">wxDATAVIEW_CELL_INERT</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
          <defval>30</defval>
        </param>
        <param>
          <type><ref refid="defs_8h_1a543dd017a172dc316253a8a1f351dde9" kindref="member">wxAlignment</ref></type>
          <declname>align</declname>
          <defval><ref refid="defs_8h_1a543dd017a172dc316253a8a1f351dde9aea58cfe429cf1512d3b026dea8c1b044" kindref="member">wxALIGN_CENTER</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval><ref refid="dataview_8h_1a156305189c948da3fa8fa0268d9774f9ac590d7a142905fffb2be2bffa6886d0e" kindref="member">wxDATAVIEW_COL_RESIZABLE</ref></defval>
        </param>
        <briefdescription>
<para>Appends a column for rendering a toggle. </para>        </briefdescription>
        <detaileddescription>
<para>Returns the <ref refid="classwx_data_view_column" kindref="compound">wxDataViewColumn</ref> created in the function or NULL on failure.</para><para><simplesect kind="note"><para>The <emphasis>align</emphasis> parameter is applied to both the column header and the column renderer. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="1180" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_ctrl_1a0c1c0e9a9ffdcea37e3d472f624e45a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_data_view_column" kindref="compound">wxDataViewColumn</ref> *</type>
        <definition>wxDataViewColumn* wxDataViewCtrl::AppendToggleColumn</definition>
        <argsstring>(const wxBitmap &amp;label, unsigned int model_column, wxDataViewCellMode mode=wxDATAVIEW_CELL_INERT, int width=30, wxAlignment align=wxALIGN_CENTER, int flags=wxDATAVIEW_COL_RESIZABLE)</argsstring>
        <name>AppendToggleColumn</name>
        <param>
          <type>const <ref refid="classwx_bitmap" kindref="compound">wxBitmap</ref> &amp;</type>
          <declname>label</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>model_column</declname>
        </param>
        <param>
          <type><ref refid="dataview_8h_1a82ea89fa957cf47b29e59799429bda7e" kindref="member">wxDataViewCellMode</ref></type>
          <declname>mode</declname>
          <defval><ref refid="dataview_8h_1a82ea89fa957cf47b29e59799429bda7eade831fcdedc84d6ed5a03f8548f777e9" kindref="member">wxDATAVIEW_CELL_INERT</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
          <defval>30</defval>
        </param>
        <param>
          <type><ref refid="defs_8h_1a543dd017a172dc316253a8a1f351dde9" kindref="member">wxAlignment</ref></type>
          <declname>align</declname>
          <defval><ref refid="defs_8h_1a543dd017a172dc316253a8a1f351dde9aea58cfe429cf1512d3b026dea8c1b044" kindref="member">wxALIGN_CENTER</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval><ref refid="dataview_8h_1a156305189c948da3fa8fa0268d9774f9ac590d7a142905fffb2be2bffa6886d0e" kindref="member">wxDATAVIEW_COL_RESIZABLE</ref></defval>
        </param>
        <briefdescription>
<para>Appends a column for rendering a toggle. </para>        </briefdescription>
        <detaileddescription>
<para>Returns the <ref refid="classwx_data_view_column" kindref="compound">wxDataViewColumn</ref> created in the function or NULL on failure.</para><para><simplesect kind="note"><para>The <emphasis>align</emphasis> parameter is applied to both the column header and the column renderer. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="1186" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classwx_data_view_ctrl_1a9429e072fb57955efe4b3e0673fa186f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_data_view_column" kindref="compound">wxDataViewColumn</ref> *</type>
        <definition>wxDataViewColumn* wxDataViewCtrl::PrependToggleColumn</definition>
        <argsstring>(const wxString &amp;label, unsigned int model_column, wxDataViewCellMode mode=wxDATAVIEW_CELL_INERT, int width=30, wxAlignment align=wxALIGN_CENTER, int flags=wxDATAVIEW_COL_RESIZABLE)</argsstring>
        <name>PrependToggleColumn</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>label</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>model_column</declname>
        </param>
        <param>
          <type><ref refid="dataview_8h_1a82ea89fa957cf47b29e59799429bda7e" kindref="member">wxDataViewCellMode</ref></type>
          <declname>mode</declname>
          <defval><ref refid="dataview_8h_1a82ea89fa957cf47b29e59799429bda7eade831fcdedc84d6ed5a03f8548f777e9" kindref="member">wxDATAVIEW_CELL_INERT</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
          <defval>30</defval>
        </param>
        <param>
          <type><ref refid="defs_8h_1a543dd017a172dc316253a8a1f351dde9" kindref="member">wxAlignment</ref></type>
          <declname>align</declname>
          <defval><ref refid="defs_8h_1a543dd017a172dc316253a8a1f351dde9aea58cfe429cf1512d3b026dea8c1b044" kindref="member">wxALIGN_CENTER</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval><ref refid="dataview_8h_1a156305189c948da3fa8fa0268d9774f9ac590d7a142905fffb2be2bffa6886d0e" kindref="member">wxDATAVIEW_COL_RESIZABLE</ref></defval>
        </param>
        <briefdescription>
<para>Prepends a column for rendering a toggle. </para>        </briefdescription>
        <detaileddescription>
<para>Returns the <ref refid="classwx_data_view_column" kindref="compound">wxDataViewColumn</ref> created in the function or NULL on failure.</para><para><simplesect kind="note"><para>The <emphasis>align</emphasis> parameter is applied to both the column header and the column renderer. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="1202" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_ctrl_1a1c7412289a589a354c4a78afe6b9ef6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_data_view_column" kindref="compound">wxDataViewColumn</ref> *</type>
        <definition>wxDataViewColumn* wxDataViewCtrl::PrependToggleColumn</definition>
        <argsstring>(const wxBitmap &amp;label, unsigned int model_column, wxDataViewCellMode mode=wxDATAVIEW_CELL_INERT, int width=30, wxAlignment align=wxALIGN_CENTER, int flags=wxDATAVIEW_COL_RESIZABLE)</argsstring>
        <name>PrependToggleColumn</name>
        <param>
          <type>const <ref refid="classwx_bitmap" kindref="compound">wxBitmap</ref> &amp;</type>
          <declname>label</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>model_column</declname>
        </param>
        <param>
          <type><ref refid="dataview_8h_1a82ea89fa957cf47b29e59799429bda7e" kindref="member">wxDataViewCellMode</ref></type>
          <declname>mode</declname>
          <defval><ref refid="dataview_8h_1a82ea89fa957cf47b29e59799429bda7eade831fcdedc84d6ed5a03f8548f777e9" kindref="member">wxDATAVIEW_CELL_INERT</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
          <defval>30</defval>
        </param>
        <param>
          <type><ref refid="defs_8h_1a543dd017a172dc316253a8a1f351dde9" kindref="member">wxAlignment</ref></type>
          <declname>align</declname>
          <defval><ref refid="defs_8h_1a543dd017a172dc316253a8a1f351dde9aea58cfe429cf1512d3b026dea8c1b044" kindref="member">wxALIGN_CENTER</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval><ref refid="dataview_8h_1a156305189c948da3fa8fa0268d9774f9ac590d7a142905fffb2be2bffa6886d0e" kindref="member">wxDATAVIEW_COL_RESIZABLE</ref></defval>
        </param>
        <briefdescription>
<para>Prepends a column for rendering a toggle. </para>        </briefdescription>
        <detaileddescription>
<para>Returns the <ref refid="classwx_data_view_column" kindref="compound">wxDataViewColumn</ref> created in the function or NULL on failure.</para><para><simplesect kind="note"><para>The <emphasis>align</emphasis> parameter is applied to both the column header and the column renderer. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="1208" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_data_view_ctrl_1a3c912686a7c04b53445e2e1985685a3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxDataViewCtrl::wxDataViewCtrl</definition>
        <argsstring>()</argsstring>
        <name>wxDataViewCtrl</name>
        <briefdescription>
<para>Default Constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="908" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_ctrl_1a5cc833d3d27d13f5dae7bd2062a55189" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxDataViewCtrl::wxDataViewCtrl</definition>
        <argsstring>(wxWindow *parent, wxWindowID id, const wxPoint &amp;pos=wxDefaultPosition, const wxSize &amp;size=wxDefaultSize, long style=0, const wxValidator &amp;validator=wxDefaultValidator, const wxString &amp;name=wxDataViewCtrlNameStr)</argsstring>
        <name>wxDataViewCtrl</name>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>parent</declname>
        </param>
        <param>
          <type><ref refid="windowid_8h_1ae8091432cc2cb2485d45f2302fb51133" kindref="member">wxWindowID</ref></type>
          <declname>id</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_point" kindref="compound">wxPoint</ref> &amp;</type>
          <declname>pos</declname>
          <defval><ref refid="gdicmn_8h_1af5a90c753eaf3d3e3e5068a19ec3c1d0" kindref="member">wxDefaultPosition</ref></defval>
        </param>
        <param>
          <type>const <ref refid="classwx_size" kindref="compound">wxSize</ref> &amp;</type>
          <declname>size</declname>
          <defval><ref refid="gdicmn_8h_1a33a012cdb075e9f78c93f63bec2dc27b" kindref="member">wxDefaultSize</ref></defval>
        </param>
        <param>
          <type>long</type>
          <declname>style</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const <ref refid="classwx_validator" kindref="compound">wxValidator</ref> &amp;</type>
          <declname>validator</declname>
          <defval><ref refid="validate_8h_1af1e90d8aa1824fd2ce4024ef7e40703c" kindref="member">wxDefaultValidator</ref></defval>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>name</declname>
          <defval>wxDataViewCtrlNameStr</defval>
        </param>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
<para>Calls <ref refid="classwx_data_view_ctrl_1a1bd86d5869de4d24de791a48e9c6926e" kindref="member">Create()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="913" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_ctrl_1ad7740c300c45efcaa73dd1092c51b344" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual wxDataViewCtrl::~wxDataViewCtrl</definition>
        <argsstring>()</argsstring>
        <name>~wxDataViewCtrl</name>
        <briefdescription>
<para>Destructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="923" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_ctrl_1a1bd86d5869de4d24de791a48e9c6926e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxDataViewCtrl::Create</definition>
        <argsstring>(wxWindow *parent, wxWindowID id, const wxPoint &amp;pos=wxDefaultPosition, const wxSize &amp;size=wxDefaultSize, long style=0, const wxValidator &amp;validator=wxDefaultValidator, const wxString &amp;name=wxDataViewCtrlNameStr)</argsstring>
        <name>Create</name>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>parent</declname>
        </param>
        <param>
          <type><ref refid="windowid_8h_1ae8091432cc2cb2485d45f2302fb51133" kindref="member">wxWindowID</ref></type>
          <declname>id</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_point" kindref="compound">wxPoint</ref> &amp;</type>
          <declname>pos</declname>
          <defval><ref refid="gdicmn_8h_1af5a90c753eaf3d3e3e5068a19ec3c1d0" kindref="member">wxDefaultPosition</ref></defval>
        </param>
        <param>
          <type>const <ref refid="classwx_size" kindref="compound">wxSize</ref> &amp;</type>
          <declname>size</declname>
          <defval><ref refid="gdicmn_8h_1a33a012cdb075e9f78c93f63bec2dc27b" kindref="member">wxDefaultSize</ref></defval>
        </param>
        <param>
          <type>long</type>
          <declname>style</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const <ref refid="classwx_validator" kindref="compound">wxValidator</ref> &amp;</type>
          <declname>validator</declname>
          <defval><ref refid="validate_8h_1af1e90d8aa1824fd2ce4024ef7e40703c" kindref="member">wxDefaultValidator</ref></defval>
        </param>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>name</declname>
          <defval>wxDataViewCtrlNameStr</defval>
        </param>
        <briefdescription>
<para>Create the control. </para>        </briefdescription>
        <detaileddescription>
<para>Useful for two step creation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="928" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_ctrl_1ad5f39c5a8ff76f35bfd08a456cefbf5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxDataViewCtrl::AppendColumn</definition>
        <argsstring>(wxDataViewColumn *col)</argsstring>
        <name>AppendColumn</name>
        <reimplementedby refid="classwx_data_view_list_ctrl_1a6f3a7a6775625a36f22434cf542c4910">AppendColumn</reimplementedby>
        <param>
          <type><ref refid="classwx_data_view_column" kindref="compound">wxDataViewColumn</ref> *</type>
          <declname>col</declname>
        </param>
        <briefdescription>
<para>Appends a <ref refid="classwx_data_view_column" kindref="compound">wxDataViewColumn</ref> to the control. </para>        </briefdescription>
        <detaileddescription>
<para>Returns true on success.</para><para>Note that there is a number of short cut methods which implicitly create a <ref refid="classwx_data_view_column" kindref="compound">wxDataViewColumn</ref> and a <ref refid="classwx_data_view_renderer" kindref="compound">wxDataViewRenderer</ref> for it (see below). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="941" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_ctrl_1a86ad5d9d32244f14fb6d6fc447f95fbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxDataViewCtrl::PrependColumn</definition>
        <argsstring>(wxDataViewColumn *col)</argsstring>
        <name>PrependColumn</name>
        <reimplementedby refid="classwx_data_view_list_ctrl_1adabf4cf8381d2caa4d3782f43f6f2915">PrependColumn</reimplementedby>
        <param>
          <type><ref refid="classwx_data_view_column" kindref="compound">wxDataViewColumn</ref> *</type>
          <declname>col</declname>
        </param>
        <briefdescription>
<para>Prepends a <ref refid="classwx_data_view_column" kindref="compound">wxDataViewColumn</ref> to the control. </para>        </briefdescription>
        <detaileddescription>
<para>Returns true on success.</para><para>Note that there is a number of short cut methods which implicitly create a <ref refid="classwx_data_view_column" kindref="compound">wxDataViewColumn</ref> and a <ref refid="classwx_data_view_renderer" kindref="compound">wxDataViewRenderer</ref> for it. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="949" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_ctrl_1a42128862bfc32b6157290b2257e739a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxDataViewCtrl::InsertColumn</definition>
        <argsstring>(unsigned int pos, wxDataViewColumn *col)</argsstring>
        <name>InsertColumn</name>
        <reimplementedby refid="classwx_data_view_list_ctrl_1a6704b3df2526bd3c84d3038fd39a5905">InsertColumn</reimplementedby>
        <param>
          <type>unsigned int</type>
          <declname>pos</declname>
        </param>
        <param>
          <type><ref refid="classwx_data_view_column" kindref="compound">wxDataViewColumn</ref> *</type>
          <declname>col</declname>
        </param>
        <briefdescription>
<para>Inserts a <ref refid="classwx_data_view_column" kindref="compound">wxDataViewColumn</ref> to the control. </para>        </briefdescription>
        <detaileddescription>
<para>Returns true on success. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="954" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_ctrl_1af4b6c168d14814d69875c42ed960108b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxDataViewCtrl::AssociateModel</definition>
        <argsstring>(wxDataViewModel *model)</argsstring>
        <name>AssociateModel</name>
        <param>
          <type><ref refid="classwx_data_view_model" kindref="compound">wxDataViewModel</ref> *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
<para>Associates a <ref refid="classwx_data_view_model" kindref="compound">wxDataViewModel</ref> with the control. </para>        </briefdescription>
        <detaileddescription>
<para>This increases the reference count of the model by 1. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="1220" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_ctrl_1aec752b375a6edb1faecd16dc6c6dfac6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxDataViewCtrl::ClearColumns</definition>
        <argsstring>()</argsstring>
        <name>ClearColumns</name>
        <briefdescription>
<para>Removes all columns. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="1225" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_ctrl_1acec045cc2f40d30893842b8307190574" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxDataViewCtrl::Collapse</definition>
        <argsstring>(const wxDataViewItem &amp;item)</argsstring>
        <name>Collapse</name>
        <param>
          <type>const <ref refid="classwx_data_view_item" kindref="compound">wxDataViewItem</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Collapses the item. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="1230" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_ctrl_1a455cabf8a3faf5f2342626517b988b25" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxDataViewCtrl::DeleteColumn</definition>
        <argsstring>(wxDataViewColumn *column)</argsstring>
        <name>DeleteColumn</name>
        <param>
          <type><ref refid="classwx_data_view_column" kindref="compound">wxDataViewColumn</ref> *</type>
          <declname>column</declname>
        </param>
        <briefdescription>
<para>Deletes given column. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="1235" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_ctrl_1a546fd8f32823ea2587ebaffbce984ce0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxDataViewCtrl::EditItem</definition>
        <argsstring>(const wxDataViewItem &amp;item, const wxDataViewColumn *column)</argsstring>
        <name>EditItem</name>
        <param>
          <type>const <ref refid="classwx_data_view_item" kindref="compound">wxDataViewItem</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_data_view_column" kindref="compound">wxDataViewColumn</ref> *</type>
          <declname>column</declname>
        </param>
        <briefdescription>
<para>Programmatically starts editing given cell of <emphasis>item</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>Doesn&apos;t do anything if the item or this column is not editable.</para><para><simplesect kind="note"><para>Currently not implemented in wxOSX/Carbon.</para></simplesect>
<simplesect kind="since"><para>2.9.4 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="1246" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_ctrl_1ac5af3c3fc5990c7b4e3de87cc1087c96" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxDataViewCtrl::EnableDragSource</definition>
        <argsstring>(const wxDataFormat &amp;format)</argsstring>
        <name>EnableDragSource</name>
        <param>
          <type>const <ref refid="classwx_data_format" kindref="compound">wxDataFormat</ref> &amp;</type>
          <declname>format</declname>
        </param>
        <briefdescription>
<para>Enable drag operations using the given <emphasis>format</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="1251" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_ctrl_1a21adea3c4878bd10ab3e5b225c547b72" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxDataViewCtrl::EnableDropTarget</definition>
        <argsstring>(const wxDataFormat &amp;format)</argsstring>
        <name>EnableDropTarget</name>
        <param>
          <type>const <ref refid="classwx_data_format" kindref="compound">wxDataFormat</ref> &amp;</type>
          <declname>format</declname>
        </param>
        <briefdescription>
<para>Enable drop operations using the given <emphasis>format</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="1256" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_ctrl_1a892b67293dfc764d053fd764266c4326" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxDataViewCtrl::EnsureVisible</definition>
        <argsstring>(const wxDataViewItem &amp;item, const wxDataViewColumn *column=NULL)</argsstring>
        <name>EnsureVisible</name>
        <param>
          <type>const <ref refid="classwx_data_view_item" kindref="compound">wxDataViewItem</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_data_view_column" kindref="compound">wxDataViewColumn</ref> *</type>
          <declname>column</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Call this to ensure that the given item is visible. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="1261" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_ctrl_1af1c473d9f4ef898be667873f8b562dd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxDataViewCtrl::Expand</definition>
        <argsstring>(const wxDataViewItem &amp;item)</argsstring>
        <name>Expand</name>
        <param>
          <type>const <ref refid="classwx_data_view_item" kindref="compound">wxDataViewItem</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Expands the item. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="1267" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_ctrl_1ab5d764f5b29160cf670e0fcca37d92ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxDataViewCtrl::ExpandAncestors</definition>
        <argsstring>(const wxDataViewItem &amp;item)</argsstring>
        <name>ExpandAncestors</name>
        <param>
          <type>const <ref refid="classwx_data_view_item" kindref="compound">wxDataViewItem</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Expands all ancestors of the <emphasis>item</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>This method also ensures that the item itself as well as all ancestor items have been read from the model by the control. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="1274" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_ctrl_1ab9952638d23522f44a560ea60ed3a121" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_data_view_column" kindref="compound">wxDataViewColumn</ref> *</type>
        <definition>virtual wxDataViewColumn* wxDataViewCtrl::GetColumn</definition>
        <argsstring>(unsigned int pos) const</argsstring>
        <name>GetColumn</name>
        <param>
          <type>unsigned int</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
<para>Returns pointer to the column. </para>        </briefdescription>
        <detaileddescription>
<para><emphasis>pos</emphasis> refers to the position in the control which may change after reordering columns by the user. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="1280" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_ctrl_1aaa91e084fcd744360960d82dc8a0969d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>unsigned int</type>
        <definition>virtual unsigned int wxDataViewCtrl::GetColumnCount</definition>
        <argsstring>() const</argsstring>
        <name>GetColumnCount</name>
        <briefdescription>
<para>Returns the number of columns. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="1285" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_ctrl_1a371aec8f2646787e0682dbcd248257d7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>virtual int wxDataViewCtrl::GetColumnPosition</definition>
        <argsstring>(const wxDataViewColumn *column) const</argsstring>
        <name>GetColumnPosition</name>
        <param>
          <type>const <ref refid="classwx_data_view_column" kindref="compound">wxDataViewColumn</ref> *</type>
          <declname>column</declname>
        </param>
        <briefdescription>
<para>Returns the position of the column or -1 if not found in the control. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="1290" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_ctrl_1a3dfe39f764eaf0d3ef6e8e8e31b709a4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_data_view_column" kindref="compound">wxDataViewColumn</ref> *</type>
        <definition>wxDataViewColumn* wxDataViewCtrl::GetExpanderColumn</definition>
        <argsstring>() const</argsstring>
        <name>GetExpanderColumn</name>
        <briefdescription>
<para>Returns column containing the expanders. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="1295" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_ctrl_1afa975760a8ac2ba000861e8a6a3bd98c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_data_view_item" kindref="compound">wxDataViewItem</ref></type>
        <definition>wxDataViewItem wxDataViewCtrl::GetCurrentItem</definition>
        <argsstring>() const</argsstring>
        <name>GetCurrentItem</name>
        <briefdescription>
<para>Returns the currently focused item. </para>        </briefdescription>
        <detaileddescription>
<para>This is the item that the keyboard commands apply to. It may be invalid if there is no focus currently.</para><para>This method is mostly useful for the controls with <computeroutput>wxDV_MULTIPLE</computeroutput> style as in the case of single selection it returns the same thing as <ref refid="classwx_data_view_ctrl_1afca6f3f199c44ae95a63052604c79f1c" kindref="member">GetSelection()</ref>.</para><para>Notice that under all platforms except Mac OS X the currently focused item may be selected or not but under OS X the current item is always selected.</para><para><simplesect kind="see"><para><ref refid="classwx_data_view_ctrl_1a4cc4e7a506afcb1b646927bd91727ac6" kindref="member">SetCurrentItem()</ref>, <ref refid="classwx_data_view_ctrl_1a421bd88d1f01770be205be92eb739d78" kindref="member">GetCurrentColumn()</ref></para></simplesect>
<simplesect kind="since"><para>2.9.2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="1315" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_ctrl_1a421bd88d1f01770be205be92eb739d78" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_data_view_column" kindref="compound">wxDataViewColumn</ref> *</type>
        <definition>wxDataViewColumn* wxDataViewCtrl::GetCurrentColumn</definition>
        <argsstring>() const</argsstring>
        <name>GetCurrentColumn</name>
        <briefdescription>
<para>Returns the column that currently has focus. </para>        </briefdescription>
        <detaileddescription>
<para>If the focus is set to individual cell within the currently focused item (as opposed to being on the item as a whole), then this is the column that the focus is on.</para><para>Returns NULL if no column currently has focus.</para><para><simplesect kind="see"><para><ref refid="classwx_data_view_ctrl_1afa975760a8ac2ba000861e8a6a3bd98c" kindref="member">GetCurrentItem()</ref></para></simplesect>
<simplesect kind="since"><para>2.9.4 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="1330" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_ctrl_1ab7e38a0bb67990143b1577c4f4b759b3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxDataViewCtrl::GetIndent</definition>
        <argsstring>() const</argsstring>
        <name>GetIndent</name>
        <briefdescription>
<para>Returns indentation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="1335" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_ctrl_1aff0f7af39714f5beb5558bd802011ad2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_rect" kindref="compound">wxRect</ref></type>
        <definition>virtual wxRect wxDataViewCtrl::GetItemRect</definition>
        <argsstring>(const wxDataViewItem &amp;item, const wxDataViewColumn *col=NULL) const</argsstring>
        <name>GetItemRect</name>
        <param>
          <type>const <ref refid="classwx_data_view_item" kindref="compound">wxDataViewItem</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_data_view_column" kindref="compound">wxDataViewColumn</ref> *</type>
          <declname>col</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Returns item rectangle. </para>        </briefdescription>
        <detaileddescription>
<para>This method is currently not implemented at all in wxGTK and only implemented for non-NULL <emphasis>col</emphasis> argument in wxOSX. It is fully implemented in the generic version of the control.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>item</parametername>
</parameternamelist>
<parameterdescription>
<para>A valid item. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>col</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-NULL, the rectangle returned corresponds to the intersection of the item with the specified column. If NULL, the rectangle spans all the columns. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="1351" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_ctrl_1ac2ae1807a43670e9f6b20dc5f15f389b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_data_view_model" kindref="compound">wxDataViewModel</ref> *</type>
        <definition>wxDataViewModel* wxDataViewCtrl::GetModel</definition>
        <argsstring>()</argsstring>
        <name>GetModel</name>
        <briefdescription>
<para>Returns pointer to the data model associated with the control (if any). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="1357" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_ctrl_1a9c9b343b463d2bff5201ef6846d65b3b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>virtual int wxDataViewCtrl::GetSelectedItemsCount</definition>
        <argsstring>() const</argsstring>
        <name>GetSelectedItemsCount</name>
        <briefdescription>
<para>Returns the number of currently selected items. </para>        </briefdescription>
        <detaileddescription>
<para>This method may be called for both the controls with single and multiple selections and returns the number of selected item, possibly 0, in any case.</para><para><simplesect kind="since"><para>2.9.3 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="1368" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_ctrl_1afca6f3f199c44ae95a63052604c79f1c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_data_view_item" kindref="compound">wxDataViewItem</ref></type>
        <definition>virtual wxDataViewItem wxDataViewCtrl::GetSelection</definition>
        <argsstring>() const</argsstring>
        <name>GetSelection</name>
        <briefdescription>
<para>Returns first selected item or an invalid item if none is selected. </para>        </briefdescription>
        <detaileddescription>
<para>This method may be called for both the controls with single and multiple selections but returns an invalid item if more than one item is selected in the latter case, use <ref refid="classwx_data_view_ctrl_1a22810354b766bfcdd2cdb2adbd19fb60" kindref="member">HasSelection()</ref> to determine if there are any selected items when using multiple selection. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="1378" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_ctrl_1a262b359dce1de83570f8bfeeb678b47d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>virtual int wxDataViewCtrl::GetSelections</definition>
        <argsstring>(wxDataViewItemArray &amp;sel) const</argsstring>
        <name>GetSelections</name>
        <param>
          <type>wxDataViewItemArray &amp;</type>
          <declname>sel</declname>
        </param>
        <briefdescription>
<para>Fills <emphasis>sel</emphasis> with currently selected items and returns their number. </para>        </briefdescription>
        <detaileddescription>
<para>This method may be called for both the controls with single and multiple selections. In the single selection case it returns the array with at most one element in it.</para><para><simplesect kind="see"><para><ref refid="classwx_data_view_ctrl_1a9c9b343b463d2bff5201ef6846d65b3b" kindref="member">GetSelectedItemsCount()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="1389" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_ctrl_1a3a436ec0a1e7fad033914962d78c0190" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_data_view_column" kindref="compound">wxDataViewColumn</ref> *</type>
        <definition>virtual wxDataViewColumn* wxDataViewCtrl::GetSortingColumn</definition>
        <argsstring>() const</argsstring>
        <name>GetSortingColumn</name>
        <briefdescription>
<para>Returns the <ref refid="classwx_data_view_column" kindref="compound">wxDataViewColumn</ref> currently responsible for sorting or NULL if none has been selected. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="1395" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_ctrl_1a22810354b766bfcdd2cdb2adbd19fb60" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxDataViewCtrl::HasSelection</definition>
        <argsstring>() const</argsstring>
        <name>HasSelection</name>
        <briefdescription>
<para>Returns true if any items are currently selected. </para>        </briefdescription>
        <detaileddescription>
<para>This method may be called for both the controls with single and multiple selections.</para><para>Calling this method is equivalent to calling <ref refid="classwx_data_view_ctrl_1a9c9b343b463d2bff5201ef6846d65b3b" kindref="member">GetSelectedItemsCount()</ref> and comparing its result with 0 but is more clear and might also be implemented more efficiently in the future.</para><para><simplesect kind="since"><para>2.9.3 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="1409" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_ctrl_1a986d43641872b4885c13d72df35de442" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxDataViewCtrl::HitTest</definition>
        <argsstring>(const wxPoint &amp;point, wxDataViewItem &amp;item, wxDataViewColumn *&amp;col) const</argsstring>
        <name>HitTest</name>
        <param>
          <type>const <ref refid="classwx_point" kindref="compound">wxPoint</ref> &amp;</type>
          <declname>point</declname>
        </param>
        <param>
          <type><ref refid="classwx_data_view_item" kindref="compound">wxDataViewItem</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <param>
          <type><ref refid="classwx_data_view_column" kindref="compound">wxDataViewColumn</ref> *&amp;</type>
          <declname>col</declname>
        </param>
        <briefdescription>
<para>Hittest. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="1414" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_ctrl_1a79a0b51f58bf4d02b3920b3e73d67d66" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxDataViewCtrl::IsExpanded</definition>
        <argsstring>(const wxDataViewItem &amp;item) const</argsstring>
        <name>IsExpanded</name>
        <param>
          <type>const <ref refid="classwx_data_view_item" kindref="compound">wxDataViewItem</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Return true if the item is expanded. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="1420" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_ctrl_1a517876b596c387a2837cdd6b1b9bcd89" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxDataViewCtrl::IsSelected</definition>
        <argsstring>(const wxDataViewItem &amp;item) const</argsstring>
        <name>IsSelected</name>
        <param>
          <type>const <ref refid="classwx_data_view_item" kindref="compound">wxDataViewItem</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Return true if the item is selected. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="1425" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_ctrl_1a3efbccfcaeacd81e1d33745333b4118f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxDataViewCtrl::Select</definition>
        <argsstring>(const wxDataViewItem &amp;item)</argsstring>
        <name>Select</name>
        <param>
          <type>const <ref refid="classwx_data_view_item" kindref="compound">wxDataViewItem</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Select the given item. </para>        </briefdescription>
        <detaileddescription>
<para>In single selection mode this changes the (unique) currently selected item. In multi selection mode, the <emphasis>item</emphasis> is selected and the previously selected items remain selected. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="1434" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_ctrl_1a2731ddd9f9f0915b69beac95574ed348" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxDataViewCtrl::SelectAll</definition>
        <argsstring>()</argsstring>
        <name>SelectAll</name>
        <briefdescription>
<para>Select all items. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="1439" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_ctrl_1a1dbbf7975e765e783a4c6e2fde7a4115" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDataViewCtrl::SetExpanderColumn</definition>
        <argsstring>(wxDataViewColumn *col)</argsstring>
        <name>SetExpanderColumn</name>
        <param>
          <type><ref refid="classwx_data_view_column" kindref="compound">wxDataViewColumn</ref> *</type>
          <declname>col</declname>
        </param>
        <briefdescription>
<para>Set which column shall contain the tree-like expanders. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="1444" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_ctrl_1a4cc4e7a506afcb1b646927bd91727ac6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDataViewCtrl::SetCurrentItem</definition>
        <argsstring>(const wxDataViewItem &amp;item)</argsstring>
        <name>SetCurrentItem</name>
        <param>
          <type>const <ref refid="classwx_data_view_item" kindref="compound">wxDataViewItem</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Changes the currently focused item. </para>        </briefdescription>
        <detaileddescription>
<para>The <emphasis>item</emphasis> parameter must be valid, there is no way to remove the current item from the control.</para><para>In single selection mode, calling this method is the same as calling <ref refid="classwx_data_view_ctrl_1a3efbccfcaeacd81e1d33745333b4118f" kindref="member">Select()</ref> and is thus not very useful. In multiple selection mode this method only moves the current item however without changing the selection except under OS X where the current item is always selected, so calling <ref refid="classwx_data_view_ctrl_1a4cc4e7a506afcb1b646927bd91727ac6" kindref="member">SetCurrentItem()</ref> selects <emphasis>item</emphasis> if it hadn&apos;t been selected before.</para><para><simplesect kind="see"><para><ref refid="classwx_data_view_ctrl_1afa975760a8ac2ba000861e8a6a3bd98c" kindref="member">GetCurrentItem()</ref></para></simplesect>
<simplesect kind="since"><para>2.9.2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="1463" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_ctrl_1a595ab054debffe1a3d906e3a748a382e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxDataViewCtrl::SetIndent</definition>
        <argsstring>(int indent)</argsstring>
        <name>SetIndent</name>
        <param>
          <type>int</type>
          <declname>indent</declname>
        </param>
        <briefdescription>
<para>Sets the indentation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="1468" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_ctrl_1afc2024630264f2bc1c661f7d70624187" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxDataViewCtrl::SetSelections</definition>
        <argsstring>(const wxDataViewItemArray &amp;sel)</argsstring>
        <name>SetSelections</name>
        <param>
          <type>const wxDataViewItemArray &amp;</type>
          <declname>sel</declname>
        </param>
        <briefdescription>
<para>Sets the selection to the array of wxDataViewItems. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="1473" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_ctrl_1a8b5df79c5f0a80981da47b92b7e565ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxDataViewCtrl::Unselect</definition>
        <argsstring>(const wxDataViewItem &amp;item)</argsstring>
        <name>Unselect</name>
        <param>
          <type>const <ref refid="classwx_data_view_item" kindref="compound">wxDataViewItem</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Unselect the given item. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="1478" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_ctrl_1a62f38a69855fcc8342a15950e6eb1356" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxDataViewCtrl::UnselectAll</definition>
        <argsstring>()</argsstring>
        <name>UnselectAll</name>
        <briefdescription>
<para>Unselect all item. </para>        </briefdescription>
        <detaileddescription>
<para>This method only has effect if multiple selections are allowed. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="1484" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_data_view_ctrl_1a799a3c56989d986893fae2b0147e9553" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxDataViewCtrl::SetRowHeight</definition>
        <argsstring>(int rowHeight)</argsstring>
        <name>SetRowHeight</name>
        <param>
          <type>int</type>
          <declname>rowHeight</declname>
        </param>
        <briefdescription>
<para>Sets the row height. </para>        </briefdescription>
        <detaileddescription>
<para>This function can only be used when all rows have the same height, i.e. when wxDV_VARIABLE_LINE_HEIGHT flag is not used.</para><para>Currently this is implemented in the generic and native GTK versions only and nothing is done (and false returned) when using OS X port.</para><para>Also notice that this method can only be used to increase the row height compared with the default one (as determined by the return value of wxDataViewRenderer::GetSize()), if it is set to a too small value then the minimum required by the renderers will be used.</para><para><simplesect kind="return"><para>true if the line height was changed or false otherwise.</para></simplesect>
<simplesect kind="since"><para>2.9.2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/dataview.h" line="1504" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classwx_data_view_ctrl" kindref="compound">wxDataViewCtrl</ref> is a control to display data either in a tree like fashion or in a tabular form or both. </para>    </briefdescription>
    <detaileddescription>
<para>If you only need to display a simple tree structure with an API more like the older <ref refid="classwx_tree_ctrl" kindref="compound">wxTreeCtrl</ref> class, then the specialized <ref refid="classwx_data_view_tree_ctrl" kindref="compound">wxDataViewTreeCtrl</ref> can be used. Likewise, if you only want to display simple table structure you can use the specialized <ref refid="classwx_data_view_list_ctrl" kindref="compound">wxDataViewListCtrl</ref> class. Both <ref refid="classwx_data_view_tree_ctrl" kindref="compound">wxDataViewTreeCtrl</ref> and <ref refid="classwx_data_view_list_ctrl" kindref="compound">wxDataViewListCtrl</ref> can be used without defining your own <ref refid="classwx_data_view_model" kindref="compound">wxDataViewModel</ref>.</para><para>A <ref refid="classwx_data_view_item" kindref="compound">wxDataViewItem</ref> is used to represent a (visible) item in the control.</para><para>Unlike <ref refid="classwx_list_ctrl" kindref="compound">wxListCtrl</ref>, <ref refid="classwx_data_view_ctrl" kindref="compound">wxDataViewCtrl</ref> doesn&apos;t get its data from the user through virtual functions or by setting it directly. Instead you need to write your own <ref refid="classwx_data_view_model" kindref="compound">wxDataViewModel</ref> and associate it with this control. Then you need to add a number of <ref refid="classwx_data_view_column" kindref="compound">wxDataViewColumn</ref> to this control to define what each column shall display. Each <ref refid="classwx_data_view_column" kindref="compound">wxDataViewColumn</ref> in turn owns 1 instance of a <ref refid="classwx_data_view_renderer" kindref="compound">wxDataViewRenderer</ref> to render its cells.</para><para>A number of standard renderers for rendering text, dates, images, toggle, a progress bar etc. are provided. Additionally, the user can write custom renderers deriving from <ref refid="classwx_data_view_custom_renderer" kindref="compound">wxDataViewCustomRenderer</ref> for displaying anything.</para><para>All data transfer from the control to the model and the user code is done through <ref refid="classwx_variant" kindref="compound">wxVariant</ref> which can be extended to support more data formats as necessary. Accordingly, all type information uses the strings returned from <ref refid="classwx_variant_1ab1c71f1e6c3b02339d97d211bfde15a9" kindref="member">wxVariant::GetType</ref>.</para><para><linebreak/>
<heading level="2">Styles</heading>
</para><para>This class supports the following styles:</para><para> <itemizedlist>
<listitem><para>wxDV_SINGLE: Single selection mode. This is the default. </para></listitem>
<listitem><para>wxDV_MULTIPLE: Multiple selection mode. </para></listitem>
<listitem><para>wxDV_ROW_LINES: Use alternating colours for rows if supported by platform and theme. Currently only supported by the native GTK and OS X implementations but not by the generic one. </para></listitem>
<listitem><para>wxDV_HORIZ_RULES: Display the separator lines between rows. </para></listitem>
<listitem><para>wxDV_VERT_RULES: Display the separator lines between columns. </para></listitem>
<listitem><para>wxDV_VARIABLE_LINE_HEIGHT: Allow variable line heights. This can be inefficient when displaying large number of items. </para></listitem>
<listitem><para>wxDV_NO_HEADER: Do not show column headers (which are shown by default). <linebreak/>
 <linebreak/>
<heading level="2">Events emitted by this class</heading>
</para></listitem>
</itemizedlist>
</para><para>The following event handler macros redirect the events to member function handlers &apos;<bold>func</bold>&apos; with prototypes like: void<nonbreakablespace/>handlerFuncName(<ref refid="classwx_data_view_event" kindref="compound">wxDataViewEvent</ref>&amp;<nonbreakablespace/>event)</para><para>Event macros for events emitted by this class: <itemizedlist>
<listitem><para>EVT_DATAVIEW_SELECTION_CHANGED(id,  func): Process a <computeroutput>wxEVT_DATAVIEW_SELECTION_CHANGED</computeroutput> event. </para></listitem>
<listitem><para>EVT_DATAVIEW_ITEM_ACTIVATED(id,  func): Process a <computeroutput>wxEVT_DATAVIEW_ITEM_ACTIVATED</computeroutput> event. This event is triggered by double clicking an item or pressing some special key (usually &quot;Enter&quot;) when it is focused. </para></listitem>
<listitem><para>EVT_DATAVIEW_ITEM_START_EDITING(id,  func): Process a <computeroutput>wxEVT_DATAVIEW_ITEM_START_EDITING</computeroutput> event. This event can be vetoed in order to prevent editing on an item by item basis. </para></listitem>
<listitem><para>EVT_DATAVIEW_ITEM_EDITING_STARTED(id,  func): Process a <computeroutput>wxEVT_DATAVIEW_ITEM_EDITING_STARTED</computeroutput> event. </para></listitem>
<listitem><para>EVT_DATAVIEW_ITEM_EDITING_DONE(id,  func): Process a <computeroutput>wxEVT_DATAVIEW_ITEM_EDITING_DONE</computeroutput> event. </para></listitem>
<listitem><para>EVT_DATAVIEW_ITEM_COLLAPSING(id,  func): Process a <computeroutput>wxEVT_DATAVIEW_ITEM_COLLAPSING</computeroutput> event. </para></listitem>
<listitem><para>EVT_DATAVIEW_ITEM_COLLAPSED(id,  func): Process a <computeroutput>wxEVT_DATAVIEW_ITEM_COLLAPSED</computeroutput> event. </para></listitem>
<listitem><para>EVT_DATAVIEW_ITEM_EXPANDING(id,  func): Process a <computeroutput>wxEVT_DATAVIEW_ITEM_EXPANDING</computeroutput> event. </para></listitem>
<listitem><para>EVT_DATAVIEW_ITEM_EXPANDED(id,  func): Process a <computeroutput>wxEVT_DATAVIEW_ITEM_EXPANDED</computeroutput> event. </para></listitem>
<listitem><para>EVT_DATAVIEW_ITEM_VALUE_CHANGED(id,  func): Process a <computeroutput>wxEVT_DATAVIEW_ITEM_VALUE_CHANGED</computeroutput> event. </para></listitem>
<listitem><para>EVT_DATAVIEW_ITEM_CONTEXT_MENU(id,  func): Process a <computeroutput>wxEVT_DATAVIEW_ITEM_CONTEXT_MENU</computeroutput> event generated when the user right clicks inside the control. Notice that this menu is generated even if the click didn&apos;t occur on any valid item, in this case <ref refid="classwx_data_view_event_1a12b6930d73aba4a8ba51ef6b1c09b84d" kindref="member">wxDataViewEvent::GetItem()</ref> simply returns an invalid item. </para></listitem>
<listitem><para>EVT_DATAVIEW_COLUMN_HEADER_CLICK(id,  func): Process a <computeroutput>wxEVT_DATAVIEW_COLUMN_HEADER_CLICK</computeroutput> event. </para></listitem>
<listitem><para>EVT_DATAVIEW_COLUMN_HEADER_RIGHT_CLICK(id,  func): Process a <computeroutput>wxEVT_DATAVIEW_COLUMN_HEADER_RIGHT_CLICK</computeroutput> event. Notice that currently this event is not generated in the native OS X versions of the control. </para></listitem>
<listitem><para>EVT_DATAVIEW_COLUMN_SORTED(id,  func): Process a <computeroutput>wxEVT_DATAVIEW_COLUMN_SORTED</computeroutput> event. </para></listitem>
<listitem><para>EVT_DATAVIEW_COLUMN_REORDERED(id,  func): Process a <computeroutput>wxEVT_DATAVIEW_COLUMN_REORDERED</computeroutput> event. </para></listitem>
<listitem><para>EVT_DATAVIEW_ITEM_BEGIN_DRAG(id,  func): Process a <computeroutput>wxEVT_DATAVIEW_ITEM_BEGIN_DRAG</computeroutput> event. </para></listitem>
<listitem><para>EVT_DATAVIEW_ITEM_DROP_POSSIBLE(id,  func): Process a <computeroutput>wxEVT_DATAVIEW_ITEM_DROP_POSSIBLE</computeroutput> event. </para></listitem>
<listitem><para>EVT_DATAVIEW_ITEM_DROP(id,  func): Process a <computeroutput>wxEVT_DATAVIEW_ITEM_DROP</computeroutput> event. <linebreak/>
 Notice that this control doesn&apos;t allow to process generic mouse events such as <computeroutput>wxEVT_LEFT_DOWN</computeroutput> in all ports (notably it doesn&apos;t work in wxGTK). If you need to handle any mouse events not covered by the ones above, consider using a custom renderer for the cells that must handle them.</para></listitem>
</itemizedlist>
<heading level="2"></heading>
</para><para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxadv" kindref="member">wxAdvanced</ref> &lt;&gt;&lt; =&apos;&apos;&gt;:&lt;/&gt;&amp;;&amp;;&lt; =&apos;&apos;&gt;\ , \ &lt;/&gt;&lt;/&gt; <linebreak/>
<image type="html" name="appear-dataviewctrl-msw.png">wxMSW Appearance</image>
<linebreak/>
<linebreak/>
<image type="html" name="appear-dataviewctrl-gtk.png">wxGTK Appearance</image>
<linebreak/>
<linebreak/>
<image type="html" name="appear-dataviewctrl-mac.png">wxOSX Appearance</image>
<linebreak/>
 </para>    </detaileddescription>
    <inheritancegraph>
      <node id="1361">
        <label>wxObject</label>
        <link refid="classwx_object"/>
      </node>
      <node id="1360">
        <label>wxEvtHandler</label>
        <link refid="classwx_evt_handler"/>
        <childnode refid="1361" relation="public-inheritance">
        </childnode>
        <childnode refid="1362" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1364">
        <label>wxDataViewTreeCtrl</label>
        <link refid="classwx_data_view_tree_ctrl"/>
        <childnode refid="1357" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1363">
        <label>wxDataViewListCtrl</label>
        <link refid="classwx_data_view_list_ctrl"/>
        <childnode refid="1357" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1362">
        <label>wxTrackable</label>
        <link refid="classwx_trackable"/>
      </node>
      <node id="1358">
        <label>wxControl</label>
        <link refid="classwx_control"/>
        <childnode refid="1359" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1359">
        <label>wxWindow</label>
        <link refid="classwx_window"/>
        <childnode refid="1360" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1357">
        <label>wxDataViewCtrl</label>
        <link refid="classwx_data_view_ctrl"/>
        <childnode refid="1358" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1369">
        <label>wxObject</label>
        <link refid="classwx_object"/>
        <childnode refid="1370" relation="usage">
          <edgelabel>m_refData</edgelabel>
        </childnode>
      </node>
      <node id="1368">
        <label>wxEvtHandler</label>
        <link refid="classwx_evt_handler"/>
        <childnode refid="1369" relation="public-inheritance">
        </childnode>
        <childnode refid="1371" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1371">
        <label>wxTrackable</label>
        <link refid="classwx_trackable"/>
      </node>
      <node id="1366">
        <label>wxControl</label>
        <link refid="classwx_control"/>
        <childnode refid="1367" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1367">
        <label>wxWindow</label>
        <link refid="classwx_window"/>
        <childnode refid="1368" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1365">
        <label>wxDataViewCtrl</label>
        <link refid="classwx_data_view_ctrl"/>
        <childnode refid="1366" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1370">
        <label>wxObjectRefData</label>
        <link refid="classwx_object_ref_data"/>
      </node>
    </collaborationgraph>
    <location file="interface/wx/dataview.h" line="903" column="1" bodyfile="interface/wx/dataview.h" bodystart="902" bodyend="1505"/>
    <listofallmembers>
      <member refid="classwx_window_1a1da8baa734b9872d0c085b86a7b5d817" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>AcceptsFocus</name></member>
      <member refid="classwx_window_1a3a0cb3bd5e82462b19df9f24ad6d9ac4" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>AcceptsFocusFromKeyboard</name></member>
      <member refid="classwx_window_1af0c30b930ecf57f94b8cfc8871e8fd94" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>AcceptsFocusRecursively</name></member>
      <member refid="classwx_window_1abf60159278059a5bb397eb8647227bb3" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>AddChild</name></member>
      <member refid="classwx_evt_handler_1a7dc3c701781f4044372049de5004137e" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>AddFilter</name></member>
      <member refid="classwx_window_1a774b5b5548a6258727b5e2099e63ae9a" prot="protected" virt="virtual"><scope>wxDataViewCtrl</scope><name>AddPendingEvent</name></member>
      <member refid="classwx_window_1a71d1daa71f1ad1f6cbaac54db7e71af3" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>AdjustForLayoutDirection</name></member>
      <member refid="classwx_object_1a60204063f3cc3aa2fa1c7ff5bda9eb13" prot="protected" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>AllocExclusive</name></member>
      <member refid="classwx_window_1aae29552806a328c6a55ef8f07647f5ba" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>AlwaysShowScrollbars</name></member>
      <member refid="classwx_data_view_ctrl_1abbdf9f5b7c1e65d792f92a737efc0a29" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>AppendBitmapColumn</name></member>
      <member refid="classwx_data_view_ctrl_1a9c322041d48a0d111b1153a78a48eec0" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>AppendBitmapColumn</name></member>
      <member refid="classwx_data_view_ctrl_1ad5f39c5a8ff76f35bfd08a456cefbf5f" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>AppendColumn</name></member>
      <member refid="classwx_data_view_ctrl_1a3959835e6d2fb130c362be66a812ecee" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>AppendDateColumn</name></member>
      <member refid="classwx_data_view_ctrl_1a390a9dee6b1672b299dd305e4fcb746c" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>AppendDateColumn</name></member>
      <member refid="classwx_data_view_ctrl_1adcb2c3f763081e1f3b2b477a1e645ff6" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>AppendIconTextColumn</name></member>
      <member refid="classwx_data_view_ctrl_1a0093ea8efcee16d0d4d81a929a251775" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>AppendIconTextColumn</name></member>
      <member refid="classwx_data_view_ctrl_1ae2cd84628a4df6ce7723774115e1b2c3" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>AppendProgressColumn</name></member>
      <member refid="classwx_data_view_ctrl_1a0d7f8f8369efd8ae574001db0ef09e08" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>AppendProgressColumn</name></member>
      <member refid="classwx_data_view_ctrl_1aa5102491ec5dc8f29fd6ca3a3f9f5219" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>AppendTextColumn</name></member>
      <member refid="classwx_data_view_ctrl_1a98a01c0dcc31d2f907c181bd82e0317f" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>AppendTextColumn</name></member>
      <member refid="classwx_data_view_ctrl_1a6d84e3146baa4499566a548653a77541" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>AppendToggleColumn</name></member>
      <member refid="classwx_data_view_ctrl_1a0c1c0e9a9ffdcea37e3d472f624e45a0" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>AppendToggleColumn</name></member>
      <member refid="classwx_data_view_ctrl_1af4b6c168d14814d69875c42ed960108b" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>AssociateModel</name></member>
      <member refid="classwx_window_1ab4cea6ace96193b5c4282e097a6fbfee" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>BeginRepositioningChildren</name></member>
      <member refid="classwx_evt_handler_1a0f30c8fa5583b4a5f661897d63de3b62" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>Bind</name></member>
      <member refid="classwx_evt_handler_1a03cc68ca201fb79c7e837919025be71a" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>Bind</name></member>
      <member refid="classwx_window_1a11b5d8d94efd0ab52eb2c95a6aa88cdf" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>CacheBestSize</name></member>
      <member refid="classwx_evt_handler_1a63c7351618fd77330d80a250b3719519" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>CallAfter</name></member>
      <member refid="classwx_evt_handler_1a910416e4d0b1f38cec02213b8a0c6a12" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>CallAfter</name></member>
      <member refid="classwx_window_1acc4e456ed056a27ec61cd296b96c1e3e" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>CanAcceptFocus</name></member>
      <member refid="classwx_window_1ade15bb13dc6d51a8e6ecd49eb3f0f99b" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>CanAcceptFocusFromKeyboard</name></member>
      <member refid="classwx_window_1a6b5bbd3bf890f98897187879152ad97a" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>CanScroll</name></member>
      <member refid="classwx_window_1a64f7f6fb75bf4b7281e1d33542d523c7" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>CanSetTransparent</name></member>
      <member refid="classwx_window_1a5c72c6260a73ef77bb0b1f7ec85fcfef" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>CaptureMouse</name></member>
      <member refid="classwx_window_1a06c0ecb262995b40083bfb446a6cff99" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>Center</name></member>
      <member refid="classwx_window_1a2dc4e0a85d33fc55cc9650eaea1da0a4" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>CenterOnParent</name></member>
      <member refid="classwx_window_1a4a1819eeee3f2143cdde4f329ffde787" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>Centre</name></member>
      <member refid="classwx_window_1ab8e9b91b0e2db344fd71259616dfd433" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>CentreOnParent</name></member>
      <member refid="classwx_window_1a61e833684ee5c89775e91e88be1a9a52" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>ClearBackground</name></member>
      <member refid="classwx_data_view_ctrl_1aec752b375a6edb1faecd16dc6c6dfac6" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>ClearColumns</name></member>
      <member refid="classwx_window_1af5e852c8695297c0328f1dfe3908605a" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>ClientToScreen</name></member>
      <member refid="classwx_window_1add6f5472d0d8fe0074145a886568721c" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>ClientToScreen</name></member>
      <member refid="classwx_window_1a5c72ca7de40d4e99aff55e79aad3962e" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>ClientToWindowSize</name></member>
      <member refid="classwx_object_1a436fc8fe68cf8a31000296d9cd3d2427" prot="protected" virt="virtual"><scope>wxDataViewCtrl</scope><name>CloneRefData</name></member>
      <member refid="classwx_window_1a3e44f4a494fc9ef4346c4fba70c8de0c" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>Close</name></member>
      <member refid="classwx_data_view_ctrl_1acec045cc2f40d30893842b8307190574" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>Collapse</name></member>
      <member refid="classwx_control_1a8cd7ac81debaf506d6d146528c3d9a82" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>Command</name></member>
      <member refid="classwx_evt_handler_1a78719e8b82c9f9c6e4056b3449df1943" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>Connect</name></member>
      <member refid="classwx_evt_handler_1a1e8b5fc4c7e7f6d32d40bc00d4108ba4" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>Connect</name></member>
      <member refid="classwx_evt_handler_1aa290d9b67348e74c1da8497955a4e35c" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>Connect</name></member>
      <member refid="classwx_window_1a3dbe034120d742c4f5f6d64dc5d69590" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>ConvertDialogToPixels</name></member>
      <member refid="classwx_window_1ad70d63964459bb21f81bc0b1f09e84f4" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>ConvertDialogToPixels</name></member>
      <member refid="classwx_window_1a321de67666eff37b39556802c8029201" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>ConvertPixelsToDialog</name></member>
      <member refid="classwx_window_1a533552c4673c7a11f05bf9261b4dff5c" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>ConvertPixelsToDialog</name></member>
      <member refid="classwx_data_view_ctrl_1a1bd86d5869de4d24de791a48e9c6926e" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>Create</name></member>
      <member refid="classwx_window_1a95b7ca8faa033f5ab35458887c07bf38" prot="public" virt="non-virtual" ambiguityscope="wxWindow::"><scope>wxDataViewCtrl</scope><name>Create</name></member>
      <member refid="classwx_object_1a3f4f497c65cef611e121c41f21dd5ccc" prot="protected" virt="virtual"><scope>wxDataViewCtrl</scope><name>CreateRefData</name></member>
      <member refid="classwx_data_view_ctrl_1a455cabf8a3faf5f2342626517b988b25" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>DeleteColumn</name></member>
      <member refid="classwx_evt_handler_1a6e7f9cf4ebd0623c1d94979855d096f8" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>DeletePendingEvents</name></member>
      <member refid="classwx_window_1a6bf0c5be864544d9ce0560087667b7fc" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>Destroy</name></member>
      <member refid="classwx_window_1aff47b32c8d42d515ea0bb6a6c2fea917" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>DestroyChildren</name></member>
      <member refid="classwx_window_1a26d7329a9a753fa0445501f01f66c41e" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>Disable</name></member>
      <member refid="classwx_evt_handler_1a13061cf0ed01ac10a804ac057ef4bdbc" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>Disconnect</name></member>
      <member refid="classwx_evt_handler_1a2f171e19444b9c4034c5e11f24fa9c91" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>Disconnect</name></member>
      <member refid="classwx_evt_handler_1a16a6f823853e4b74b43dd9a2cf3abee6" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>Disconnect</name></member>
      <member refid="classwx_window_1a2d10b472a4962d1c852c83d55252c44b" prot="protected" virt="virtual"><scope>wxDataViewCtrl</scope><name>DoCentre</name></member>
      <member refid="classwx_window_1ae07ab0b5cabb750f4e396b6c95e4abf7" prot="protected" virt="virtual"><scope>wxDataViewCtrl</scope><name>DoGetBestClientHeight</name></member>
      <member refid="classwx_window_1a68f3ec28a29b2a514b20c3e80255d82e" prot="protected" virt="virtual"><scope>wxDataViewCtrl</scope><name>DoGetBestClientSize</name></member>
      <member refid="classwx_window_1ac68cb9912dc456e2faa8c745b2437b75" prot="protected" virt="virtual"><scope>wxDataViewCtrl</scope><name>DoGetBestClientWidth</name></member>
      <member refid="classwx_window_1aac6408f1814dce3f8332cc69fe5104f1" prot="protected" virt="virtual"><scope>wxDataViewCtrl</scope><name>DoGetBestSize</name></member>
      <member refid="classwx_window_1ae8a84a80645e99f4d24a22e5c386f626" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>DoUpdateWindowUI</name></member>
      <member refid="classwx_window_1a7e7015bc61bd79b6821d2dccaecf9eda" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>DragAcceptFiles</name></member>
      <member refid="classwx_data_view_ctrl_1a546fd8f32823ea2587ebaffbce984ce0" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>EditItem</name></member>
      <member refid="classwx_control_1a0bb834cae2a8986aceddb89f84ef4ed1" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>Ellipsize</name></member>
      <member refid="classwx_window_1a4e933aa891f42fbb3b87438057c573af" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>Enable</name></member>
      <member refid="classwx_data_view_ctrl_1ac5af3c3fc5990c7b4e3de87cc1087c96" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>EnableDragSource</name></member>
      <member refid="classwx_data_view_ctrl_1a21adea3c4878bd10ab3e5b225c547b72" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>EnableDropTarget</name></member>
      <member refid="classwx_window_1a1203fbd238d781253b44e0e459532301" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>EndRepositioningChildren</name></member>
      <member refid="classwx_data_view_ctrl_1a892b67293dfc764d053fd764266c4326" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>EnsureVisible</name></member>
      <member refid="classwx_control_1abdbd9c0684856546671e759dd95b23d4" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>EscapeMnemonics</name></member>
      <member refid="classwx_data_view_ctrl_1af1c473d9f4ef898be667873f8b562dd7" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>Expand</name></member>
      <member refid="classwx_data_view_ctrl_1ab5d764f5b29160cf670e0fcca37d92ce" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>ExpandAncestors</name></member>
      <member refid="classwx_window_1a777258379a3eef1b0530f12db6b77cab" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>FindFocus</name></member>
      <member refid="classwx_window_1a619b5743645b86054aa3fff12ba4c7ce" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>FindWindow</name></member>
      <member refid="classwx_window_1a3b2f2c9b6346bdb3dcba0edfd9a7f224" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>FindWindow</name></member>
      <member refid="classwx_window_1a101201b12ccd5fba49fa06ed19b5c6fb" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>FindWindowById</name></member>
      <member refid="classwx_window_1ab8eb148fffae109e0fac86e88d569670" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>FindWindowByLabel</name></member>
      <member refid="classwx_window_1adbe4eea02f615313c12a2c00557a44c3" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>FindWindowByName</name></member>
      <member refid="classwx_window_1a2bf38a6cbd1f82fb46f274396f482994" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>Fit</name></member>
      <member refid="classwx_window_1a55aca401aab29d59f7cc53f89ba2e38d" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>FitInside</name></member>
      <member refid="classwx_window_1a15c678314cfc1d807196bc298b713ed3" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>Freeze</name></member>
      <member refid="classwx_window_1aefc02d7275010ebb8d5b66569e7287c4" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>GetAcceleratorTable</name></member>
      <member refid="classwx_window_1ae0469b554e9c501b356b3ed4b6d8a3af" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>GetAccessible</name></member>
      <member refid="classwx_window_1a64e3f936ab812d24966827ea4e0f15c0" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>GetAutoLayout</name></member>
      <member refid="classwx_window_1af51668ec32e9e44db45574a15ec215b4" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>GetBackgroundColour</name></member>
      <member refid="classwx_window_1a4f09e6a20858a0667df3dda44715d6b9" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>GetBackgroundStyle</name></member>
      <member refid="classwx_window_1a9ec151255cbb44935136d9bbff31a082" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>GetBestHeight</name></member>
      <member refid="classwx_window_1ae507a81d682023383e465d8e913595b6" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>GetBestSize</name></member>
      <member refid="classwx_window_1a1e4b09c35c0e5495905da45c1580709d" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>GetBestVirtualSize</name></member>
      <member refid="classwx_window_1a5c797a38418a6f2fb79f800112ec73b0" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>GetBestWidth</name></member>
      <member refid="classwx_window_1a42908ba076f2a93ee81201dc151c3b23" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>GetBorder</name></member>
      <member refid="classwx_window_1a94e3a0ce6c1aae57562678996adbf2fd" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>GetBorder</name></member>
      <member refid="classwx_window_1a483d3f73925bd38c3964dad058672f0a" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>GetCapture</name></member>
      <member refid="classwx_window_1a2ee3eba6dbfb37944ed0ce03383bfc34" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>GetCaret</name></member>
      <member refid="classwx_window_1aa488520238094f858bea3c3a2c6b9809" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>GetCharHeight</name></member>
      <member refid="classwx_window_1a8f92c15635a44b85392d16f5906c31ef" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>GetCharWidth</name></member>
      <member refid="classwx_window_1ad500085ad0511879b5e018706c91a494" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>GetChildren</name></member>
      <member refid="classwx_window_1afcd1cf1f16e375d00b8d0885997adc90" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>GetChildren</name></member>
      <member refid="classwx_window_1a170d85e4aa0cbacbfcdd0728120e1417" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>GetClassDefaultAttributes</name></member>
      <member refid="classwx_object_1ae6d365f2556b26767ced8410c5e839d0" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>GetClassInfo</name></member>
      <member refid="classwx_window_1a4a1b567002d1039bc630885fc09808ae" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>GetClientAreaOrigin</name></member>
      <member refid="classwx_evt_handler_1a291bc92c1bea8abfff276a8e333d46db" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>GetClientData</name></member>
      <member refid="classwx_evt_handler_1a371742bda1686e82065f3a1f2acb31c8" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>GetClientObject</name></member>
      <member refid="classwx_window_1a5c6428c6aa8634b5c5963d1d0eaa75c7" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>GetClientRect</name></member>
      <member refid="classwx_window_1ad34d4bbd6d3064aa56e7a2cc3ee97be3" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>GetClientSize</name></member>
      <member refid="classwx_window_1a13d04f24ab78611f895bc40776118e90" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>GetClientSize</name></member>
      <member refid="classwx_data_view_ctrl_1ab9952638d23522f44a560ea60ed3a121" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>GetColumn</name></member>
      <member refid="classwx_data_view_ctrl_1aaa91e084fcd744360960d82dc8a0969d" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>GetColumnCount</name></member>
      <member refid="classwx_data_view_ctrl_1a371aec8f2646787e0682dbcd248257d7" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>GetColumnPosition</name></member>
      <member refid="classwx_window_1ade068146db3eea2adcde2533de17473b" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>GetConstraints</name></member>
      <member refid="classwx_window_1aec50a3057efbfb35ad16f433603f6f00" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>GetContainingSizer</name></member>
      <member refid="classwx_window_1a7070700104b0f739260a8d803c64e0e1" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>GetContentScaleFactor</name></member>
      <member refid="classwx_data_view_ctrl_1a421bd88d1f01770be205be92eb739d78" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>GetCurrentColumn</name></member>
      <member refid="classwx_data_view_ctrl_1afa975760a8ac2ba000861e8a6a3bd98c" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>GetCurrentItem</name></member>
      <member refid="classwx_window_1aa467591bdb0ae14a625045553e62a120" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>GetCursor</name></member>
      <member refid="classwx_window_1a377de92ac032b60a9241fab88efdbf11" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>GetDefaultAttributes</name></member>
      <member refid="classwx_window_1ae4bec3096f7e13eec8a537aa24cd6112" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>GetDropTarget</name></member>
      <member refid="classwx_window_1aa88f6c4946d1ae4821aca652efbf7c62" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>GetEffectiveMinSize</name></member>
      <member refid="classwx_window_1ad54b0c1662006da89d7e5bf8a64f93eb" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>GetEventHandler</name></member>
      <member refid="classwx_evt_handler_1a7742d81c5eb7849a0ad75b9de8575153" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>GetEvtHandlerEnabled</name></member>
      <member refid="classwx_data_view_ctrl_1a3dfe39f764eaf0d3ef6e8e8e31b709a4" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>GetExpanderColumn</name></member>
      <member refid="classwx_window_1a0db5cd18ab5166b44da9d07f92bb5070" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>GetExtraStyle</name></member>
      <member refid="classwx_window_1af25f8a799106d61b50d3ee796ba43728" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>GetFont</name></member>
      <member refid="classwx_window_1ad9a607b86d9175d395f245ecbe00f38b" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>GetForegroundColour</name></member>
      <member refid="classwx_window_1abe0d47e5d63394b098bdad64eb1a60d2" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>GetGrandParent</name></member>
      <member refid="classwx_window_1a108426e918ac377fef17662885a7a459" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>GetHandle</name></member>
      <member refid="classwx_window_1acb28971fe25abd1f5c6d768e203a042a" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>GetHelpText</name></member>
      <member refid="classwx_window_1a7d11a419fede5049d7c12c337e5f5dfc" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>GetHelpTextAtPoint</name></member>
      <member refid="classwx_window_1a79037f68b290bba5811628ec67bf3b24" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>GetId</name></member>
      <member refid="classwx_data_view_ctrl_1ab7e38a0bb67990143b1577c4f4b759b3" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>GetIndent</name></member>
      <member refid="classwx_data_view_ctrl_1aff0f7af39714f5beb5558bd802011ad2" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>GetItemRect</name></member>
      <member refid="classwx_control_1a9d03cd7f44c4bb1722f39fbc7a5d8cbd" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>GetLabel</name></member>
      <member refid="classwx_control_1a4ec6a7ee61553cd1df77d50491cee820" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>GetLabelText</name></member>
      <member refid="classwx_control_1ae892fefe6b88168c158e11e975633665" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>GetLabelText</name></member>
      <member refid="classwx_window_1afafd17cbb5dd6d899b25360255e0bdae" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>GetLayoutDirection</name></member>
      <member refid="classwx_window_1a6690ee82a5a246e070bf0a7dc4bcb5b3" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>GetMaxClientSize</name></member>
      <member refid="classwx_window_1a98bbe53eddb91b508b0082783402d954" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>GetMaxHeight</name></member>
      <member refid="classwx_window_1a107966aa1b2d50107b3b95cf0d7d9901" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>GetMaxSize</name></member>
      <member refid="classwx_window_1afde7288b24e48f2d0b5d2c7376f10426" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>GetMaxWidth</name></member>
      <member refid="classwx_window_1a24d22aacd834cbe6cd5b252fa91c3bd9" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>GetMinClientSize</name></member>
      <member refid="classwx_window_1a81bfd762272d33850c0511d65d896ca3" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>GetMinHeight</name></member>
      <member refid="classwx_window_1a90ce6ffc8e0af7476157c9e1e6b616df" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>GetMinSize</name></member>
      <member refid="classwx_window_1a327e1a8054d604a34cc5473a8c415e4d" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>GetMinWidth</name></member>
      <member refid="classwx_data_view_ctrl_1ac2ae1807a43670e9f6b20dc5f15f389b" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>GetModel</name></member>
      <member refid="classwx_window_1a93b9ec7d9eaf152c17f3bf2698551ef4" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>GetName</name></member>
      <member refid="classwx_evt_handler_1addedbed1c9f970c2b1e2893a42805b6a" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>GetNextHandler</name></member>
      <member refid="classwx_window_1ad256ad684063935d897956a87c932b38" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>GetNextSibling</name></member>
      <member refid="classwx_window_1a6cd311a6c6ca7329714b969834f679f9" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>GetParent</name></member>
      <member refid="classwx_window_1a9b7de6ea85ca926b668ba0682a61a93e" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>GetPopupMenuSelectionFromUser</name></member>
      <member refid="classwx_window_1a00f5cb3cac003205317a565a33d4bb27" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>GetPopupMenuSelectionFromUser</name></member>
      <member refid="classwx_window_1ac2eece00a4b4b83e1433b59a5d31584f" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>GetPosition</name></member>
      <member refid="classwx_window_1abfeeca6db664c24603f6371811397e0d" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>GetPosition</name></member>
      <member refid="classwx_evt_handler_1a69bfde9623d89eb91e363c53616e4587" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>GetPreviousHandler</name></member>
      <member refid="classwx_window_1a02b3a109f926c86fa1f34a00c1b5ec67" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>GetPrevSibling</name></member>
      <member refid="classwx_window_1a68e83a724887b18525fdbd947b2d8c88" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>GetRect</name></member>
      <member refid="classwx_object_1af3c6c76a775864832f1536d3c0de3a2b" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>GetRefData</name></member>
      <member refid="classwx_window_1a285a81f00ed59fa09938343708938566" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>GetScreenPosition</name></member>
      <member refid="classwx_window_1a5786c420fd2958bde726c923621700aa" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>GetScreenPosition</name></member>
      <member refid="classwx_window_1ae8f6c4a201650ad63bb5ebe4f35eb41e" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>GetScreenRect</name></member>
      <member refid="classwx_window_1add5f4e225e16154f9148451a7d32d0b3" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>GetScrollPos</name></member>
      <member refid="classwx_window_1a23b41cf939ab67a002d8f404ac4cf76b" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>GetScrollRange</name></member>
      <member refid="classwx_window_1ac34f47fef73e3a178e8c335aa38ce567" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>GetScrollThumb</name></member>
      <member refid="classwx_data_view_ctrl_1a9c9b343b463d2bff5201ef6846d65b3b" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>GetSelectedItemsCount</name></member>
      <member refid="classwx_data_view_ctrl_1afca6f3f199c44ae95a63052604c79f1c" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>GetSelection</name></member>
      <member refid="classwx_data_view_ctrl_1a262b359dce1de83570f8bfeeb678b47d" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>GetSelections</name></member>
      <member refid="classwx_window_1a36ea282508dd55d6f3981ec205ed0449" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>GetSize</name></member>
      <member refid="classwx_window_1a36bf1ac809da1b0cd9c67fd806c4d9b5" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>GetSize</name></member>
      <member refid="classwx_control_1a252c7408d6dfa8d70e8dbe88cea9695d" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>GetSizeFromTextSize</name></member>
      <member refid="classwx_control_1a4d9169af074418aa3528f7b5fca61f94" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>GetSizeFromTextSize</name></member>
      <member refid="classwx_window_1a01e9d43576615166ee309f4358bdd26d" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>GetSizer</name></member>
      <member refid="classwx_data_view_ctrl_1a3a436ec0a1e7fad033914962d78c0190" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>GetSortingColumn</name></member>
      <member refid="classwx_window_1a4220668e42f3a173bf29d335da4db2c3" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>GetTextExtent</name></member>
      <member refid="classwx_window_1a69fc79069821a633eba9c5d917fd8b7b" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>GetTextExtent</name></member>
      <member refid="classwx_window_1a578145344f92cfee755a9c87f6703432" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>GetThemeEnabled</name></member>
      <member refid="classwx_window_1a44eecb46979b528c184e26ce6c52b3fa" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>GetToolTip</name></member>
      <member refid="classwx_window_1a7e7c9a92f9efbb47073704646db1344e" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>GetToolTipText</name></member>
      <member refid="classwx_window_1a23370688a951ed60ac25146af854d2ec" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>GetUpdateClientRect</name></member>
      <member refid="classwx_window_1a522f73fd32e54b11466284acc43f76f3" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>GetUpdateRegion</name></member>
      <member refid="classwx_window_1a6a332586346cb9ece4a8fe058a7b88c4" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>GetValidator</name></member>
      <member refid="classwx_window_1a557f92e6c66b6654c95315d4461d0e11" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>GetVirtualSize</name></member>
      <member refid="classwx_window_1a24cefbb69173899ec4d62460b2932ed9" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>GetVirtualSize</name></member>
      <member refid="classwx_window_1a21c97d5bcf61c4c664bd33066f5567b1" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>GetWindowBorderSize</name></member>
      <member refid="classwx_window_1a418007123fec131b47d9841ac6d34891" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>GetWindowStyle</name></member>
      <member refid="classwx_window_1ad67a731cd937a21e561593d4a0c44979" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>GetWindowStyleFlag</name></member>
      <member refid="classwx_window_1a9027305e391de617259407f2c12a54bf" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>GetWindowVariant</name></member>
      <member refid="classwx_window_1a89d1b079de97aac170e999692095872c" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>HandleAsNavigationKey</name></member>
      <member refid="classwx_window_1a89816f1b78c125c59418463caea35c9a" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>HandleWindowEvent</name></member>
      <member refid="classwx_window_1a41e1b77ac82c7420d34b8030d5f26046" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>HasCapture</name></member>
      <member refid="classwx_window_1aeee5333e672a3a510db48d2af37ddee9" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>HasExtraStyle</name></member>
      <member refid="classwx_window_1a3d1d00b4cd51fa3c187e9d609d022aa4" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>HasFlag</name></member>
      <member refid="classwx_window_1adaf042744bdbb8a5f9feccbe7749468a" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>HasFocus</name></member>
      <member refid="classwx_window_1a55c7b73596f2eec2694e8f512013ee81" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>HasMultiplePages</name></member>
      <member refid="classwx_window_1ae50c259b165d9366729734bc124cf184" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>HasScrollbar</name></member>
      <member refid="classwx_data_view_ctrl_1a22810354b766bfcdd2cdb2adbd19fb60" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>HasSelection</name></member>
      <member refid="classwx_window_1ab9cbcb6d6f4a272c2f0342e69a13b59a" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>HasTransparentBackground</name></member>
      <member refid="classwx_window_1a7ed103df04014cb3c59c6a3fb4d95328" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>Hide</name></member>
      <member refid="classwx_window_1a5326fbb26557a224507a1c06e5640e89" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>HideWithEffect</name></member>
      <member refid="classwx_data_view_ctrl_1a986d43641872b4885c13d72df35de442" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>HitTest</name></member>
      <member refid="classwx_window_1ae8705e241daca73105921b72326258b5" prot="public" virt="non-virtual" ambiguityscope="wxControl::"><scope>wxDataViewCtrl</scope><name>HitTest</name></member>
      <member refid="classwx_window_1ace65f76df096662bd15722d10c1905c9" prot="public" virt="non-virtual" ambiguityscope="wxControl::"><scope>wxDataViewCtrl</scope><name>HitTest</name></member>
      <member refid="classwx_window_1a9fd5b6520c1b30eb8e82bb5d56bc24c0" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>InformFirstDirection</name></member>
      <member refid="classwx_window_1a6b1bf9e099704e7a493b8c4666b1f7f7" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>InheritAttributes</name></member>
      <member refid="classwx_window_1af05b95cfeed0bee6f44797572367b26e" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>InheritsBackgroundColour</name></member>
      <member refid="classwx_window_1aa90a260c0a835a133043460b7d0024a8" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>InitDialog</name></member>
      <member refid="classwx_data_view_ctrl_1a42128862bfc32b6157290b2257e739a3" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>InsertColumn</name></member>
      <member refid="classwx_window_1ae1b56ca87d8590ee5e576012229a380a" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>InvalidateBestSize</name></member>
      <member refid="classwx_window_1a5fd3fba5d43efb67a834c0483a9c3d0e" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>IsBeingDeleted</name></member>
      <member refid="classwx_window_1ab7f60a0c4acdd832a46aabf0d09cd54a" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>IsDescendant</name></member>
      <member refid="classwx_window_1abe7a8c61796262b517f5e0765374cc2b" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>IsDoubleBuffered</name></member>
      <member refid="classwx_window_1a0c186513884fb2020c6af3c62f0913d2" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>IsEnabled</name></member>
      <member refid="classwx_data_view_ctrl_1a79a0b51f58bf4d02b3920b3e73d67d66" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>IsExpanded</name></member>
      <member refid="classwx_window_1a687120c4b7095481bbc6d483187d0c56" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>IsExposed</name></member>
      <member refid="classwx_window_1afde1844b856787b95afbb686aaaa206d" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>IsExposed</name></member>
      <member refid="classwx_window_1a3017e9cdde376d567ee37b2a96913eca" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>IsExposed</name></member>
      <member refid="classwx_window_1ac4653d89376b9e88afbec8c342d32530" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>IsExposed</name></member>
      <member refid="classwx_window_1ad78eb073c4fe8271caa4c65301a24ee2" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>IsFocusable</name></member>
      <member refid="classwx_window_1adf34f121a9a94fd7159a8818355f2b67" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>IsFrozen</name></member>
      <member refid="classwx_object_1a3c7115ef4132dcee0c4fc34e84d7fced" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>IsKindOf</name></member>
      <member refid="classwx_window_1a77443cb35d15b5006b96a8c5ea0944f6" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>IsRetained</name></member>
      <member refid="classwx_object_1a059373c494c2369d7db2a556efef8ecf" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>IsSameAs</name></member>
      <member refid="classwx_window_1abf4f5068ebf648197ed9ca8ca58f38df" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>IsScrollbarAlwaysShown</name></member>
      <member refid="classwx_data_view_ctrl_1a517876b596c387a2837cdd6b1b9bcd89" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>IsSelected</name></member>
      <member refid="classwx_window_1ad3544f9c364b7952ac0676217e400061" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>IsShown</name></member>
      <member refid="classwx_window_1ac2722709783e89e76b2eeb7f9f93236a" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>IsShownOnScreen</name></member>
      <member refid="classwx_window_1a1c6a83e5421bb7cfb8a9ad804d251b65" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>IsThisEnabled</name></member>
      <member refid="classwx_window_1afe04dba2155b58429d6c4e0a5a5e1664" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>IsTopLevel</name></member>
      <member refid="classwx_window_1a21c6e2be327062520d9d0aae55b1e8b0" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>IsTransparentBackgroundSupported</name></member>
      <member refid="classwx_evt_handler_1ac0734578a8d929b8b0be440ce0b53ad6" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>IsUnlinked</name></member>
      <member refid="classwx_window_1a1b143c3e72bd0af533b76db4830a6113" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>Layout</name></member>
      <member refid="classwx_window_1ade808784f0e64d9985e2f279b5ca8c02" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>LineDown</name></member>
      <member refid="classwx_window_1afc0816a174ceee6d36d1995c6824a273" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>LineUp</name></member>
      <member refid="classwx_window_1a124944524f36b71385dad8fddaad8ded" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>Lower</name></member>
      <member refid="classwx_object_1a9e31954530a0abd54982effc443ed2b8" prot="protected" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>m_refData</name></member>
      <member refid="classwx_window_1ab1cb98c8d25b9e6ff7b706b1446c3df7" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>Move</name></member>
      <member refid="classwx_window_1a22a22c1e23ca05776707e7999d8047fe" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>Move</name></member>
      <member refid="classwx_window_1a79e66079125e8420de269811bdb6f2b6" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>MoveAfterInTabOrder</name></member>
      <member refid="classwx_window_1af2b92f61cd9f9e2e0efe4cce307e25b1" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>MoveBeforeInTabOrder</name></member>
      <member refid="classwx_window_1a86904f6785df4af6036b33383490a805" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>Navigate</name></member>
      <member refid="classwx_window_1aa58039c8fc65e19160becf510ee1d1d5" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>NavigateIn</name></member>
      <member refid="classwx_window_1a8175da594e6045635a1d1cfe775cdddb" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>NewControlId</name></member>
      <member refid="classwx_window_1a6b5654c0c6c6245d592c279521f7099c" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>OnInternalIdle</name></member>
      <member refid="classwx_object_1a07b8f34f5afc5743195c5fed052f55d3" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>operator delete</name></member>
      <member refid="classwx_object_1a96fa423a1dbc212c8227a5d83825971f" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>operator new</name></member>
      <member refid="classwx_window_1a61e78cb48ece3e9e989e37b475ac1e35" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>PageDown</name></member>
      <member refid="classwx_window_1aa7c2bbc480d8863d9f139c01d7abc1b1" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>PageUp</name></member>
      <member refid="classwx_window_1ac45c1f4cf96c70779764c14cf528790b" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>PopEventHandler</name></member>
      <member refid="classwx_window_1a8f715d238cf74a845488b0e2645e98df" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>PopupMenu</name></member>
      <member refid="classwx_window_1a834bcdfd41f5e5370ebd9ea401c92900" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>PopupMenu</name></member>
      <member refid="classwx_window_1ab1943463e6661f97e072b43337c6cc09" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>PostSizeEvent</name></member>
      <member refid="classwx_window_1aa080d8dcda58bcc6ea2abd8bea592e3e" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>PostSizeEventToParent</name></member>
      <member refid="classwx_data_view_ctrl_1a1b3676f1a51a3ce15fb6153a78c9d1e0" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>PrependBitmapColumn</name></member>
      <member refid="classwx_data_view_ctrl_1a5ebe472b090b3074ae5c1a869f249af6" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>PrependBitmapColumn</name></member>
      <member refid="classwx_data_view_ctrl_1a86ad5d9d32244f14fb6d6fc447f95fbc" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>PrependColumn</name></member>
      <member refid="classwx_data_view_ctrl_1a29c3041e87a4197406e9518a9929568e" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>PrependDateColumn</name></member>
      <member refid="classwx_data_view_ctrl_1a88bed68dfe2425fb3920bcf2f0983428" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>PrependDateColumn</name></member>
      <member refid="classwx_data_view_ctrl_1ab0b8be6b91b621593bb47134c30f7ef2" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>PrependIconTextColumn</name></member>
      <member refid="classwx_data_view_ctrl_1a17b6a80483169dc642dacd8096b32809" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>PrependIconTextColumn</name></member>
      <member refid="classwx_data_view_ctrl_1a896be8a69bedb71f880447c39c84c694" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>PrependProgressColumn</name></member>
      <member refid="classwx_data_view_ctrl_1aa121eb9bf84608dac48b5f7dfe9b87b1" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>PrependProgressColumn</name></member>
      <member refid="classwx_data_view_ctrl_1a0fe50ca4bae834afc85bd135a8b2ec31" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>PrependTextColumn</name></member>
      <member refid="classwx_data_view_ctrl_1a1a92716275d7fffb5af6ff4e57ef4075" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>PrependTextColumn</name></member>
      <member refid="classwx_data_view_ctrl_1a9429e072fb57955efe4b3e0673fa186f" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>PrependToggleColumn</name></member>
      <member refid="classwx_data_view_ctrl_1a1c7412289a589a354c4a78afe6b9ef6f" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>PrependToggleColumn</name></member>
      <member refid="classwx_window_1a5ebdbd87c28644149a07f1742996df96" prot="protected" virt="virtual"><scope>wxDataViewCtrl</scope><name>ProcessEvent</name></member>
      <member refid="classwx_evt_handler_1ac0f5d2cb29a04c1f7f82eb6b351f79fb" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>ProcessEventLocally</name></member>
      <member refid="classwx_window_1a7cbee38944dab02d753a4dba74230443" prot="protected" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>ProcessPendingEvents</name></member>
      <member refid="classwx_window_1a9350b3a9c2e380707eaea92cedad12a5" prot="protected" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>ProcessThreadEvent</name></member>
      <member refid="classwx_window_1a0a76891d726ad5f9a729e27e4eab2b57" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>ProcessWindowEvent</name></member>
      <member refid="classwx_window_1a0a11aa4a50491d051f947e2618e52178" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>ProcessWindowEventLocally</name></member>
      <member refid="classwx_window_1a398c11ab9af7956067a964f560d1978c" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>PushEventHandler</name></member>
      <member refid="classwx_window_1a69e450f21b0d7013269ec1a4771f043b" prot="protected" virt="virtual"><scope>wxDataViewCtrl</scope><name>QueueEvent</name></member>
      <member refid="classwx_window_1a54808c933f22a891c5db646f6209fa4d" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>Raise</name></member>
      <member refid="classwx_object_1a2f6f1aa51fe9fc2b1415ca4211a90e9e" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>Ref</name></member>
      <member refid="classwx_window_1a29dc7251746154c821b17841b9877830" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>Refresh</name></member>
      <member refid="classwx_window_1ab0ae6b9898cd261c39ebeb2891aa3d67" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>RefreshRect</name></member>
      <member refid="classwx_window_1a53ca57872dac5851ea6ba55a494b899b" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>RegisterHotKey</name></member>
      <member refid="classwx_window_1adcc538819c11ecb3bd3e4e5d13c5ba7a" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>ReleaseMouse</name></member>
      <member refid="classwx_window_1acee332ed4368d26e8bc3db5767c1240a" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>RemoveChild</name></member>
      <member refid="classwx_window_1aacbfe424fa527966b954229a1db96ab5" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>RemoveEventHandler</name></member>
      <member refid="classwx_evt_handler_1a67a57b759c447b121bf70a7c9804c8f2" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>RemoveFilter</name></member>
      <member refid="classwx_control_1ab7df4ca0dfde3a6409833cf470ee02e6" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>RemoveMnemonics</name></member>
      <member refid="classwx_window_1a7977b749284e65aecfed2ce146799cb9" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>Reparent</name></member>
      <member refid="classwx_window_1a0f9814efc50316b4c57b7ec2bf78b716" prot="protected" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>SafelyProcessEvent</name></member>
      <member refid="classwx_window_1a09aca554d41d6e771d3dc72f26b9cacc" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>ScreenToClient</name></member>
      <member refid="classwx_window_1a5f4dab599fda780823841bb2fe5f2f99" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>ScreenToClient</name></member>
      <member refid="classwx_window_1aa5c5b683bd11a0d9771bd2fcdf643c64" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>ScrollLines</name></member>
      <member refid="classwx_window_1adc0ed5e1c4925223cb901ced14b8343d" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>ScrollPages</name></member>
      <member refid="classwx_window_1ab7be4956ff22da37fff2b8aaa581045c" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>ScrollWindow</name></member>
      <member refid="classwx_evt_handler_1a3c07426130d2868a5ae7fa918a251f49" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>SearchEventTable</name></member>
      <member refid="classwx_data_view_ctrl_1a3efbccfcaeacd81e1d33745333b4118f" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>Select</name></member>
      <member refid="classwx_data_view_ctrl_1a2731ddd9f9f0915b69beac95574ed348" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>SelectAll</name></member>
      <member refid="classwx_window_1a7e21eb6a0819281b29134a6432d064fe" prot="protected" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>SendDestroyEvent</name></member>
      <member refid="classwx_window_1a1afc1653413957537073c074dcc3eade" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>SendIdleEvents</name></member>
      <member refid="classwx_window_1a237f739b21937d3e8f1bff5fa82ba4c2" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>SendSizeEvent</name></member>
      <member refid="classwx_window_1af7987987978fd8a93df88b29b19a6388" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>SendSizeEventToParent</name></member>
      <member refid="classwx_window_1a0af5e9aa4dee6a4e92c0700f92605642" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>SetAcceleratorTable</name></member>
      <member refid="classwx_window_1a413220ead41f05a2ec2cfe10b3d573df" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>SetAccessible</name></member>
      <member refid="classwx_window_1ad369fe1db5c20f9d9edff7b5eb1f7226" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>SetAutoLayout</name></member>
      <member refid="classwx_window_1a37219df52734626e23401fd83b25d8a0" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>SetBackgroundColour</name></member>
      <member refid="classwx_window_1af14f8fd2ed2d30a9bbb5d4f9fd6594ec" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>SetBackgroundStyle</name></member>
      <member refid="classwx_window_1a2b8b2e99231a0ec1a05f5066f1b7f3d8" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>SetCanFocus</name></member>
      <member refid="classwx_window_1acfef5e1cada92c73e2937b84ff57ff57" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>SetCaret</name></member>
      <member refid="classwx_evt_handler_1a82c74f2cebfa02cb3c1563d459c872bf" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>SetClientData</name></member>
      <member refid="classwx_evt_handler_1af1e33a06087b8b2ddc43c7d15a91b326" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>SetClientObject</name></member>
      <member refid="classwx_window_1aa59f715217fffa5bcf14cd97f92e7840" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>SetClientSize</name></member>
      <member refid="classwx_window_1ab2aadc857ee7f55f47ab9a8669e3beb7" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>SetClientSize</name></member>
      <member refid="classwx_window_1a582d4d1f60a3f777627773b2da0bb2ef" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>SetClientSize</name></member>
      <member refid="classwx_window_1afa75d111bbd9a68f837101a5fbed60a7" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>SetConstraints</name></member>
      <member refid="classwx_window_1a0ccf78fe06722b500adfb7f36b8ce443" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>SetContainingSizer</name></member>
      <member refid="classwx_data_view_ctrl_1a4cc4e7a506afcb1b646927bd91727ac6" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>SetCurrentItem</name></member>
      <member refid="classwx_window_1ad83f9c51c6f31e0e05f598b47a19ed98" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>SetCursor</name></member>
      <member refid="classwx_window_1a5477a89c17fdcc3ec6c90274796eb1c3" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>SetDoubleBuffered</name></member>
      <member refid="classwx_window_1ae34b4d45433ca8287df0e47d46411e58" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>SetDropTarget</name></member>
      <member refid="classwx_window_1af6c84b7679183b377ba27a52a2f708b4" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>SetEventHandler</name></member>
      <member refid="classwx_evt_handler_1a7388ae19c8657e5656471b658c320036" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>SetEvtHandlerEnabled</name></member>
      <member refid="classwx_data_view_ctrl_1a1dbbf7975e765e783a4c6e2fde7a4115" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>SetExpanderColumn</name></member>
      <member refid="classwx_window_1ae9655f7c35ce7ac89cac2f6c0054b103" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>SetExtraStyle</name></member>
      <member refid="classwx_window_1a697f9f8d3ff389790f1c74b59bcb1d75" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>SetFocus</name></member>
      <member refid="classwx_window_1a6fa03f82d7917dff482754d0d2e2b1c8" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>SetFocusFromKbd</name></member>
      <member refid="classwx_window_1a9ab11e7da57a1d08918aa75fc33f6ad3" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>SetFont</name></member>
      <member refid="classwx_window_1a69f1e1c7ddd370d72e68c70f13ac8de9" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>SetForegroundColour</name></member>
      <member refid="classwx_window_1a4c1a2cbc7363237b3a7c70af4e702c72" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>SetHelpText</name></member>
      <member refid="classwx_window_1a7f27d0faed14effa013381bdc40e1bcd" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>SetId</name></member>
      <member refid="classwx_data_view_ctrl_1a595ab054debffe1a3d906e3a748a382e" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>SetIndent</name></member>
      <member refid="classwx_window_1ae6dfe0b0d4a8c666b21ce8df8d96727b" prot="protected" virt="virtual"><scope>wxDataViewCtrl</scope><name>SetInitialBestSize</name></member>
      <member refid="classwx_window_1a1b309ca50ba87e34f968c83b79af1397" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>SetInitialSize</name></member>
      <member refid="classwx_control_1a2c2ae20554e7db5e765f163022ce09c0" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>SetLabel</name></member>
      <member refid="classwx_control_1afeb308dc3b54d8d735b33cb250395503" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>SetLabelMarkup</name></member>
      <member refid="classwx_control_1ae092899c3fe658831a9c796755a65eb7" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>SetLabelText</name></member>
      <member refid="classwx_window_1a7d494549f7fcfed44af95f8ee364c1f9" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>SetLayoutDirection</name></member>
      <member refid="classwx_window_1a664e5b2ddd817d9c58788269fe1d8479" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>SetMaxClientSize</name></member>
      <member refid="classwx_window_1a38b496214d728a3212afadee5ed51606" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>SetMaxSize</name></member>
      <member refid="classwx_window_1a6e35ba44b97e374dfffa460d41d94b31" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>SetMinClientSize</name></member>
      <member refid="classwx_window_1a3fc066f4d8083319f004ac43811d545d" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>SetMinSize</name></member>
      <member refid="classwx_window_1af80875cda5e1af98dcd7c8e712e3c800" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>SetName</name></member>
      <member refid="classwx_window_1aeab905f61df7004c1b76a3351dca9e96" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>SetNextHandler</name></member>
      <member refid="classwx_window_1a9a3f9d8477aab1d9176cd66ee56e75d9" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>SetOwnBackgroundColour</name></member>
      <member refid="classwx_window_1a89a4f62f23c1e7c845b8d07cecae4c43" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>SetOwnFont</name></member>
      <member refid="classwx_window_1a53f4a878e4e2d440bd00543f8014aaaa" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>SetOwnForegroundColour</name></member>
      <member refid="classwx_window_1aee57358435d6bd33f598c81354b47425" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>SetPalette</name></member>
      <member refid="classwx_window_1a81f23590239934fa10fded0566a65d8c" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>SetPosition</name></member>
      <member refid="classwx_window_1a07f5f7ed3f78e0ef7b3dee3f4da81001" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>SetPreviousHandler</name></member>
      <member refid="classwx_object_1afab780710f2adc1bb33310e27590140b" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>SetRefData</name></member>
      <member refid="classwx_data_view_ctrl_1a799a3c56989d986893fae2b0147e9553" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>SetRowHeight</name></member>
      <member refid="classwx_window_1aa842d59529f873683e55cd8392ec46e9" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>SetScrollbar</name></member>
      <member refid="classwx_window_1afbf4dc9064cf70cfe6884554b97a27bf" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>SetScrollPos</name></member>
      <member refid="classwx_data_view_ctrl_1afc2024630264f2bc1c661f7d70624187" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>SetSelections</name></member>
      <member refid="classwx_window_1a180312d5ad4a4a5ad805b8d52d67a74e" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>SetSize</name></member>
      <member refid="classwx_window_1a8e383bc6d5ca008965922a36c676aea0" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>SetSize</name></member>
      <member refid="classwx_window_1a030a928cd854de3def97c5720f14695b" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>SetSize</name></member>
      <member refid="classwx_window_1a2ea9b25296d591aea4470c8fd99ff7cb" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>SetSize</name></member>
      <member refid="classwx_window_1a307329dc3b10f5584aeb2cbce9293ffd" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>SetSizeHints</name></member>
      <member refid="classwx_window_1ae813c640e1e2bc6014423247050846cf" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>SetSizeHints</name></member>
      <member refid="classwx_window_1abc95691b45e29a52c24aa9d33d46dec1" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>SetSizer</name></member>
      <member refid="classwx_window_1a29938af9828fd35da666536cdfb6b73c" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>SetSizerAndFit</name></member>
      <member refid="classwx_window_1a41dd19ed8809fd8ec662e2aa2a9579c3" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>SetThemeEnabled</name></member>
      <member refid="classwx_window_1a81a9fb74e3c6c7f4416e882f5e589b8c" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>SetToolTip</name></member>
      <member refid="classwx_window_1a494e0b7cfca9299caa40e847767e7357" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>SetToolTip</name></member>
      <member refid="classwx_window_1ac8cf4398cec50ac36634760f45a0656f" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>SetTransparent</name></member>
      <member refid="classwx_window_1a00066c70049a7be3ce6b648d206e6432" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>SetValidator</name></member>
      <member refid="classwx_window_1a37f293b7904bc6668b86cccb0aea5669" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>SetVirtualSize</name></member>
      <member refid="classwx_window_1a8e95201edebe43b9623bd3bdc555af4d" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>SetVirtualSize</name></member>
      <member refid="classwx_window_1a306af30adec68689f74ed537b4f9d5fd" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>SetWindowStyle</name></member>
      <member refid="classwx_window_1aee2cf342f80523432e7f2299d299451b" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>SetWindowStyleFlag</name></member>
      <member refid="classwx_window_1acd955418c336e73b3e32cadf1ca46e29" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>SetWindowVariant</name></member>
      <member refid="classwx_window_1aa51b169745cda1746c1a45b4ffe3217a" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>ShouldInheritColours</name></member>
      <member refid="classwx_window_1a7fbc92ce240a8d4f6956b6e0276ef07f" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>Show</name></member>
      <member refid="classwx_window_1a596b1715edfc7609f352b2e000ecbaec" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>ShowWithEffect</name></member>
      <member refid="classwx_window_1a279a532124073261b28131b6afb59a1e" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>Thaw</name></member>
      <member refid="classwx_window_1a8a4fa47129de552bfec37db8c69688a2" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>ToggleWindowStyle</name></member>
      <member refid="classwx_window_1ab8e51f36e7d8790b361c8d8c6f37b1ad" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>TransferDataFromWindow</name></member>
      <member refid="classwx_window_1a88cc65e424a129d9b0057756cdb67ec9" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>TransferDataToWindow</name></member>
      <member refid="classwx_evt_handler_1a5e25fece1cb6cbc11fd1d41ec140319c" prot="protected" virt="virtual"><scope>wxDataViewCtrl</scope><name>TryAfter</name></member>
      <member refid="classwx_evt_handler_1ad4b0eac704dd005ac6a88fdb1e673c13" prot="protected" virt="virtual"><scope>wxDataViewCtrl</scope><name>TryBefore</name></member>
      <member refid="classwx_evt_handler_1a2b7df8272075a96daea78cdd799c00da" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>Unbind</name></member>
      <member refid="classwx_evt_handler_1aa49f9c4ad4462456b4fe4bd1ab53533d" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>Unbind</name></member>
      <member refid="classwx_evt_handler_1a22e5db2ec1d19c8252c056fd116975d7" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>Unlink</name></member>
      <member refid="classwx_object_1af51efc6b1ae632fc7f0cd7ebbce9fa36" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>UnRef</name></member>
      <member refid="classwx_window_1a695f60d65f8f6c12e3c3645ad9c0c35b" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>UnregisterHotKey</name></member>
      <member refid="classwx_window_1ad9bc342d1e38d221e37f0f6396950c8c" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>UnreserveControlId</name></member>
      <member refid="classwx_data_view_ctrl_1a8b5df79c5f0a80981da47b92b7e565ff" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>Unselect</name></member>
      <member refid="classwx_data_view_ctrl_1a62f38a69855fcc8342a15950e6eb1356" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>UnselectAll</name></member>
      <member refid="classwx_window_1ae75712451673658b0a533480bf5eeaa4" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>UnsetToolTip</name></member>
      <member refid="classwx_object_1a74b40e42d19a4b9e9bec0b57d62a5725" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>UnShare</name></member>
      <member refid="classwx_window_1abaf28f1a075fd1b10f761a8febe597ec" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>Update</name></member>
      <member refid="classwx_window_1adf0a4987728bd0bf69f922641b3efbfc" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>UpdateWindowUI</name></member>
      <member refid="classwx_window_1a9131e424ddc3b332a08377e5ad713c60" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>UseBgCol</name></member>
      <member refid="classwx_window_1ac87f253253a0c5eb498871c83afa40fd" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>Validate</name></member>
      <member refid="classwx_window_1ac500152d1eca3a2ee98a68e7ea7372b5" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>WarpPointer</name></member>
      <member refid="classwx_window_1a75e9c29023e441305574056cd5a725ff" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>WindowToClientSize</name></member>
      <member refid="classwx_control_1adb8f3edf807efa9159de826bf92d6a44" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>wxControl</name></member>
      <member refid="classwx_control_1a08428de2ba5cc988a86fe17071d49522" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>wxControl</name></member>
      <member refid="classwx_data_view_ctrl_1a3c912686a7c04b53445e2e1985685a3f" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>wxDataViewCtrl</name></member>
      <member refid="classwx_data_view_ctrl_1a5cc833d3d27d13f5dae7bd2062a55189" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>wxDataViewCtrl</name></member>
      <member refid="classwx_evt_handler_1a3f0166c4154227d05575b01eb2c8d4be" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>wxEvtHandler</name></member>
      <member refid="classwx_object_1acaa378363a28af421ab56ad7b46eadf0" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>wxObject</name></member>
      <member refid="classwx_object_1a4721b4dc9b7aff0f30904ba2ea3954cf" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>wxObject</name></member>
      <member refid="classwx_window_1a695200a4915b934926dcf32afa44544c" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>wxWindow</name></member>
      <member refid="classwx_window_1a7799009b10d1765d1bbb6db4994f922e" prot="public" virt="non-virtual"><scope>wxDataViewCtrl</scope><name>wxWindow</name></member>
      <member refid="classwx_data_view_ctrl_1ad7740c300c45efcaa73dd1092c51b344" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>~wxDataViewCtrl</name></member>
      <member refid="classwx_evt_handler_1a372d2239d91521eddc8fd2715fcab584" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>~wxEvtHandler</name></member>
      <member refid="classwx_object_1a2a51aa8bfbab47ca2f051bcf84b3f35b" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>~wxObject</name></member>
      <member refid="classwx_window_1a0c2a46181a89c349327f0b276f5ef8d7" prot="public" virt="virtual"><scope>wxDataViewCtrl</scope><name>~wxWindow</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
