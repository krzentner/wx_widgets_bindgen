<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classwx_module" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>wxModule</compoundname>
    <basecompoundref refid="classwx_object" prot="public" virt="non-virtual">wxObject</basecompoundref>
    <derivedcompoundref refid="classwx_html_tags_module" prot="public" virt="non-virtual">wxHtmlTagsModule</derivedcompoundref>
    <includes local="no">wx/module.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_module_1a809d6cdaa30552f49154a1fc406bf1f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxModule::wxModule</definition>
        <argsstring>()</argsstring>
        <name>wxModule</name>
        <briefdescription>
<para>Constructs a <ref refid="classwx_module" kindref="compound">wxModule</ref> object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/module.h" line="83" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_module_1a34fc6905b31ae6eaf2052a9b74b2301f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual wxModule::~wxModule</definition>
        <argsstring>()</argsstring>
        <name>~wxModule</name>
        <briefdescription>
<para>Destructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/module.h" line="88" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_module_1ab7615e407981a1ab0dd2b5f0a6f760c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void wxModule::OnExit</definition>
        <argsstring>()=0</argsstring>
        <name>OnExit</name>
        <briefdescription>
<para>Provide this function with appropriate cleanup for your module. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/module.h" line="93" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_module_1a297484b97a61428afecdaae4f8854d99" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool wxModule::OnInit</definition>
        <argsstring>()=0</argsstring>
        <name>OnInit</name>
        <briefdescription>
<para>Provide this function with appropriate initialization for your module. </para>        </briefdescription>
        <detaileddescription>
<para>If the function returns false, wxWidgets will exit immediately. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/module.h" line="99" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classwx_module_1a943494994b76ddaefebf95345c5a05ec" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxModule::AddDependency</definition>
        <argsstring>(wxClassInfo *dep)</argsstring>
        <name>AddDependency</name>
        <param>
          <type><ref refid="classwx_class_info" kindref="compound">wxClassInfo</ref> *</type>
          <declname>dep</declname>
        </param>
        <briefdescription>
<para>Call this function from the constructor of the derived class. </para>        </briefdescription>
        <detaileddescription>
<para><emphasis>dep</emphasis> must be the <ref refid="group__group__funcmacro__rtti_1gacee897a7d4e704e1aa53568220f2396e" kindref="member">wxCLASSINFO()</ref> of a wxModule-derived class and the corresponding module will be loaded before and unloaded after this module.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dep</parametername>
</parameternamelist>
<parameterdescription>
<para>The class information object for the dependent module. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/module.h" line="112" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_module_1aadbdbde333a3c497eedd802ba4c76a0c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxModule::AddDependency</definition>
        <argsstring>(const char *classname)</argsstring>
        <name>AddDependency</name>
        <param>
          <type>const char *</type>
          <declname>classname</declname>
        </param>
        <briefdescription>
<para>Call this function from the constructor of the derived class. </para>        </briefdescription>
        <detaileddescription>
<para>This overload allows a dependency to be added by name without access to the class info.</para><para>This is useful when a module is declared entirely in a source file and there is no header for the declaration of the module needed by <ref refid="group__group__funcmacro__rtti_1gacee897a7d4e704e1aa53568220f2396e" kindref="member">wxCLASSINFO()</ref>, however errors are not detected until run-time, instead of compile-time, then. Note that circular dependencies are detected and result in a fatal error.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>classname</parametername>
</parameternamelist>
<parameterdescription>
<para>The class name of the dependent module. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/module.h" line="128" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The module system is a very simple mechanism to allow applications (and parts of wxWidgets itself) to define initialization and cleanup functions that are automatically called on wxWidgets startup and exit. </para>    </briefdescription>
    <detaileddescription>
<para>To define a new kind of module, derive a class from <ref refid="classwx_module" kindref="compound">wxModule</ref>, override the <ref refid="classwx_module_1a297484b97a61428afecdaae4f8854d99" kindref="member">wxModule::OnInit</ref> and <ref refid="classwx_module_1ab7615e407981a1ab0dd2b5f0a6f760c3" kindref="member">wxModule::OnExit</ref> functions, and add the wxDECLARE_DYNAMIC_CLASS and wxIMPLEMENT_DYNAMIC_CLASS to header and implementation files (which can be the same file). On initialization, wxWidgets will find all classes derived from <ref refid="classwx_module" kindref="compound">wxModule</ref>, create an instance of each, and call each <ref refid="classwx_module_1a297484b97a61428afecdaae4f8854d99" kindref="member">wxModule::OnInit</ref> function. On exit, wxWidgets will call the <ref refid="classwx_module_1ab7615e407981a1ab0dd2b5f0a6f760c3" kindref="member">wxModule::OnExit</ref> function for each module instance.</para><para>Note that your module class does not have to be in a header file.</para><para>For example:</para><para><programlisting><codeline><highlight class="normal"><sp/><sp/>//<sp/>A<sp/>module<sp/>to<sp/>allow<sp/>DDE<sp/>initialization/cleanup</highlight></codeline>
<codeline><highlight class="normal">//<sp/>without<sp/>calling<sp/>these<sp/>functions<sp/>from<sp/>app.cpp<sp/>or<sp/>from</highlight></codeline>
<codeline><highlight class="normal">//<sp/>the<sp/>user&apos;s<sp/>application.</highlight></codeline>
<codeline><highlight class="normal">class<sp/>wxDDEModule:<sp/>public<sp/>wxModule</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal">public:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>wxDDEModule()<sp/>{<sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>virtual<sp/>bool<sp/>OnInit()<sp/>{<sp/>wxDDEInitialize();<sp/>return<sp/>true;<sp/>};</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>virtual<sp/>void<sp/>OnExit()<sp/>{<sp/>wxDDECleanUp();<sp/>};</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">private:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>wxDECLARE_DYNAMIC_CLASS(wxDDEModule);</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">wxIMPLEMENT_DYNAMIC_CLASS(wxDDEModule,<sp/>wxModule);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Another<sp/>module<sp/>which<sp/>uses<sp/>DDE<sp/>in<sp/>its<sp/>OnInit()</highlight></codeline>
<codeline><highlight class="normal">class<sp/>MyModule:<sp/>public<sp/>wxModule</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal">public:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>MyModule()<sp/>{<sp/>AddDependency(wxCLASSINFO(wxDDEModule));<sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>virtual<sp/>bool<sp/>OnInit()<sp/>{<sp/>...<sp/>code<sp/>using<sp/>DDE<sp/>...<sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>virtual<sp/>void<sp/>OnExit()<sp/>{<sp/>...<sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">private:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>wxDECLARE_DYNAMIC_CLASS(MyModule);</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">wxIMPLEMENT_DYNAMIC_CLASS(MyModule,<sp/>wxModule);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Another<sp/>module<sp/>which<sp/>uses<sp/>DDE<sp/>in<sp/>its<sp/>OnInit()</highlight></codeline>
<codeline><highlight class="normal">//<sp/>but<sp/>uses<sp/>a<sp/>named<sp/>dependency</highlight></codeline>
<codeline><highlight class="normal">class<sp/>MyModule2:<sp/>public<sp/>wxModule</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal">public:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>MyModule2()<sp/>{<sp/>AddDependency(&quot;wxDDEModule&quot;);<sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>virtual<sp/>bool<sp/>OnInit()<sp/>{<sp/>...<sp/>code<sp/>using<sp/>DDE<sp/>...<sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>virtual<sp/>void<sp/>OnExit()<sp/>{<sp/>...<sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">private:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>wxDECLARE_DYNAMIC_CLASS(MyModule2)</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">wxIMPLEMENT_DYNAMIC_CLASS(MyModule2,<sp/>wxModule)</highlight></codeline>
</programlisting></para><para><heading level="2"></heading>
</para><para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxbase" kindref="member">wxBase</ref> &lt;&gt;&lt; =&apos;&apos;&gt;:&lt;/&gt;&amp;;&amp;;&lt; =&apos;&apos;&gt;\ &lt;/&gt;&lt;/&gt; </para>    </detaileddescription>
    <inheritancegraph>
      <node id="4281">
        <label>wxObject</label>
        <link refid="classwx_object"/>
      </node>
      <node id="4280">
        <label>wxModule</label>
        <link refid="classwx_module"/>
        <childnode refid="4281" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4282">
        <label>wxHtmlTagsModule</label>
        <link refid="classwx_html_tags_module"/>
        <childnode refid="4280" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4284">
        <label>wxObject</label>
        <link refid="classwx_object"/>
        <childnode refid="4285" relation="usage">
          <edgelabel>m_refData</edgelabel>
        </childnode>
      </node>
      <node id="4283">
        <label>wxModule</label>
        <link refid="classwx_module"/>
        <childnode refid="4284" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4285">
        <label>wxObjectRefData</label>
        <link refid="classwx_object_ref_data"/>
      </node>
    </collaborationgraph>
    <location file="interface/wx/module.h" line="78" column="1" bodyfile="interface/wx/module.h" bodystart="77" bodyend="129"/>
    <listofallmembers>
      <member refid="classwx_module_1a943494994b76ddaefebf95345c5a05ec" prot="protected" virt="non-virtual"><scope>wxModule</scope><name>AddDependency</name></member>
      <member refid="classwx_module_1aadbdbde333a3c497eedd802ba4c76a0c" prot="protected" virt="non-virtual"><scope>wxModule</scope><name>AddDependency</name></member>
      <member refid="classwx_object_1a60204063f3cc3aa2fa1c7ff5bda9eb13" prot="protected" virt="non-virtual"><scope>wxModule</scope><name>AllocExclusive</name></member>
      <member refid="classwx_object_1a436fc8fe68cf8a31000296d9cd3d2427" prot="protected" virt="virtual"><scope>wxModule</scope><name>CloneRefData</name></member>
      <member refid="classwx_object_1a3f4f497c65cef611e121c41f21dd5ccc" prot="protected" virt="virtual"><scope>wxModule</scope><name>CreateRefData</name></member>
      <member refid="classwx_object_1ae6d365f2556b26767ced8410c5e839d0" prot="public" virt="virtual"><scope>wxModule</scope><name>GetClassInfo</name></member>
      <member refid="classwx_object_1af3c6c76a775864832f1536d3c0de3a2b" prot="public" virt="non-virtual"><scope>wxModule</scope><name>GetRefData</name></member>
      <member refid="classwx_object_1a3c7115ef4132dcee0c4fc34e84d7fced" prot="public" virt="non-virtual"><scope>wxModule</scope><name>IsKindOf</name></member>
      <member refid="classwx_object_1a059373c494c2369d7db2a556efef8ecf" prot="public" virt="non-virtual"><scope>wxModule</scope><name>IsSameAs</name></member>
      <member refid="classwx_object_1a9e31954530a0abd54982effc443ed2b8" prot="protected" virt="non-virtual"><scope>wxModule</scope><name>m_refData</name></member>
      <member refid="classwx_module_1ab7615e407981a1ab0dd2b5f0a6f760c3" prot="public" virt="pure-virtual"><scope>wxModule</scope><name>OnExit</name></member>
      <member refid="classwx_module_1a297484b97a61428afecdaae4f8854d99" prot="public" virt="pure-virtual"><scope>wxModule</scope><name>OnInit</name></member>
      <member refid="classwx_object_1a07b8f34f5afc5743195c5fed052f55d3" prot="public" virt="non-virtual"><scope>wxModule</scope><name>operator delete</name></member>
      <member refid="classwx_object_1a96fa423a1dbc212c8227a5d83825971f" prot="public" virt="non-virtual"><scope>wxModule</scope><name>operator new</name></member>
      <member refid="classwx_object_1a2f6f1aa51fe9fc2b1415ca4211a90e9e" prot="public" virt="non-virtual"><scope>wxModule</scope><name>Ref</name></member>
      <member refid="classwx_object_1afab780710f2adc1bb33310e27590140b" prot="public" virt="non-virtual"><scope>wxModule</scope><name>SetRefData</name></member>
      <member refid="classwx_object_1af51efc6b1ae632fc7f0cd7ebbce9fa36" prot="public" virt="non-virtual"><scope>wxModule</scope><name>UnRef</name></member>
      <member refid="classwx_object_1a74b40e42d19a4b9e9bec0b57d62a5725" prot="public" virt="non-virtual"><scope>wxModule</scope><name>UnShare</name></member>
      <member refid="classwx_module_1a809d6cdaa30552f49154a1fc406bf1f4" prot="public" virt="non-virtual"><scope>wxModule</scope><name>wxModule</name></member>
      <member refid="classwx_object_1acaa378363a28af421ab56ad7b46eadf0" prot="public" virt="non-virtual"><scope>wxModule</scope><name>wxObject</name></member>
      <member refid="classwx_object_1a4721b4dc9b7aff0f30904ba2ea3954cf" prot="public" virt="non-virtual"><scope>wxModule</scope><name>wxObject</name></member>
      <member refid="classwx_module_1a34fc6905b31ae6eaf2052a9b74b2301f" prot="public" virt="virtual"><scope>wxModule</scope><name>~wxModule</name></member>
      <member refid="classwx_object_1a2a51aa8bfbab47ca2f051bcf84b3f35b" prot="public" virt="virtual"><scope>wxModule</scope><name>~wxObject</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
