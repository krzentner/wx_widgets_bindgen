<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classwx_mouse_state" kind="class" language="C++" prot="public">
    <compoundname>wxMouseState</compoundname>
    <basecompoundref refid="classwx_keyboard_state" prot="public" virt="non-virtual">wxKeyboardState</basecompoundref>
    <derivedcompoundref refid="classwx_mouse_event" prot="public" virt="non-virtual">wxMouseEvent</derivedcompoundref>
    <includes local="no">wx/mousestate.h</includes>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classwx_mouse_state_1a318d5a329edfd9210f611058546c2b1f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_point" kindref="compound">wxPoint</ref></type>
        <definition>wxPoint wxMouseState::GetPosition</definition>
        <argsstring>() const</argsstring>
        <name>GetPosition</name>
        <briefdescription>
<para>Returns the physical mouse position. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/mousestate.h" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_mouse_state_1a22177c938d6a00e37bbe19c5e5707229" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxMouseState::GetPosition</definition>
        <argsstring>(int *x, int *y) const</argsstring>
        <name>GetPosition</name>
        <param>
          <type>int *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Returns the physical mouse position. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/mousestate.h" line="79" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_mouse_state_1a96a28a4a38917b132ea51bef03955b28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxMouseState::wxMouseState</definition>
        <argsstring>()</argsstring>
        <name>wxMouseState</name>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/mousestate.h" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_mouse_state_1acf5e2001f5b729a50f0d3a8c1cf64b5c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
        <definition>wxCoord wxMouseState::GetX</definition>
        <argsstring>() const</argsstring>
        <name>GetX</name>
        <briefdescription>
<para>Returns X coordinate of the physical mouse event position. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/mousestate.h" line="67" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_mouse_state_1ac41c9e6b32b6f88b4fd729a0480ab4e4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
        <definition>wxCoord wxMouseState::GetY</definition>
        <argsstring>() const</argsstring>
        <name>GetY</name>
        <briefdescription>
<para>Returns Y coordinate of the physical mouse event position. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/mousestate.h" line="72" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_mouse_state_1abc8bd8076822d5183d3946490735af7f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxMouseState::LeftIsDown</definition>
        <argsstring>() const</argsstring>
        <name>LeftIsDown</name>
        <briefdescription>
<para>Returns true if the left mouse button is currently down. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/mousestate.h" line="85" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_mouse_state_1af2021f1d6534fc6e0782c73696149a3b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxMouseState::MiddleIsDown</definition>
        <argsstring>() const</argsstring>
        <name>MiddleIsDown</name>
        <briefdescription>
<para>Returns true if the middle mouse button is currently down. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/mousestate.h" line="90" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_mouse_state_1a3f9d3b85ea8131706d15d160997482e3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxMouseState::RightIsDown</definition>
        <argsstring>() const</argsstring>
        <name>RightIsDown</name>
        <briefdescription>
<para>Returns true if the right mouse button is currently down. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/mousestate.h" line="95" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_mouse_state_1a6a96c76224bca3d45d0c13160389c778" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxMouseState::Aux1IsDown</definition>
        <argsstring>() const</argsstring>
        <name>Aux1IsDown</name>
        <briefdescription>
<para>Returns true if the first extra button mouse button is currently down. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/mousestate.h" line="100" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_mouse_state_1a599e903ea53cfa9da7f5a63f5991475c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxMouseState::Aux2IsDown</definition>
        <argsstring>() const</argsstring>
        <name>Aux2IsDown</name>
        <briefdescription>
<para>Returns true if the second extra button mouse button is currently down. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/mousestate.h" line="105" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_mouse_state_1a095c9989c4fc607295683882f9d94efa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxMouseState::SetX</definition>
        <argsstring>(wxCoord x)</argsstring>
        <name>SetX</name>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/mousestate.h" line="108" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_mouse_state_1ad67621bb4a134ec32c0a5419474714e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxMouseState::SetY</definition>
        <argsstring>(wxCoord y)</argsstring>
        <name>SetY</name>
        <param>
          <type><ref refid="defs_8h_1a11f6efc0e8d8d680f3ec8e82aa4f1770" kindref="member">wxCoord</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/mousestate.h" line="109" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_mouse_state_1a3af09115e9db255f820b54077da51cfc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxMouseState::SetPosition</definition>
        <argsstring>(wxPoint pos)</argsstring>
        <name>SetPosition</name>
        <param>
          <type><ref refid="classwx_point" kindref="compound">wxPoint</ref></type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/mousestate.h" line="110" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_mouse_state_1ab7f0e3c1b439df3069b9ed2438ab3fb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxMouseState::SetLeftDown</definition>
        <argsstring>(bool down)</argsstring>
        <name>SetLeftDown</name>
        <param>
          <type>bool</type>
          <declname>down</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/mousestate.h" line="112" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_mouse_state_1a642c369edc8cc256898684b9ffe47c2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxMouseState::SetMiddleDown</definition>
        <argsstring>(bool down)</argsstring>
        <name>SetMiddleDown</name>
        <param>
          <type>bool</type>
          <declname>down</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/mousestate.h" line="113" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_mouse_state_1a3dcc8691d8b73a015768ec5472346ce9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxMouseState::SetRightDown</definition>
        <argsstring>(bool down)</argsstring>
        <name>SetRightDown</name>
        <param>
          <type>bool</type>
          <declname>down</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/mousestate.h" line="114" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_mouse_state_1a9f87d1187687b2e8d96ea14a93fdc397" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxMouseState::SetAux1Down</definition>
        <argsstring>(bool down)</argsstring>
        <name>SetAux1Down</name>
        <param>
          <type>bool</type>
          <declname>down</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/mousestate.h" line="115" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_mouse_state_1ab0f55cf7fb235c4bb1bcd6dc4fd27cbd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxMouseState::SetAux2Down</definition>
        <argsstring>(bool down)</argsstring>
        <name>SetAux2Down</name>
        <param>
          <type>bool</type>
          <declname>down</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/mousestate.h" line="116" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_mouse_state_1a59d981aa6726c5f7312b558159f25ced" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxMouseState::SetState</definition>
        <argsstring>(const wxMouseState &amp;state)</argsstring>
        <name>SetState</name>
        <param>
          <type>const <ref refid="classwx_mouse_state" kindref="compound">wxMouseState</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/mousestate.h" line="118" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents the mouse state. </para>    </briefdescription>
    <detaileddescription>
<para>This class is used as a base class by <ref refid="classwx_mouse_event" kindref="compound">wxMouseEvent</ref> and so its methods may be used to obtain information about the mouse state for the mouse events. It also inherits from <ref refid="classwx_keyboard_state" kindref="compound">wxKeyboardState</ref> and so carries information about the keyboard state and not only the mouse one.</para><para>This class is implemented entirely inline in &lt;<ref refid="mousestate_8h" kindref="compound">wx/mousestate.h</ref>&gt; and thus has no linking requirements.</para><para><heading level="2"></heading>
</para><para>Library:<nonbreakablespace/><nonbreakablespace/>None; this class implementation is entirely header-based. &lt;&gt;&lt; =&apos;&apos;&gt;:&lt;/&gt;&amp;;&amp;;&lt; =&apos;&apos;&gt;\ &lt;/&gt;&lt;/&gt;</para><para><simplesect kind="see"><para><ref refid="group__group__funcmacro__misc_1ga6fb42677c51d509690e7062b9dadaa25" kindref="member">wxGetMouseState()</ref>, <ref refid="classwx_mouse_event" kindref="compound">wxMouseEvent</ref> </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="4321">
        <label>wxKeyboardState</label>
        <link refid="classwx_keyboard_state"/>
      </node>
      <node id="4322">
        <label>wxMouseEvent</label>
        <link refid="classwx_mouse_event"/>
        <childnode refid="4320" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4320">
        <label>wxMouseState</label>
        <link refid="classwx_mouse_state"/>
        <childnode refid="4321" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4324">
        <label>wxKeyboardState</label>
        <link refid="classwx_keyboard_state"/>
      </node>
      <node id="4323">
        <label>wxMouseState</label>
        <link refid="classwx_mouse_state"/>
        <childnode refid="4324" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="interface/wx/mousestate.h" line="57" column="1" bodyfile="interface/wx/mousestate.h" bodystart="56" bodyend="120"/>
    <listofallmembers>
      <member refid="classwx_keyboard_state_1a21f4762d6874787de9408bffe49474bb" prot="public" virt="non-virtual"><scope>wxMouseState</scope><name>AltDown</name></member>
      <member refid="classwx_mouse_state_1a6a96c76224bca3d45d0c13160389c778" prot="public" virt="non-virtual"><scope>wxMouseState</scope><name>Aux1IsDown</name></member>
      <member refid="classwx_mouse_state_1a599e903ea53cfa9da7f5a63f5991475c" prot="public" virt="non-virtual"><scope>wxMouseState</scope><name>Aux2IsDown</name></member>
      <member refid="classwx_keyboard_state_1a65d09b479fcb9a3b20d01f79d6c92da8" prot="public" virt="non-virtual"><scope>wxMouseState</scope><name>CmdDown</name></member>
      <member refid="classwx_keyboard_state_1aa4ed00359eb8ba6000ce302b36e9147b" prot="public" virt="non-virtual"><scope>wxMouseState</scope><name>ControlDown</name></member>
      <member refid="classwx_keyboard_state_1a203cd1439ba9be039f7e058f4278b4cd" prot="public" virt="non-virtual"><scope>wxMouseState</scope><name>GetModifiers</name></member>
      <member refid="classwx_mouse_state_1a318d5a329edfd9210f611058546c2b1f" prot="public" virt="non-virtual"><scope>wxMouseState</scope><name>GetPosition</name></member>
      <member refid="classwx_mouse_state_1a22177c938d6a00e37bbe19c5e5707229" prot="public" virt="non-virtual"><scope>wxMouseState</scope><name>GetPosition</name></member>
      <member refid="classwx_mouse_state_1acf5e2001f5b729a50f0d3a8c1cf64b5c" prot="public" virt="non-virtual"><scope>wxMouseState</scope><name>GetX</name></member>
      <member refid="classwx_mouse_state_1ac41c9e6b32b6f88b4fd729a0480ab4e4" prot="public" virt="non-virtual"><scope>wxMouseState</scope><name>GetY</name></member>
      <member refid="classwx_keyboard_state_1acfaeb807c52ca591c78c4464abd32baa" prot="public" virt="non-virtual"><scope>wxMouseState</scope><name>HasAnyModifiers</name></member>
      <member refid="classwx_keyboard_state_1ae4ae63d5a16031599f78bf6254337fba" prot="public" virt="non-virtual"><scope>wxMouseState</scope><name>HasModifiers</name></member>
      <member refid="classwx_mouse_state_1abc8bd8076822d5183d3946490735af7f" prot="public" virt="non-virtual"><scope>wxMouseState</scope><name>LeftIsDown</name></member>
      <member refid="classwx_keyboard_state_1a94875b6bb651d071e04122bec726bab7" prot="public" virt="non-virtual"><scope>wxMouseState</scope><name>MetaDown</name></member>
      <member refid="classwx_mouse_state_1af2021f1d6534fc6e0782c73696149a3b" prot="public" virt="non-virtual"><scope>wxMouseState</scope><name>MiddleIsDown</name></member>
      <member refid="classwx_keyboard_state_1a3b32b49f2a49f182f73423e8ac49c36d" prot="public" virt="non-virtual"><scope>wxMouseState</scope><name>RawControlDown</name></member>
      <member refid="classwx_mouse_state_1a3f9d3b85ea8131706d15d160997482e3" prot="public" virt="non-virtual"><scope>wxMouseState</scope><name>RightIsDown</name></member>
      <member refid="classwx_keyboard_state_1a6ba12f87c2c95364528ab152fa813de0" prot="public" virt="non-virtual"><scope>wxMouseState</scope><name>SetAltDown</name></member>
      <member refid="classwx_mouse_state_1a9f87d1187687b2e8d96ea14a93fdc397" prot="public" virt="non-virtual"><scope>wxMouseState</scope><name>SetAux1Down</name></member>
      <member refid="classwx_mouse_state_1ab0f55cf7fb235c4bb1bcd6dc4fd27cbd" prot="public" virt="non-virtual"><scope>wxMouseState</scope><name>SetAux2Down</name></member>
      <member refid="classwx_keyboard_state_1ac9e9f195b68f79f4aac683bb7eb620dd" prot="public" virt="non-virtual"><scope>wxMouseState</scope><name>SetControlDown</name></member>
      <member refid="classwx_mouse_state_1ab7f0e3c1b439df3069b9ed2438ab3fb6" prot="public" virt="non-virtual"><scope>wxMouseState</scope><name>SetLeftDown</name></member>
      <member refid="classwx_keyboard_state_1adb5578cce4dce054cd24c7eb3cd650e7" prot="public" virt="non-virtual"><scope>wxMouseState</scope><name>SetMetaDown</name></member>
      <member refid="classwx_mouse_state_1a642c369edc8cc256898684b9ffe47c2c" prot="public" virt="non-virtual"><scope>wxMouseState</scope><name>SetMiddleDown</name></member>
      <member refid="classwx_mouse_state_1a3af09115e9db255f820b54077da51cfc" prot="public" virt="non-virtual"><scope>wxMouseState</scope><name>SetPosition</name></member>
      <member refid="classwx_keyboard_state_1a3a200bfbfaa31597f791e5bd57b99db6" prot="public" virt="non-virtual"><scope>wxMouseState</scope><name>SetRawControlDown</name></member>
      <member refid="classwx_mouse_state_1a3dcc8691d8b73a015768ec5472346ce9" prot="public" virt="non-virtual"><scope>wxMouseState</scope><name>SetRightDown</name></member>
      <member refid="classwx_keyboard_state_1a5a8f8337c65248310363aedf228303e9" prot="public" virt="non-virtual"><scope>wxMouseState</scope><name>SetShiftDown</name></member>
      <member refid="classwx_mouse_state_1a59d981aa6726c5f7312b558159f25ced" prot="public" virt="non-virtual"><scope>wxMouseState</scope><name>SetState</name></member>
      <member refid="classwx_mouse_state_1a095c9989c4fc607295683882f9d94efa" prot="public" virt="non-virtual"><scope>wxMouseState</scope><name>SetX</name></member>
      <member refid="classwx_mouse_state_1ad67621bb4a134ec32c0a5419474714e4" prot="public" virt="non-virtual"><scope>wxMouseState</scope><name>SetY</name></member>
      <member refid="classwx_keyboard_state_1a1332cbf971bd2809db73342652435ba9" prot="public" virt="non-virtual"><scope>wxMouseState</scope><name>ShiftDown</name></member>
      <member refid="classwx_keyboard_state_1aabf0c85adc4d56ca6364694eb26e55a8" prot="public" virt="non-virtual"><scope>wxMouseState</scope><name>wxKeyboardState</name></member>
      <member refid="classwx_mouse_state_1a96a28a4a38917b132ea51bef03955b28" prot="public" virt="non-virtual"><scope>wxMouseState</scope><name>wxMouseState</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
