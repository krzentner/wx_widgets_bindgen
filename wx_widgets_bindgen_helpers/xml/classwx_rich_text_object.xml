<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classwx_rich_text_object" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>wxRichTextObject</compoundname>
    <basecompoundref refid="classwx_object" prot="public" virt="non-virtual">wxObject</basecompoundref>
    <derivedcompoundref refid="classwx_rich_text_composite_object" prot="public" virt="non-virtual">wxRichTextCompositeObject</derivedcompoundref>
    <derivedcompoundref refid="classwx_rich_text_image" prot="public" virt="non-virtual">wxRichTextImage</derivedcompoundref>
    <derivedcompoundref refid="classwx_rich_text_plain_text" prot="public" virt="non-virtual">wxRichTextPlainText</derivedcompoundref>
    <includes local="no">wx/richtext/richtextbuffer.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classwx_rich_text_object_1a4ca6121d75119045c4b3872aaed911b8" prot="protected" static="no" mutable="no">
        <type><ref refid="classwx_size" kindref="compound">wxSize</ref></type>
        <definition>wxSize wxRichTextObject::m_size</definition>
        <argsstring></argsstring>
        <name>m_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2634" column="1" bodyfile="interface/wx/richtext/richtextbuffer.h" bodystart="2634" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classwx_rich_text_object_1a1de7d6f9a0161940337499f3e2c435af" prot="protected" static="no" mutable="no">
        <type><ref refid="classwx_size" kindref="compound">wxSize</ref></type>
        <definition>wxSize wxRichTextObject::m_maxSize</definition>
        <argsstring></argsstring>
        <name>m_maxSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2635" column="1" bodyfile="interface/wx/richtext/richtextbuffer.h" bodystart="2635" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classwx_rich_text_object_1a5f3c7ef5f2a4810552c9469544a425a3" prot="protected" static="no" mutable="no">
        <type><ref refid="classwx_size" kindref="compound">wxSize</ref></type>
        <definition>wxSize wxRichTextObject::m_minSize</definition>
        <argsstring></argsstring>
        <name>m_minSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2636" column="1" bodyfile="interface/wx/richtext/richtextbuffer.h" bodystart="2636" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classwx_rich_text_object_1a54877607aefc660eb096d597f5f571b8" prot="protected" static="no" mutable="no">
        <type><ref refid="classwx_point" kindref="compound">wxPoint</ref></type>
        <definition>wxPoint wxRichTextObject::m_pos</definition>
        <argsstring></argsstring>
        <name>m_pos</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2637" column="1" bodyfile="interface/wx/richtext/richtextbuffer.h" bodystart="2637" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classwx_rich_text_object_1a11d2eb57124f37163e3380752f29ae3b" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int wxRichTextObject::m_descent</definition>
        <argsstring></argsstring>
        <name>m_descent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2638" column="1" bodyfile="interface/wx/richtext/richtextbuffer.h" bodystart="2638" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classwx_rich_text_object_1a46010f35ddb4d2104a16f4fe093dfd70" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int wxRichTextObject::m_refCount</definition>
        <argsstring></argsstring>
        <name>m_refCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2639" column="1" bodyfile="interface/wx/richtext/richtextbuffer.h" bodystart="2639" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classwx_rich_text_object_1a74dcf7cb3b3426d799b97fe20f696c55" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool wxRichTextObject::m_show</definition>
        <argsstring></argsstring>
        <name>m_show</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2640" column="1" bodyfile="interface/wx/richtext/richtextbuffer.h" bodystart="2640" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classwx_rich_text_object_1a95363ba559f3f9ba0cf67992391a4cd5" prot="protected" static="no" mutable="no">
        <type><ref refid="classwx_rich_text_object" kindref="compound">wxRichTextObject</ref> *</type>
        <definition>wxRichTextObject* wxRichTextObject::m_parent</definition>
        <argsstring></argsstring>
        <name>m_parent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2641" column="1" bodyfile="interface/wx/richtext/richtextbuffer.h" bodystart="2641" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classwx_rich_text_object_1a39f2fc10746006cca791047c5ca0dfb4" prot="protected" static="no" mutable="no">
        <type><ref refid="classwx_rich_text_range" kindref="compound">wxRichTextRange</ref></type>
        <definition>wxRichTextRange wxRichTextObject::m_range</definition>
        <argsstring></argsstring>
        <name>m_range</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2644" column="1" bodyfile="interface/wx/richtext/richtextbuffer.h" bodystart="2644" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classwx_rich_text_object_1ad5dbfa9994dc36033bd6b3ec0788c66d" prot="protected" static="no" mutable="no">
        <type><ref refid="classwx_rich_text_range" kindref="compound">wxRichTextRange</ref></type>
        <definition>wxRichTextRange wxRichTextObject::m_ownRange</definition>
        <argsstring></argsstring>
        <name>m_ownRange</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2647" column="1" bodyfile="interface/wx/richtext/richtextbuffer.h" bodystart="2647" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classwx_rich_text_object_1abfda428cbcad6e98bb5c3b5e1e1fdbeb" prot="protected" static="no" mutable="no">
        <type><ref refid="classwx_rich_text_attr" kindref="compound">wxRichTextAttr</ref></type>
        <definition>wxRichTextAttr wxRichTextObject::m_attributes</definition>
        <argsstring></argsstring>
        <name>m_attributes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2650" column="1" bodyfile="interface/wx/richtext/richtextbuffer.h" bodystart="2650" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classwx_rich_text_object_1af2b36d1d5df497c7c1c795ca98b4f972" prot="protected" static="no" mutable="no">
        <type><ref refid="classwx_rich_text_properties" kindref="compound">wxRichTextProperties</ref></type>
        <definition>wxRichTextProperties wxRichTextObject::m_properties</definition>
        <argsstring></argsstring>
        <name>m_properties</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2653" column="1" bodyfile="interface/wx/richtext/richtextbuffer.h" bodystart="2653" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_rich_text_object_1ae4fdbd4a8097fdc7f02a3e0172b58169" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxRichTextObject::wxRichTextObject</definition>
        <argsstring>(wxRichTextObject *parent=NULL)</argsstring>
        <name>wxRichTextObject</name>
        <param>
          <type><ref refid="classwx_rich_text_object" kindref="compound">wxRichTextObject</ref> *</type>
          <declname>parent</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Constructor, taking an optional parent pointer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2083" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1a8908daf9460edf3623fee7334301ba35" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual wxRichTextObject::~wxRichTextObject</definition>
        <argsstring>()</argsstring>
        <name>~wxRichTextObject</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2085" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1a6b38fa20816060d1272c5b7f4678a843" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool wxRichTextObject::Draw</definition>
        <argsstring>(wxDC &amp;dc, wxRichTextDrawingContext &amp;context, const wxRichTextRange &amp;range, const wxRichTextSelection &amp;selection, const wxRect &amp;rect, int descent, int style)=0</argsstring>
        <name>Draw</name>
        <reimplementedby refid="classwx_rich_text_paragraph_layout_box_1adc089d67677bb52f00da702da4fd6844">Draw</reimplementedby>
        <reimplementedby refid="classwx_rich_text_box_1a4f5c83ec0d835a9da96ddd10ee39e6a1">Draw</reimplementedby>
        <reimplementedby refid="classwx_rich_text_field_1a983a0aa60b877fafdd400a0afad022d4">Draw</reimplementedby>
        <reimplementedby refid="classwx_rich_text_paragraph_1aea37f82aea4ffa3a9c6b6818083ec06a">Draw</reimplementedby>
        <reimplementedby refid="classwx_rich_text_plain_text_1a15077930622c966174956ea72c6376a3">Draw</reimplementedby>
        <reimplementedby refid="classwx_rich_text_image_1a652c6da770307bb5b8165284d23fd74b">Draw</reimplementedby>
        <reimplementedby refid="classwx_rich_text_cell_1a62d5214bf4da06e1411a1f16a0b79ffa">Draw</reimplementedby>
        <reimplementedby refid="classwx_rich_text_table_1ae1b17440fa828dfaf7514fd749cb98b0">Draw</reimplementedby>
        <param>
          <type><ref refid="classwx_d_c" kindref="compound">wxDC</ref> &amp;</type>
          <declname>dc</declname>
        </param>
        <param>
          <type><ref refid="classwx_rich_text_drawing_context" kindref="compound">wxRichTextDrawingContext</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_rich_text_range" kindref="compound">wxRichTextRange</ref> &amp;</type>
          <declname>range</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_rich_text_selection" kindref="compound">wxRichTextSelection</ref> &amp;</type>
          <declname>selection</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_rect" kindref="compound">wxRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>int</type>
          <declname>descent</declname>
        </param>
        <param>
          <type>int</type>
          <declname>style</declname>
        </param>
        <briefdescription>
<para>Draw the item, within the given range. </para>        </briefdescription>
        <detaileddescription>
<para>Some objects may ignore the range (for example paragraphs) while others must obey it (lines, to implement wrapping) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2093" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1a4dc323418f095b5a68c0629c77f77d9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool wxRichTextObject::Layout</definition>
        <argsstring>(wxDC &amp;dc, wxRichTextDrawingContext &amp;context, const wxRect &amp;rect, const wxRect &amp;parentRect, int style)=0</argsstring>
        <name>Layout</name>
        <reimplementedby refid="classwx_rich_text_paragraph_layout_box_1a790b7411a1fc83b518f02f9d3ca040d0">Layout</reimplementedby>
        <reimplementedby refid="classwx_rich_text_field_1a75fbf6af12162f4e4d0b7c9ca0154013">Layout</reimplementedby>
        <reimplementedby refid="classwx_rich_text_paragraph_1a6d120d72e8961d365a2f87071be0d3fd">Layout</reimplementedby>
        <reimplementedby refid="classwx_rich_text_plain_text_1a2859bba9bebba925dcb8120ea0a12bf7">Layout</reimplementedby>
        <reimplementedby refid="classwx_rich_text_image_1ae409c24c5ab3c4bf3576086d331e0075">Layout</reimplementedby>
        <reimplementedby refid="classwx_rich_text_table_1a9cfed3a7dc80e664b23b3e18df5bc705">Layout</reimplementedby>
        <param>
          <type><ref refid="classwx_d_c" kindref="compound">wxDC</ref> &amp;</type>
          <declname>dc</declname>
        </param>
        <param>
          <type><ref refid="classwx_rich_text_drawing_context" kindref="compound">wxRichTextDrawingContext</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_rect" kindref="compound">wxRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_rect" kindref="compound">wxRect</ref> &amp;</type>
          <declname>parentRect</declname>
        </param>
        <param>
          <type>int</type>
          <declname>style</declname>
        </param>
        <briefdescription>
<para>Lay the item out at the specified position with the given size constraint. </para>        </briefdescription>
        <detaileddescription>
<para>Layout must set the cached size. <emphasis>rect</emphasis> is the available space for the object, and <emphasis>parentRect</emphasis> is the container that is used to determine a relative size or position (for example if a text box must be 50% of the parent text box). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2102" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1a89d7b260744b3b6ba2caa0ccd7cab3ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>virtual int wxRichTextObject::HitTest</definition>
        <argsstring>(wxDC &amp;dc, wxRichTextDrawingContext &amp;context, const wxPoint &amp;pt, long &amp;textPosition, wxRichTextObject **obj, wxRichTextObject **contextObj, int flags=0)</argsstring>
        <name>HitTest</name>
        <reimplementedby refid="classwx_rich_text_composite_object_1afef3875a33413d27027588f42808ac22">HitTest</reimplementedby>
        <reimplementedby refid="classwx_rich_text_paragraph_layout_box_1affec7c54228ff46b74beda1609f444d8">HitTest</reimplementedby>
        <reimplementedby refid="classwx_rich_text_paragraph_1a5acd6c4e87eac9512a33c0972fcb03fc">HitTest</reimplementedby>
        <reimplementedby refid="classwx_rich_text_buffer_1a2b82943d3a78b564b1d910fa62ee9302">HitTest</reimplementedby>
        <reimplementedby refid="classwx_rich_text_cell_1a7055d07c13a714b8d693ff76edd605f3">HitTest</reimplementedby>
        <reimplementedby refid="classwx_rich_text_table_1afd36011ba90432825e0b4121d58ea770">HitTest</reimplementedby>
        <param>
          <type><ref refid="classwx_d_c" kindref="compound">wxDC</ref> &amp;</type>
          <declname>dc</declname>
        </param>
        <param>
          <type><ref refid="classwx_rich_text_drawing_context" kindref="compound">wxRichTextDrawingContext</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_point" kindref="compound">wxPoint</ref> &amp;</type>
          <declname>pt</declname>
        </param>
        <param>
          <type>long &amp;</type>
          <declname>textPosition</declname>
        </param>
        <param>
          <type><ref refid="classwx_rich_text_object" kindref="compound">wxRichTextObject</ref> **</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="classwx_rich_text_object" kindref="compound">wxRichTextObject</ref> **</type>
          <declname>contextObj</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Hit-testing: returns a flag indicating hit test details, plus information about position. </para>        </briefdescription>
        <detaileddescription>
<para><emphasis>contextObj</emphasis> is returned to specify what object position is relevant to, since otherwise there&apos;s an ambiguity. @ obj might not be a child of <emphasis>contextObj</emphasis>, since we may be referring to the container itself if we have no hit on a child - for example if we click outside an object.</para><para>The function puts the position in <emphasis>textPosition</emphasis> if one is found. <emphasis>pt</emphasis> is in logical units (a zero y position is at the beginning of the buffer).</para><para><simplesect kind="return"><para>One of the <ref refid="richtextbuffer_8h_1ad855d173e40a6cffd90b8fe2b78c1490" kindref="member">wxRichTextHitTestFlags</ref> values. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2118" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1ada23487892212de2a2ded44741ed255b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxRichTextObject::FindPosition</definition>
        <argsstring>(wxDC &amp;dc, wxRichTextDrawingContext &amp;context, long index, wxPoint &amp;pt, int *height, bool forceLineStart)</argsstring>
        <name>FindPosition</name>
        <reimplementedby refid="classwx_rich_text_composite_object_1a0880fd7648c61f5b50425757552d18d8">FindPosition</reimplementedby>
        <reimplementedby refid="classwx_rich_text_paragraph_1a67e6d026931447ea7f5cb96781e33389">FindPosition</reimplementedby>
        <reimplementedby refid="classwx_rich_text_table_1a8e8901402aa2b041d96f8830a730c584">FindPosition</reimplementedby>
        <param>
          <type><ref refid="classwx_d_c" kindref="compound">wxDC</ref> &amp;</type>
          <declname>dc</declname>
        </param>
        <param>
          <type><ref refid="classwx_rich_text_drawing_context" kindref="compound">wxRichTextDrawingContext</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <param>
          <type>long</type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="classwx_point" kindref="compound">wxPoint</ref> &amp;</type>
          <declname>pt</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>height</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>forceLineStart</declname>
        </param>
        <briefdescription>
<para>Finds the absolute position and row height for the given character position. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2125" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1a8e850d1a313fde7e6cd54c8d7db27938" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_size" kindref="compound">wxSize</ref></type>
        <definition>virtual wxSize wxRichTextObject::GetBestSize</definition>
        <argsstring>() const</argsstring>
        <name>GetBestSize</name>
        <briefdescription>
<para>Returns the best size, i.e. the ideal starting size for this object irrespective of available space. </para>        </briefdescription>
        <detaileddescription>
<para>For a short text string, it will be the size that exactly encloses the text. For a longer string, it might use the parent width for example. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2133" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1aba9a1b5ccbcf386f880e45e62d3d387f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool wxRichTextObject::GetRangeSize</definition>
        <argsstring>(const wxRichTextRange &amp;range, wxSize &amp;size, int &amp;descent, wxDC &amp;dc, wxRichTextDrawingContext &amp;context, int flags, const wxPoint &amp;position=wxPoint(0, 0), const wxSize &amp;parentSize=wxDefaultSize, wxArrayInt *partialExtents=NULL) const =0</argsstring>
        <name>GetRangeSize</name>
        <reimplementedby refid="classwx_rich_text_composite_object_1a16cf33919bc89115c4057adc6cd9fbd4">GetRangeSize</reimplementedby>
        <reimplementedby refid="classwx_rich_text_paragraph_layout_box_1a985582c33a34184e3c83e0263c13df1c">GetRangeSize</reimplementedby>
        <reimplementedby refid="classwx_rich_text_field_1a45546ef9af15de016cbf3d6821899016">GetRangeSize</reimplementedby>
        <reimplementedby refid="classwx_rich_text_paragraph_1a59b0faac1855f255e184ee285c8aff3b">GetRangeSize</reimplementedby>
        <reimplementedby refid="classwx_rich_text_plain_text_1a4c893d56c2a65c10bb97488feb6b822f">GetRangeSize</reimplementedby>
        <reimplementedby refid="classwx_rich_text_image_1ab672ffe68e2d8f373bd4acda42fe125c">GetRangeSize</reimplementedby>
        <reimplementedby refid="classwx_rich_text_table_1aa407c40cba9f88ac8ba97002c5a6a4cd">GetRangeSize</reimplementedby>
        <param>
          <type>const <ref refid="classwx_rich_text_range" kindref="compound">wxRichTextRange</ref> &amp;</type>
          <declname>range</declname>
        </param>
        <param>
          <type><ref refid="classwx_size" kindref="compound">wxSize</ref> &amp;</type>
          <declname>size</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>descent</declname>
        </param>
        <param>
          <type><ref refid="classwx_d_c" kindref="compound">wxDC</ref> &amp;</type>
          <declname>dc</declname>
        </param>
        <param>
          <type><ref refid="classwx_rich_text_drawing_context" kindref="compound">wxRichTextDrawingContext</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_point" kindref="compound">wxPoint</ref> &amp;</type>
          <declname>position</declname>
          <defval><ref refid="classwx_point" kindref="compound">wxPoint</ref>(0, 0)</defval>
        </param>
        <param>
          <type>const <ref refid="classwx_size" kindref="compound">wxSize</ref> &amp;</type>
          <declname>parentSize</declname>
          <defval><ref refid="gdicmn_8h_1a33a012cdb075e9f78c93f63bec2dc27b" kindref="member">wxDefaultSize</ref></defval>
        </param>
        <param>
          <type><ref refid="dynarray_8h_1add87f199292e36ee87efd6d7f0d4ee66" kindref="member">wxArrayInt</ref> *</type>
          <declname>partialExtents</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Returns the object size for the given range. </para>        </briefdescription>
        <detaileddescription>
<para>Returns false if the range is invalid for this object. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2140" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1a54f5d9610815ff94b2f579660eacc496" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_rich_text_object" kindref="compound">wxRichTextObject</ref> *</type>
        <definition>virtual wxRichTextObject* wxRichTextObject::DoSplit</definition>
        <argsstring>(long pos)</argsstring>
        <name>DoSplit</name>
        <reimplementedby refid="classwx_rich_text_plain_text_1a74ffa84d8f99e4baa8e0b30a56380cf7">DoSplit</reimplementedby>
        <param>
          <type>long</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
<para>Do a split from <emphasis>pos</emphasis>, returning an object containing the second part, and setting the first part in &apos;this&apos;. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2150" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1ae92b6bee8556ffe72a67f8a9a83a6d5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxRichTextObject::CalculateRange</definition>
        <argsstring>(long start, long &amp;end)</argsstring>
        <name>CalculateRange</name>
        <reimplementedby refid="classwx_rich_text_composite_object_1aebf68a6362a97f48625aae7e0685a17d">CalculateRange</reimplementedby>
        <reimplementedby refid="classwx_rich_text_field_1a68c2f9f0bba379460ea6ceab186c3179">CalculateRange</reimplementedby>
        <reimplementedby refid="classwx_rich_text_paragraph_1a6b0aece0ff46525206d501748ce35739">CalculateRange</reimplementedby>
        <reimplementedby refid="classwx_rich_text_plain_text_1a2bd6712bc8492e3a350e1a67eb6ba26a">CalculateRange</reimplementedby>
        <reimplementedby refid="classwx_rich_text_table_1acdca975b24db557c42f73cb3fd6e98b9">CalculateRange</reimplementedby>
        <param>
          <type>long</type>
          <declname>start</declname>
        </param>
        <param>
          <type>long &amp;</type>
          <declname>end</declname>
        </param>
        <briefdescription>
<para>Calculates the range of the object. </para>        </briefdescription>
        <detaileddescription>
<para>By default, guess that the object is 1 unit long. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2155" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1aa4c3e145d867c539574db19d55ea60bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxRichTextObject::DeleteRange</definition>
        <argsstring>(const wxRichTextRange &amp;range)</argsstring>
        <name>DeleteRange</name>
        <reimplementedby refid="classwx_rich_text_composite_object_1a5612c0efc7c5400cba4f465c2073b614">DeleteRange</reimplementedby>
        <reimplementedby refid="classwx_rich_text_paragraph_layout_box_1aff46150c2c2cca5c915290423d8031c7">DeleteRange</reimplementedby>
        <reimplementedby refid="classwx_rich_text_plain_text_1a92a03c2b1c3bf327238fc2f6607bb0b7">DeleteRange</reimplementedby>
        <reimplementedby refid="classwx_rich_text_table_1ae6ba99b87bf218683da2f47d41270d87">DeleteRange</reimplementedby>
        <param>
          <type>const <ref refid="classwx_rich_text_range" kindref="compound">wxRichTextRange</ref> &amp;</type>
          <declname>range</declname>
        </param>
        <briefdescription>
<para>Deletes the given range. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2160" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1a3d74d7ff54f98cf1538dab6e0551b742" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxRichTextObject::IsEmpty</definition>
        <argsstring>() const</argsstring>
        <name>IsEmpty</name>
        <reimplementedby refid="classwx_rich_text_composite_object_1a854a76b4b3313760e00368c53aaf463d">IsEmpty</reimplementedby>
        <reimplementedby refid="classwx_rich_text_field_1a7e7c9c7b1429ecfbad305457e135aa3f">IsEmpty</reimplementedby>
        <reimplementedby refid="classwx_rich_text_plain_text_1a696de15960d80cefdee9adeff5bc6092">IsEmpty</reimplementedby>
        <reimplementedby refid="classwx_rich_text_image_1acb64a24f2ecd7f8a29090100b1f0f61c">IsEmpty</reimplementedby>
        <briefdescription>
<para>Returns true if the object is empty. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2165" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1a6375bd24f56c059c934f0ff9333b97cd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxRichTextObject::IsFloatable</definition>
        <argsstring>() const</argsstring>
        <name>IsFloatable</name>
        <reimplementedby refid="classwx_rich_text_image_1a0aad22577c67ce56b7ae48b1520bbed0">IsFloatable</reimplementedby>
        <briefdescription>
<para>Returns true if this class of object is floatable. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2170" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1a4185a0f2f89b1af8c9319d58b97962e3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxRichTextObject::IsFloating</definition>
        <argsstring>() const</argsstring>
        <name>IsFloating</name>
        <briefdescription>
<para>Returns true if this object is currently floating. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2175" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1a57f431aeb760ce0cee6933e11800c872" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>virtual int wxRichTextObject::GetFloatDirection</definition>
        <argsstring>() const</argsstring>
        <name>GetFloatDirection</name>
        <briefdescription>
<para>Returns the floating direction. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2180" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1a7dec3176e3ad40bbca44ebd4aaeb229d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>virtual wxString wxRichTextObject::GetTextForRange</definition>
        <argsstring>(const wxRichTextRange &amp;range) const</argsstring>
        <name>GetTextForRange</name>
        <reimplementedby refid="classwx_rich_text_composite_object_1a142e15fc0f98387fb689af0e70ef26e6">GetTextForRange</reimplementedby>
        <reimplementedby refid="classwx_rich_text_paragraph_layout_box_1a9d9f56c64410944983d94cc8409544c9">GetTextForRange</reimplementedby>
        <reimplementedby refid="classwx_rich_text_plain_text_1ae3b8c74d2bdc811abd65551c7c310580">GetTextForRange</reimplementedby>
        <reimplementedby refid="classwx_rich_text_table_1a740126c3913bd58f2e80b80ed9d0e956">GetTextForRange</reimplementedby>
        <param>
          <type>const <ref refid="classwx_rich_text_range" kindref="compound">wxRichTextRange</ref> &amp;</type>
          <declname>range</declname>
        </param>
        <briefdescription>
<para>Returns any text in this object for the given range. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2185" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1a388d09a56e73bc37ee322b4197551e70" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxRichTextObject::CanMerge</definition>
        <argsstring>(wxRichTextObject *object, wxRichTextDrawingContext &amp;context) const</argsstring>
        <name>CanMerge</name>
        <reimplementedby refid="classwx_rich_text_plain_text_1a719d07842ac1af4d7ed928342a272b75">CanMerge</reimplementedby>
        <param>
          <type><ref refid="classwx_rich_text_object" kindref="compound">wxRichTextObject</ref> *</type>
          <declname>object</declname>
        </param>
        <param>
          <type><ref refid="classwx_rich_text_drawing_context" kindref="compound">wxRichTextDrawingContext</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Returns true if this object can merge itself with the given one. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2190" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1ad70ee3cfab55a5e48fb604f915871843" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxRichTextObject::Merge</definition>
        <argsstring>(wxRichTextObject *object, wxRichTextDrawingContext &amp;context)</argsstring>
        <name>Merge</name>
        <reimplementedby refid="classwx_rich_text_plain_text_1a34521d526e4897ae4bce16a478a8a342">Merge</reimplementedby>
        <param>
          <type><ref refid="classwx_rich_text_object" kindref="compound">wxRichTextObject</ref> *</type>
          <declname>object</declname>
        </param>
        <param>
          <type><ref refid="classwx_rich_text_drawing_context" kindref="compound">wxRichTextDrawingContext</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Returns true if this object merged itself with the given one. </para>        </briefdescription>
        <detaileddescription>
<para>The calling code will then delete the given object. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2196" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1a1c8132e6a920eb979621f0168a0a07d5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxRichTextObject::CanSplit</definition>
        <argsstring>(wxRichTextDrawingContext &amp;context) const</argsstring>
        <name>CanSplit</name>
        <reimplementedby refid="classwx_rich_text_plain_text_1a66b6f33cd657a309b8e4c55f7341a343">CanSplit</reimplementedby>
        <param>
          <type><ref refid="classwx_rich_text_drawing_context" kindref="compound">wxRichTextDrawingContext</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Returns true if this object can potentially be split, by virtue of having different virtual attributes for individual sub-objects. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2202" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1a4fdd1d084816f375a467dbd555693d77" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_rich_text_object" kindref="compound">wxRichTextObject</ref> *</type>
        <definition>virtual wxRichTextObject* wxRichTextObject::Split</definition>
        <argsstring>(wxRichTextDrawingContext &amp;context)</argsstring>
        <name>Split</name>
        <reimplementedby refid="classwx_rich_text_plain_text_1ad8556e2ea87015027000c426bf399910">Split</reimplementedby>
        <param>
          <type><ref refid="classwx_rich_text_drawing_context" kindref="compound">wxRichTextDrawingContext</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Returns the final object in the split objects if this object was split due to differences between sub-object virtual attributes. </para>        </briefdescription>
        <detaileddescription>
<para>Returns itself if it was not split. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2208" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1aefee2fedfcaae5722d76647ff061beb8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxRichTextObject::Dump</definition>
        <argsstring>(wxTextOutputStream &amp;stream)</argsstring>
        <name>Dump</name>
        <reimplementedby refid="classwx_rich_text_composite_object_1af9198cc97c85fafc2391d3ee57b1aef7">Dump</reimplementedby>
        <reimplementedby refid="classwx_rich_text_plain_text_1abe69509224f51b02e6a2f4a0c99952fc">Dump</reimplementedby>
        <reimplementedby refid="classwx_rich_text_buffer_1ab020d7e23e14ca068951b0756773febc">Dump</reimplementedby>
        <param>
          <type><ref refid="classwx_text_output_stream" kindref="compound">wxTextOutputStream</ref> &amp;</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
<para>Dump object data to the given output stream for debugging. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2213" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1afe4a68694490ae90052a1b6614b9e897" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxRichTextObject::CanEditProperties</definition>
        <argsstring>() const</argsstring>
        <name>CanEditProperties</name>
        <reimplementedby refid="classwx_rich_text_box_1af2ad76f591dda833530b493bf651ee59">CanEditProperties</reimplementedby>
        <reimplementedby refid="classwx_rich_text_field_1a03fd70a31eaedba50c727afb4743e1fd">CanEditProperties</reimplementedby>
        <reimplementedby refid="classwx_rich_text_image_1ab92bdf652092ea3815faadc5e0177509">CanEditProperties</reimplementedby>
        <reimplementedby refid="classwx_rich_text_cell_1ad7194df58855630479147da636b0abd9">CanEditProperties</reimplementedby>
        <reimplementedby refid="classwx_rich_text_table_1ab080c44d6198746c5daeaf7b4f9cb95c">CanEditProperties</reimplementedby>
        <briefdescription>
<para>Returns true if we can edit the object&apos;s properties via a GUI. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2218" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1a988c9871f0050a661ca61a0cf44f6ed4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxRichTextObject::EditProperties</definition>
        <argsstring>(wxWindow *parent, wxRichTextBuffer *buffer)</argsstring>
        <name>EditProperties</name>
        <reimplementedby refid="classwx_rich_text_box_1a91ac256775325790d9382207a5b45ae3">EditProperties</reimplementedby>
        <reimplementedby refid="classwx_rich_text_field_1a821eda375faa17c7867bec7bcae1e92b">EditProperties</reimplementedby>
        <reimplementedby refid="classwx_rich_text_image_1aedd54262307513ad1beb82ab25322d82">EditProperties</reimplementedby>
        <reimplementedby refid="classwx_rich_text_cell_1a7e0fb6a59046a787fe615eb5f113ef0b">EditProperties</reimplementedby>
        <reimplementedby refid="classwx_rich_text_table_1aff02ba544d6dd108d350f38ebd32c784">EditProperties</reimplementedby>
        <param>
          <type><ref refid="classwx_window" kindref="compound">wxWindow</ref> *</type>
          <declname>parent</declname>
        </param>
        <param>
          <type><ref refid="classwx_rich_text_buffer" kindref="compound">wxRichTextBuffer</ref> *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
<para>Edits the object&apos;s properties via a GUI. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2223" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1a07dc6cf8d17350df5a1260d398a97177" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>virtual wxString wxRichTextObject::GetPropertiesMenuLabel</definition>
        <argsstring>() const</argsstring>
        <name>GetPropertiesMenuLabel</name>
        <reimplementedby refid="classwx_rich_text_box_1a3179702423faf534ab010a5edb82fd8f">GetPropertiesMenuLabel</reimplementedby>
        <reimplementedby refid="classwx_rich_text_field_1a2a9004a49b704f1f6563795e68c09300">GetPropertiesMenuLabel</reimplementedby>
        <reimplementedby refid="classwx_rich_text_image_1ab6621fec9f9b8943a33758ab77a3dab5">GetPropertiesMenuLabel</reimplementedby>
        <reimplementedby refid="classwx_rich_text_cell_1aba6b6e46b3122578fb6d120f96870dcc">GetPropertiesMenuLabel</reimplementedby>
        <reimplementedby refid="classwx_rich_text_table_1a1b4fd526f047a6815f51e9ef9ce9787e">GetPropertiesMenuLabel</reimplementedby>
        <briefdescription>
<para>Returns the label to be used for the properties context menu item. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2228" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1a66588efdeeb790bc6738aeeeb1f3367d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxRichTextObject::AcceptsFocus</definition>
        <argsstring>() const</argsstring>
        <name>AcceptsFocus</name>
        <reimplementedby refid="classwx_rich_text_paragraph_layout_box_1aeb248e14ee111b010ddcb8a6702dfe5c">AcceptsFocus</reimplementedby>
        <reimplementedby refid="classwx_rich_text_field_1aed348fa62b9f81150312da3d0efb53b4">AcceptsFocus</reimplementedby>
        <reimplementedby refid="classwx_rich_text_table_1ab4b5e879fb19f148a14e374473fbccb3">AcceptsFocus</reimplementedby>
        <briefdescription>
<para>Returns true if objects of this class can accept the focus, i.e. a call to SetFocusObject is possible. </para>        </briefdescription>
        <detaileddescription>
<para>For example, containers supporting text, such as a text box object, can accept the focus, but a table can&apos;t (set the focus to individual cells instead). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2235" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1aaec1b3467076b92a18a8a45bc82ac476" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxRichTextObject::ImportFromXML</definition>
        <argsstring>(wxRichTextBuffer *buffer, wxXmlNode *node, wxRichTextXMLHandler *handler, bool *recurse)</argsstring>
        <name>ImportFromXML</name>
        <reimplementedby refid="classwx_rich_text_paragraph_layout_box_1a992efc05c57f94759d9fef90124c299d">ImportFromXML</reimplementedby>
        <reimplementedby refid="classwx_rich_text_plain_text_1a0186878b079e4f57a5a6a00b9d168473">ImportFromXML</reimplementedby>
        <reimplementedby refid="classwx_rich_text_image_1a7b6966cee685c41485ae91b4a5acaed4">ImportFromXML</reimplementedby>
        <reimplementedby refid="classwx_rich_text_table_1a0073bccb4cbb2c2aa6012d1995dfae43">ImportFromXML</reimplementedby>
        <param>
          <type><ref refid="classwx_rich_text_buffer" kindref="compound">wxRichTextBuffer</ref> *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type><ref refid="classwx_xml_node" kindref="compound">wxXmlNode</ref> *</type>
          <declname>node</declname>
        </param>
        <param>
          <type><ref refid="classwx_rich_text_x_m_l_handler" kindref="compound">wxRichTextXMLHandler</ref> *</type>
          <declname>handler</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>recurse</declname>
        </param>
        <briefdescription>
<para>Imports this object from XML. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2240" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1a7e7b5386f084a1063ef418d384844030" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxRichTextObject::UsesParagraphAttributes</definition>
        <argsstring>() const</argsstring>
        <name>UsesParagraphAttributes</name>
        <reimplementedby refid="classwx_rich_text_plain_text_1a31dc1a2c549d9bb7912133040c93f0b8">UsesParagraphAttributes</reimplementedby>
        <reimplementedby refid="classwx_rich_text_image_1a2826951f20fe63f95f4bb62e3c38dcd6">UsesParagraphAttributes</reimplementedby>
        <briefdescription>
<para>Returns true if this object takes note of paragraph attributes (text and image objects don&apos;t). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2265" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1adef22a86697af249d1ae3e7e34bbcaf3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>virtual wxString wxRichTextObject::GetXMLNodeName</definition>
        <argsstring>() const</argsstring>
        <name>GetXMLNodeName</name>
        <reimplementedby refid="classwx_rich_text_paragraph_layout_box_1a5b6acc40f0550a4ba2641ec9c18c8004">GetXMLNodeName</reimplementedby>
        <reimplementedby refid="classwx_rich_text_box_1a7de133da30114379e7da3e52378dcadf">GetXMLNodeName</reimplementedby>
        <reimplementedby refid="classwx_rich_text_field_1a220e6a72fd9584881b4318d4cc8cde7f">GetXMLNodeName</reimplementedby>
        <reimplementedby refid="classwx_rich_text_paragraph_1ad60c0f91a0a53fda22e60d452eba0b89">GetXMLNodeName</reimplementedby>
        <reimplementedby refid="classwx_rich_text_plain_text_1a047fc4080442f81d647bf389d0dad4b2">GetXMLNodeName</reimplementedby>
        <reimplementedby refid="classwx_rich_text_image_1ab5e32684c7169b4f30231c9f97bbf065">GetXMLNodeName</reimplementedby>
        <reimplementedby refid="classwx_rich_text_cell_1aa77c6e43c0fd65117dda77da22ee11b2">GetXMLNodeName</reimplementedby>
        <reimplementedby refid="classwx_rich_text_table_1a253433bbbae80780854428abb6b9e6b9">GetXMLNodeName</reimplementedby>
        <briefdescription>
<para>Returns the XML node name of this object. </para>        </briefdescription>
        <detaileddescription>
<para>This must be overridden for wxXmlNode-base XML export to work. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2270" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1ae28afefb6baa08aeb426d36d9e605ae0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxRichTextObject::Invalidate</definition>
        <argsstring>(const wxRichTextRange &amp;invalidRange=wxRICHTEXT_ALL)</argsstring>
        <name>Invalidate</name>
        <reimplementedby refid="classwx_rich_text_composite_object_1a0f304041c6947c6370235dbbdec74cb7">Invalidate</reimplementedby>
        <reimplementedby refid="classwx_rich_text_paragraph_layout_box_1a4c42a77d95fa066494dce473dad7b0af">Invalidate</reimplementedby>
        <param>
          <type>const <ref refid="classwx_rich_text_range" kindref="compound">wxRichTextRange</ref> &amp;</type>
          <declname>invalidRange</declname>
          <defval><ref refid="richtextbuffer_8h_1a36e1a7d465ccfcf85c58069b15a91635" kindref="member">wxRICHTEXT_ALL</ref></defval>
        </param>
        <briefdescription>
<para>Invalidates the object at the given range. </para>        </briefdescription>
        <detaileddescription>
<para>With no argument, invalidates the whole object. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2275" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1a88a6d9038361e944d6a0595e2cb6e3e5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxRichTextObject::HandlesChildSelections</definition>
        <argsstring>() const</argsstring>
        <name>HandlesChildSelections</name>
        <reimplementedby refid="classwx_rich_text_table_1aa6aa37352791ae4834302aca8fa76705">HandlesChildSelections</reimplementedby>
        <briefdescription>
<para>Returns true if this object can handle the selections of its children, fOr example a table. </para>        </briefdescription>
        <detaileddescription>
<para>Required for composite selection handling to work. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2281" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1a2f700ec707fff1956785a48d6824be77" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_rich_text_selection" kindref="compound">wxRichTextSelection</ref></type>
        <definition>virtual wxRichTextSelection wxRichTextObject::GetSelection</definition>
        <argsstring>(long start, long end) const</argsstring>
        <name>GetSelection</name>
        <reimplementedby refid="classwx_rich_text_table_1ac55d44db82f105d75899ec71867537df">GetSelection</reimplementedby>
        <param>
          <type>long</type>
          <declname>start</declname>
        </param>
        <param>
          <type>long</type>
          <declname>end</declname>
        </param>
        <briefdescription>
<para>Returns a selection object specifying the selections between start and end character positions. </para>        </briefdescription>
        <detaileddescription>
<para>For example, a table would deduce what cells (of range length 1) are selected when dragging across the table. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2287" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1a2edd5915d43f0a161255d68be03395e8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_size" kindref="compound">wxSize</ref></type>
        <definition>virtual wxSize wxRichTextObject::GetCachedSize</definition>
        <argsstring>() const</argsstring>
        <name>GetCachedSize</name>
        <briefdescription>
<para>Gets the cached object size as calculated by Layout. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2294" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1a8bd8debc46fb2621ea6b23aa73ddcb25" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxRichTextObject::SetCachedSize</definition>
        <argsstring>(const wxSize &amp;sz)</argsstring>
        <name>SetCachedSize</name>
        <param>
          <type>const <ref refid="classwx_size" kindref="compound">wxSize</ref> &amp;</type>
          <declname>sz</declname>
        </param>
        <briefdescription>
<para>Sets the cached object size as calculated by Layout. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2299" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1a030799ad6d7df6c75eaeed5134932faa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_size" kindref="compound">wxSize</ref></type>
        <definition>virtual wxSize wxRichTextObject::GetMaxSize</definition>
        <argsstring>() const</argsstring>
        <name>GetMaxSize</name>
        <briefdescription>
<para>Gets the maximum object size as calculated by Layout. </para>        </briefdescription>
        <detaileddescription>
<para>This allows us to fit an object to its contents or allocate extra space if required. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2305" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1aadb78a01fffb53096c171d3c58b1adfc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxRichTextObject::SetMaxSize</definition>
        <argsstring>(const wxSize &amp;sz)</argsstring>
        <name>SetMaxSize</name>
        <param>
          <type>const <ref refid="classwx_size" kindref="compound">wxSize</ref> &amp;</type>
          <declname>sz</declname>
        </param>
        <briefdescription>
<para>Sets the maximum object size as calculated by Layout. </para>        </briefdescription>
        <detaileddescription>
<para>This allows us to fit an object to its contents or allocate extra space if required. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2311" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1a2891ae0478b440b7c847d1b8b3724c60" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_size" kindref="compound">wxSize</ref></type>
        <definition>virtual wxSize wxRichTextObject::GetMinSize</definition>
        <argsstring>() const</argsstring>
        <name>GetMinSize</name>
        <briefdescription>
<para>Gets the minimum object size as calculated by Layout. </para>        </briefdescription>
        <detaileddescription>
<para>This allows us to constrain an object to its absolute minimum size if necessary. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2317" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1a8b31e9928b6f68dd17eed50106aaffda" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxRichTextObject::SetMinSize</definition>
        <argsstring>(const wxSize &amp;sz)</argsstring>
        <name>SetMinSize</name>
        <param>
          <type>const <ref refid="classwx_size" kindref="compound">wxSize</ref> &amp;</type>
          <declname>sz</declname>
        </param>
        <briefdescription>
<para>Sets the minimum object size as calculated by Layout. </para>        </briefdescription>
        <detaileddescription>
<para>This allows us to constrain an object to its absolute minimum size if necessary. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2323" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1a179d44d9d9408511cf3fdad00250bd51" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_text_attr_size" kindref="compound">wxTextAttrSize</ref></type>
        <definition>virtual wxTextAttrSize wxRichTextObject::GetNaturalSize</definition>
        <argsstring>() const</argsstring>
        <name>GetNaturalSize</name>
        <reimplementedby refid="classwx_rich_text_image_1a44af47e0ea54161964419117a0613d1a">GetNaturalSize</reimplementedby>
        <briefdescription>
<para>Gets the &apos;natural&apos; size for an object. </para>        </briefdescription>
        <detaileddescription>
<para>For an image, it would be the image size. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2329" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1a5f6329dbd80870c54d62350367a64ea0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_point" kindref="compound">wxPoint</ref></type>
        <definition>virtual wxPoint wxRichTextObject::GetPosition</definition>
        <argsstring>() const</argsstring>
        <name>GetPosition</name>
        <briefdescription>
<para>Returns the object position in pixels. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2334" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1ae7c9cff59495ff166cb72d4417d1f782" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxRichTextObject::SetPosition</definition>
        <argsstring>(const wxPoint &amp;pos)</argsstring>
        <name>SetPosition</name>
        <param>
          <type>const <ref refid="classwx_point" kindref="compound">wxPoint</ref> &amp;</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
<para>Sets the object position in pixels. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2339" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1a7e690b5bfea130b020c5825d3dacfb7f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_point" kindref="compound">wxPoint</ref></type>
        <definition>virtual wxPoint wxRichTextObject::GetAbsolutePosition</definition>
        <argsstring>() const</argsstring>
        <name>GetAbsolutePosition</name>
        <briefdescription>
<para>Returns the absolute object position, by traversing up the child/parent hierarchy. </para>        </briefdescription>
        <detaileddescription>
<para>TODO: may not be needed, if all object positions are in fact relative to the top of the coordinate space. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2346" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1adfc953ad9b8064746af6d3dd4e76afd3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_rect" kindref="compound">wxRect</ref></type>
        <definition>virtual wxRect wxRichTextObject::GetRect</definition>
        <argsstring>() const</argsstring>
        <name>GetRect</name>
        <briefdescription>
<para>Returns the rectangle enclosing the object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2351" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1a16b84f91b15cdd1c89df64a9c4197fad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxRichTextObject::SetRange</definition>
        <argsstring>(const wxRichTextRange &amp;range)</argsstring>
        <name>SetRange</name>
        <param>
          <type>const <ref refid="classwx_rich_text_range" kindref="compound">wxRichTextRange</ref> &amp;</type>
          <declname>range</declname>
        </param>
        <briefdescription>
<para>Sets the object&apos;s range within its container. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2356" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1a7e47b798aa604c919850dad73ccdf9c2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classwx_rich_text_range" kindref="compound">wxRichTextRange</ref> &amp;</type>
        <definition>const wxRichTextRange&amp; wxRichTextObject::GetRange</definition>
        <argsstring>() const</argsstring>
        <name>GetRange</name>
        <briefdescription>
<para>Returns the object&apos;s range. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2361" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1a9156b00beb79c9e581612389ddd48f75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_rich_text_range" kindref="compound">wxRichTextRange</ref> &amp;</type>
        <definition>wxRichTextRange&amp; wxRichTextObject::GetRange</definition>
        <argsstring>()</argsstring>
        <name>GetRange</name>
        <briefdescription>
<para>Returns the object&apos;s range. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2366" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1a93e5f786c3f2d591df850678e1e0490f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxRichTextObject::SetOwnRange</definition>
        <argsstring>(const wxRichTextRange &amp;range)</argsstring>
        <name>SetOwnRange</name>
        <param>
          <type>const <ref refid="classwx_rich_text_range" kindref="compound">wxRichTextRange</ref> &amp;</type>
          <declname>range</declname>
        </param>
        <briefdescription>
<para>Set the object&apos;s own range, for a top-level object with its own position space. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2371" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1a9bc6e2f3613f167c2a21f032c165874a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classwx_rich_text_range" kindref="compound">wxRichTextRange</ref> &amp;</type>
        <definition>const wxRichTextRange&amp; wxRichTextObject::GetOwnRange</definition>
        <argsstring>() const</argsstring>
        <name>GetOwnRange</name>
        <briefdescription>
<para>Returns the object&apos;s own range (valid if top-level). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2376" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1acfdce17b44fc3939437a58e24e669ff3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_rich_text_range" kindref="compound">wxRichTextRange</ref> &amp;</type>
        <definition>wxRichTextRange&amp; wxRichTextObject::GetOwnRange</definition>
        <argsstring>()</argsstring>
        <name>GetOwnRange</name>
        <briefdescription>
<para>Returns the object&apos;s own range (valid if top-level). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2381" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1aaec43225e105e2040671ebdd2cb421b8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_rich_text_range" kindref="compound">wxRichTextRange</ref></type>
        <definition>wxRichTextRange wxRichTextObject::GetOwnRangeIfTopLevel</definition>
        <argsstring>() const</argsstring>
        <name>GetOwnRangeIfTopLevel</name>
        <briefdescription>
<para>Returns the object&apos;s own range only if a top-level object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2386" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1a96444f9f5c48828998d0dfaee41fa6d5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxRichTextObject::IsComposite</definition>
        <argsstring>() const</argsstring>
        <name>IsComposite</name>
        <reimplementedby refid="classwx_rich_text_composite_object_1a14b9d9fc8db9121b15277787dc4fe3ed">IsComposite</reimplementedby>
        <briefdescription>
<para>Returns true if this object is composite. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2391" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1aa38180f12ef8072702cfddece912ed49" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxRichTextObject::IsAtomic</definition>
        <argsstring>() const</argsstring>
        <name>IsAtomic</name>
        <reimplementedby refid="classwx_rich_text_composite_object_1ad157fd423e7f2a493cfdd22a02df478d">IsAtomic</reimplementedby>
        <reimplementedby refid="classwx_rich_text_field_1aadc696b6535546d942e0a61e5340d2e5">IsAtomic</reimplementedby>
        <briefdescription>
<para>Returns true if no user editing can be done inside the object. </para>        </briefdescription>
        <detaileddescription>
<para>This returns true for simple objects, false for most composite objects, but true for fields, which if composite, should not be user-edited. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2397" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1acc12683546a7cfef6ee236e6fe8b591f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_rich_text_object" kindref="compound">wxRichTextObject</ref> *</type>
        <definition>virtual wxRichTextObject* wxRichTextObject::GetParent</definition>
        <argsstring>() const</argsstring>
        <name>GetParent</name>
        <briefdescription>
<para>Returns a pointer to the parent object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2402" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1a20dfd3d8011aef58f658bf437e9ae7f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxRichTextObject::SetParent</definition>
        <argsstring>(wxRichTextObject *parent)</argsstring>
        <name>SetParent</name>
        <param>
          <type><ref refid="classwx_rich_text_object" kindref="compound">wxRichTextObject</ref> *</type>
          <declname>parent</declname>
        </param>
        <briefdescription>
<para>Sets the pointer to the parent object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2407" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1a168079723eec1d0675e645ff1d3de11a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_rich_text_paragraph_layout_box" kindref="compound">wxRichTextParagraphLayoutBox</ref> *</type>
        <definition>virtual wxRichTextParagraphLayoutBox* wxRichTextObject::GetContainer</definition>
        <argsstring>() const</argsstring>
        <name>GetContainer</name>
        <briefdescription>
<para>Returns the top-level container of this object. </para>        </briefdescription>
        <detaileddescription>
<para>May return itself if it&apos;s a container; use GetParentContainer to return a different container. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2414" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1a90738ddbb01902713f547de30773bfb5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_rich_text_paragraph_layout_box" kindref="compound">wxRichTextParagraphLayoutBox</ref> *</type>
        <definition>virtual wxRichTextParagraphLayoutBox* wxRichTextObject::GetParentContainer</definition>
        <argsstring>() const</argsstring>
        <name>GetParentContainer</name>
        <briefdescription>
<para>Returns the top-level container of this object. </para>        </briefdescription>
        <detaileddescription>
<para>Returns a different container than itself, unless there&apos;s no parent, in which case it will return NULL. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2420" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1a3834dbf885e97fd8bd1e8732ddd2bf79" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxRichTextObject::SetMargins</definition>
        <argsstring>(int margin)</argsstring>
        <name>SetMargins</name>
        <param>
          <type>int</type>
          <declname>margin</declname>
        </param>
        <briefdescription>
<para>Set the margin around the object, in pixels. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2425" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1a2e2e9f166eadacfca017d2dc33eefa13" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxRichTextObject::SetMargins</definition>
        <argsstring>(int leftMargin, int rightMargin, int topMargin, int bottomMargin)</argsstring>
        <name>SetMargins</name>
        <param>
          <type>int</type>
          <declname>leftMargin</declname>
        </param>
        <param>
          <type>int</type>
          <declname>rightMargin</declname>
        </param>
        <param>
          <type>int</type>
          <declname>topMargin</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bottomMargin</declname>
        </param>
        <briefdescription>
<para>Set the margin around the object, in pixels. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2430" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1ab902753d501b0a7435e31ca59e14ab67" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>virtual int wxRichTextObject::GetLeftMargin</definition>
        <argsstring>() const</argsstring>
        <name>GetLeftMargin</name>
        <briefdescription>
<para>Returns the left margin of the object, in pixels. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2435" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1a3dac4d63560660438f74c7f11c9767e8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>virtual int wxRichTextObject::GetRightMargin</definition>
        <argsstring>() const</argsstring>
        <name>GetRightMargin</name>
        <briefdescription>
<para>Returns the right margin of the object, in pixels. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2440" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1a1453e5d422874d4b15fcc2c885e301bb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>virtual int wxRichTextObject::GetTopMargin</definition>
        <argsstring>() const</argsstring>
        <name>GetTopMargin</name>
        <briefdescription>
<para>Returns the top margin of the object, in pixels. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2445" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1a09e681bc141e0e040491e89135116fc3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>virtual int wxRichTextObject::GetBottomMargin</definition>
        <argsstring>() const</argsstring>
        <name>GetBottomMargin</name>
        <briefdescription>
<para>Returns the bottom margin of the object, in pixels. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2450" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1af2064d8b876da4c2f3cc48d7cbe0de76" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_rect" kindref="compound">wxRect</ref></type>
        <definition>virtual wxRect wxRichTextObject::GetAvailableContentArea</definition>
        <argsstring>(wxDC &amp;dc, wxRichTextDrawingContext &amp;context, const wxRect &amp;outerRect) const</argsstring>
        <name>GetAvailableContentArea</name>
        <param>
          <type><ref refid="classwx_d_c" kindref="compound">wxDC</ref> &amp;</type>
          <declname>dc</declname>
        </param>
        <param>
          <type><ref refid="classwx_rich_text_drawing_context" kindref="compound">wxRichTextDrawingContext</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_rect" kindref="compound">wxRect</ref> &amp;</type>
          <declname>outerRect</declname>
        </param>
        <briefdescription>
<para>Calculates the available content space in the given rectangle, given the margins, border and padding specified in the object&apos;s attributes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2456" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1a207fff9a88e3bde658309d615bd29518" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxRichTextObject::LayoutToBestSize</definition>
        <argsstring>(wxDC &amp;dc, wxRichTextDrawingContext &amp;context, wxRichTextBuffer *buffer, const wxRichTextAttr &amp;parentAttr, const wxRichTextAttr &amp;attr, const wxRect &amp;availableParentSpace, const wxRect &amp;availableContainerSpace, int style)</argsstring>
        <name>LayoutToBestSize</name>
        <param>
          <type><ref refid="classwx_d_c" kindref="compound">wxDC</ref> &amp;</type>
          <declname>dc</declname>
        </param>
        <param>
          <type><ref refid="classwx_rich_text_drawing_context" kindref="compound">wxRichTextDrawingContext</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <param>
          <type><ref refid="classwx_rich_text_buffer" kindref="compound">wxRichTextBuffer</ref> *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_rich_text_attr" kindref="compound">wxRichTextAttr</ref> &amp;</type>
          <declname>parentAttr</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_rich_text_attr" kindref="compound">wxRichTextAttr</ref> &amp;</type>
          <declname>attr</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_rect" kindref="compound">wxRect</ref> &amp;</type>
          <declname>availableParentSpace</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_rect" kindref="compound">wxRect</ref> &amp;</type>
          <declname>availableContainerSpace</declname>
        </param>
        <param>
          <type>int</type>
          <declname>style</declname>
        </param>
        <briefdescription>
<para>Lays out the object first with a given amount of space, and then if no width was specified in attr, lays out the object again using the minimum size. </para>        </briefdescription>
        <detaileddescription>
<para><emphasis>availableParentSpace</emphasis> is the maximum space for the object, whereas <emphasis>availableContainerSpace</emphasis> is the container with which relative positions and sizes should be computed. For example, a text box whose space has already been constrained in a previous layout pass to <emphasis>availableParentSpace</emphasis>, but should have a width of 50% of <emphasis>availableContainerSpace</emphasis>. (If these two rects were the same, a 2nd pass could see the object getting too small.) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2466" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1a591ee431cd21bbde31b102231e79d8a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxRichTextObject::AdjustAttributes</definition>
        <argsstring>(wxRichTextAttr &amp;attr, wxRichTextDrawingContext &amp;context)</argsstring>
        <name>AdjustAttributes</name>
        <param>
          <type><ref refid="classwx_rich_text_attr" kindref="compound">wxRichTextAttr</ref> &amp;</type>
          <declname>attr</declname>
        </param>
        <param>
          <type><ref refid="classwx_rich_text_drawing_context" kindref="compound">wxRichTextDrawingContext</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Adjusts the attributes for virtual attribute provision, collapsed borders, etc. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2473" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1a4829cfbe45213f9a8f6e66e09e517399" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxRichTextObject::SetAttributes</definition>
        <argsstring>(const wxRichTextAttr &amp;attr)</argsstring>
        <name>SetAttributes</name>
        <param>
          <type>const <ref refid="classwx_rich_text_attr" kindref="compound">wxRichTextAttr</ref> &amp;</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
<para>Sets the object&apos;s attributes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2478" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1a81b02d30f62800094401bf3d009ede05" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classwx_rich_text_attr" kindref="compound">wxRichTextAttr</ref> &amp;</type>
        <definition>const wxRichTextAttr&amp; wxRichTextObject::GetAttributes</definition>
        <argsstring>() const</argsstring>
        <name>GetAttributes</name>
        <briefdescription>
<para>Returns the object&apos;s attributes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2483" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1a1c2402da5ebb3f20cdd820b615838933" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_rich_text_attr" kindref="compound">wxRichTextAttr</ref> &amp;</type>
        <definition>wxRichTextAttr&amp; wxRichTextObject::GetAttributes</definition>
        <argsstring>()</argsstring>
        <name>GetAttributes</name>
        <briefdescription>
<para>Returns the object&apos;s attributes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2488" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1ae78dcd0a4e1ded6302c1b4cce4144ad8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_rich_text_properties" kindref="compound">wxRichTextProperties</ref> &amp;</type>
        <definition>wxRichTextProperties&amp; wxRichTextObject::GetProperties</definition>
        <argsstring>()</argsstring>
        <name>GetProperties</name>
        <briefdescription>
<para>Returns the object&apos;s properties. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2493" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1a3f6db6108dc3ec6051394f1018e1e623" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classwx_rich_text_properties" kindref="compound">wxRichTextProperties</ref> &amp;</type>
        <definition>const wxRichTextProperties&amp; wxRichTextObject::GetProperties</definition>
        <argsstring>() const</argsstring>
        <name>GetProperties</name>
        <briefdescription>
<para>Returns the object&apos;s properties. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2498" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1a13c33b7e80a60b1d76b320680983aa4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxRichTextObject::SetProperties</definition>
        <argsstring>(const wxRichTextProperties &amp;props)</argsstring>
        <name>SetProperties</name>
        <param>
          <type>const <ref refid="classwx_rich_text_properties" kindref="compound">wxRichTextProperties</ref> &amp;</type>
          <declname>props</declname>
        </param>
        <briefdescription>
<para>Sets the object&apos;s properties. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2503" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1aba580ffb36a1b59f70deeede41ef0b7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxRichTextObject::SetDescent</definition>
        <argsstring>(int descent)</argsstring>
        <name>SetDescent</name>
        <param>
          <type>int</type>
          <declname>descent</declname>
        </param>
        <briefdescription>
<para>Sets the stored descent value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2508" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1a6937e7da544e0a0422a8f74d8074853b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxRichTextObject::GetDescent</definition>
        <argsstring>() const</argsstring>
        <name>GetDescent</name>
        <briefdescription>
<para>Returns the stored descent value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2513" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1a00f84f4d448cf61bbb5239683d4c0762" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_rich_text_buffer" kindref="compound">wxRichTextBuffer</ref> *</type>
        <definition>wxRichTextBuffer* wxRichTextObject::GetBuffer</definition>
        <argsstring>() const</argsstring>
        <name>GetBuffer</name>
        <briefdescription>
<para>Returns the containing buffer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2518" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1a228e281da67b7c61ac4829992ff183bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxRichTextObject::SetName</definition>
        <argsstring>(const wxString &amp;name)</argsstring>
        <name>SetName</name>
        <param>
          <type>const <ref refid="classwx_string" kindref="compound">wxString</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Sets the identifying name for this object as a property using the &quot;name&quot; key. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2523" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1a3435f588eec4162a42ac0d9fd78b9155" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_string" kindref="compound">wxString</ref></type>
        <definition>wxString wxRichTextObject::GetName</definition>
        <argsstring>() const</argsstring>
        <name>GetName</name>
        <briefdescription>
<para>Returns the identifying name for this object from the properties, using the &quot;name&quot; key. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2528" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1abaca17399348b08be89f129dda6bcd1f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxRichTextObject::IsTopLevel</definition>
        <argsstring>() const</argsstring>
        <name>IsTopLevel</name>
        <reimplementedby refid="classwx_rich_text_paragraph_layout_box_1a9b0282688f73ce267797ca025cbe0072">IsTopLevel</reimplementedby>
        <reimplementedby refid="classwx_rich_text_field_1aa2fed25cc884b695b13361ccc9736432">IsTopLevel</reimplementedby>
        <briefdescription>
<para>Returns true if this object is top-level, i.e. contains its own paragraphs, such as a text box. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2533" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1abb9e9cee48e725c78e2d7a9a5c31d48e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxRichTextObject::IsShown</definition>
        <argsstring>() const</argsstring>
        <name>IsShown</name>
        <briefdescription>
<para>Returns true if the object will be shown, false otherwise. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2538" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1a7346bc1dc24479957ff322969094377a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxRichTextObject::Show</definition>
        <argsstring>(bool show)</argsstring>
        <name>Show</name>
        <param>
          <type>bool</type>
          <declname>show</declname>
        </param>
        <briefdescription>
<para>Call to show or hide this object. </para>        </briefdescription>
        <detaileddescription>
<para>This function does not cause the content to be laid out or redrawn. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2546" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1a132ab3eb9ad2cfff334abfa983befa64" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_rich_text_object" kindref="compound">wxRichTextObject</ref> *</type>
        <definition>virtual wxRichTextObject* wxRichTextObject::Clone</definition>
        <argsstring>() const</argsstring>
        <name>Clone</name>
        <reimplementedby refid="classwx_rich_text_paragraph_layout_box_1a2b41e095bfa1e52a98f0eae8e244ab32">Clone</reimplementedby>
        <reimplementedby refid="classwx_rich_text_box_1a1b758a9c31679d002efb903e69295128">Clone</reimplementedby>
        <reimplementedby refid="classwx_rich_text_field_1aabdcd43819c46b7d516f13d07e584d57">Clone</reimplementedby>
        <reimplementedby refid="classwx_rich_text_paragraph_1a340b5a3f4439e1d4fd47b01b038b9f8c">Clone</reimplementedby>
        <reimplementedby refid="classwx_rich_text_plain_text_1a16de5c19c3b7063fc2e0755ff6953b75">Clone</reimplementedby>
        <reimplementedby refid="classwx_rich_text_image_1afb8a55c09864f22c86aeabdc3e13a27c">Clone</reimplementedby>
        <reimplementedby refid="classwx_rich_text_buffer_1ae78b41fdbc885ca484ac530bec28dfda">Clone</reimplementedby>
        <reimplementedby refid="classwx_rich_text_cell_1a4e7a1992a54be32ba64fe7054285032d">Clone</reimplementedby>
        <reimplementedby refid="classwx_rich_text_table_1a4bd9615e569f79f7bdb87b3448a1b3d3">Clone</reimplementedby>
        <briefdescription>
<para>Clones the object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2551" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1a0cc072c62eb1b6bacf09fd38101274cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxRichTextObject::Copy</definition>
        <argsstring>(const wxRichTextObject &amp;obj)</argsstring>
        <name>Copy</name>
        <param>
          <type>const <ref refid="classwx_rich_text_object" kindref="compound">wxRichTextObject</ref> &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Copies the object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2556" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1a1c380d0908d2121c6aad114ba8e19cd5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxRichTextObject::Reference</definition>
        <argsstring>()</argsstring>
        <name>Reference</name>
        <briefdescription>
<para>Reference-counting allows us to use the same object in multiple lists (not yet used). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2563" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1a7ff137a3eea87599a9d29a34f236664e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxRichTextObject::Dereference</definition>
        <argsstring>()</argsstring>
        <name>Dereference</name>
        <briefdescription>
<para>Reference-counting allows us to use the same object in multiple lists (not yet used). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2569" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1a120eeb05778458428e92c3528ccfba03" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void wxRichTextObject::Move</definition>
        <argsstring>(const wxPoint &amp;pt)</argsstring>
        <name>Move</name>
        <reimplementedby refid="classwx_rich_text_composite_object_1a972cfc5642595f484850c0d3e75c92ff">Move</reimplementedby>
        <param>
          <type>const <ref refid="classwx_point" kindref="compound">wxPoint</ref> &amp;</type>
          <declname>pt</declname>
        </param>
        <briefdescription>
<para>Moves the object recursively, by adding the offset from old to new. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2574" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1ae2e8da5396a81d45154e79bace382f4e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxRichTextObject::ConvertTenthsMMToPixels</definition>
        <argsstring>(wxDC &amp;dc, int units) const</argsstring>
        <name>ConvertTenthsMMToPixels</name>
        <param>
          <type><ref refid="classwx_d_c" kindref="compound">wxDC</ref> &amp;</type>
          <declname>dc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>units</declname>
        </param>
        <briefdescription>
<para>Converts units in tenths of a millimetre to device units. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2579" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1a970cf24913e4895f954def198913d3de" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int wxRichTextObject::ConvertPixelsToTenthsMM</definition>
        <argsstring>(wxDC &amp;dc, int pixels) const</argsstring>
        <name>ConvertPixelsToTenthsMM</name>
        <param>
          <type><ref refid="classwx_d_c" kindref="compound">wxDC</ref> &amp;</type>
          <declname>dc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pixels</declname>
        </param>
        <briefdescription>
<para>Convert units in pixels to tenths of a millimetre. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2589" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classwx_rich_text_object_1a5bd92fad77d258b0953627c1270a1a5c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int wxRichTextObject::ConvertTenthsMMToPixels</definition>
        <argsstring>(int ppi, int units, double scale=1.0)</argsstring>
        <name>ConvertTenthsMMToPixels</name>
        <param>
          <type>int</type>
          <declname>ppi</declname>
        </param>
        <param>
          <type>int</type>
          <declname>units</declname>
        </param>
        <param>
          <type>double</type>
          <declname>scale</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
<para>Converts units in tenths of a millimetre to device units. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2584" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1aa582aba937334f039ab903b826787058" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int wxRichTextObject::ConvertPixelsToTenthsMM</definition>
        <argsstring>(int ppi, int pixels, double scale=1.0)</argsstring>
        <name>ConvertPixelsToTenthsMM</name>
        <param>
          <type>int</type>
          <declname>ppi</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pixels</declname>
        </param>
        <param>
          <type>double</type>
          <declname>scale</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
<para>Convert units in pixels to tenths of a millimetre. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2594" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1a0b02aac99c7d13b89c8ba3f26229c2e2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool wxRichTextObject::DrawBoxAttributes</definition>
        <argsstring>(wxDC &amp;dc, wxRichTextBuffer *buffer, const wxRichTextAttr &amp;attr, const wxRect &amp;boxRect, int flags=0, wxRichTextObject *obj=NULL)</argsstring>
        <name>DrawBoxAttributes</name>
        <param>
          <type><ref refid="classwx_d_c" kindref="compound">wxDC</ref> &amp;</type>
          <declname>dc</declname>
        </param>
        <param>
          <type><ref refid="classwx_rich_text_buffer" kindref="compound">wxRichTextBuffer</ref> *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_rich_text_attr" kindref="compound">wxRichTextAttr</ref> &amp;</type>
          <declname>attr</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_rect" kindref="compound">wxRect</ref> &amp;</type>
          <declname>boxRect</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="classwx_rich_text_object" kindref="compound">wxRichTextObject</ref> *</type>
          <declname>obj</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Draws the borders and background for the given rectangle and attributes. </para>        </briefdescription>
        <detaileddescription>
<para><emphasis>boxRect</emphasis> is taken to be the outer margin box, not the box around the content. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2600" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1a4f415917e184888f4471d752d0353031" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool wxRichTextObject::DrawBorder</definition>
        <argsstring>(wxDC &amp;dc, wxRichTextBuffer *buffer, const wxTextAttrBorders &amp;attr, const wxRect &amp;rect, int flags=0)</argsstring>
        <name>DrawBorder</name>
        <param>
          <type><ref refid="classwx_d_c" kindref="compound">wxDC</ref> &amp;</type>
          <declname>dc</declname>
        </param>
        <param>
          <type><ref refid="classwx_rich_text_buffer" kindref="compound">wxRichTextBuffer</ref> *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_text_attr_borders" kindref="compound">wxTextAttrBorders</ref> &amp;</type>
          <declname>attr</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_rect" kindref="compound">wxRect</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Draws a border. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2605" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1a83fbb3a582041933320491c304716c19" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool wxRichTextObject::GetBoxRects</definition>
        <argsstring>(wxDC &amp;dc, wxRichTextBuffer *buffer, const wxRichTextAttr &amp;attr, wxRect &amp;marginRect, wxRect &amp;borderRect, wxRect &amp;contentRect, wxRect &amp;paddingRect, wxRect &amp;outlineRect)</argsstring>
        <name>GetBoxRects</name>
        <param>
          <type><ref refid="classwx_d_c" kindref="compound">wxDC</ref> &amp;</type>
          <declname>dc</declname>
        </param>
        <param>
          <type><ref refid="classwx_rich_text_buffer" kindref="compound">wxRichTextBuffer</ref> *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_rich_text_attr" kindref="compound">wxRichTextAttr</ref> &amp;</type>
          <declname>attr</declname>
        </param>
        <param>
          <type><ref refid="classwx_rect" kindref="compound">wxRect</ref> &amp;</type>
          <declname>marginRect</declname>
        </param>
        <param>
          <type><ref refid="classwx_rect" kindref="compound">wxRect</ref> &amp;</type>
          <declname>borderRect</declname>
        </param>
        <param>
          <type><ref refid="classwx_rect" kindref="compound">wxRect</ref> &amp;</type>
          <declname>contentRect</declname>
        </param>
        <param>
          <type><ref refid="classwx_rect" kindref="compound">wxRect</ref> &amp;</type>
          <declname>paddingRect</declname>
        </param>
        <param>
          <type><ref refid="classwx_rect" kindref="compound">wxRect</ref> &amp;</type>
          <declname>outlineRect</declname>
        </param>
        <briefdescription>
<para>Returns the various rectangles of the box model in pixels. </para>        </briefdescription>
        <detaileddescription>
<para>You can either specify <emphasis>contentRect</emphasis> (inner) or <emphasis>marginRect</emphasis> (outer), and the other must be the default rectangle (no width or height). Note that the outline doesn&apos;t affect the position of the rectangle, it&apos;s drawn in whatever space is available. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2613" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1a53bd3bc25232fe0147be88d480732628" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool wxRichTextObject::GetTotalMargin</definition>
        <argsstring>(wxDC &amp;dc, wxRichTextBuffer *buffer, const wxRichTextAttr &amp;attr, int &amp;leftMargin, int &amp;rightMargin, int &amp;topMargin, int &amp;bottomMargin)</argsstring>
        <name>GetTotalMargin</name>
        <param>
          <type><ref refid="classwx_d_c" kindref="compound">wxDC</ref> &amp;</type>
          <declname>dc</declname>
        </param>
        <param>
          <type><ref refid="classwx_rich_text_buffer" kindref="compound">wxRichTextBuffer</ref> *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_rich_text_attr" kindref="compound">wxRichTextAttr</ref> &amp;</type>
          <declname>attr</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>leftMargin</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>rightMargin</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>topMargin</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>bottomMargin</declname>
        </param>
        <briefdescription>
<para>Returns the total margin for the object in pixels, taking into account margin, padding and border size. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2620" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_rich_text_object_1adc43eb3cd639c5b0934fbed69d528127" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_rect" kindref="compound">wxRect</ref></type>
        <definition>static wxRect wxRichTextObject::AdjustAvailableSpace</definition>
        <argsstring>(wxDC &amp;dc, wxRichTextBuffer *buffer, const wxRichTextAttr &amp;parentAttr, const wxRichTextAttr &amp;childAttr, const wxRect &amp;availableParentSpace, const wxRect &amp;availableContainerSpace)</argsstring>
        <name>AdjustAvailableSpace</name>
        <param>
          <type><ref refid="classwx_d_c" kindref="compound">wxDC</ref> &amp;</type>
          <declname>dc</declname>
        </param>
        <param>
          <type><ref refid="classwx_rich_text_buffer" kindref="compound">wxRichTextBuffer</ref> *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_rich_text_attr" kindref="compound">wxRichTextAttr</ref> &amp;</type>
          <declname>parentAttr</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_rich_text_attr" kindref="compound">wxRichTextAttr</ref> &amp;</type>
          <declname>childAttr</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_rect" kindref="compound">wxRect</ref> &amp;</type>
          <declname>availableParentSpace</declname>
        </param>
        <param>
          <type>const <ref refid="classwx_rect" kindref="compound">wxRect</ref> &amp;</type>
          <declname>availableContainerSpace</declname>
        </param>
        <briefdescription>
<para>Returns the rectangle which the child has available to it given restrictions specified in the child attribute, e.g. </para>        </briefdescription>
        <detaileddescription>
<para>50% width of the parent, 400 pixels, x position 20% of the parent, etc. availableContainerSpace might be a parent that the cell has to compute its width relative to. E.g. a cell that&apos;s 50% of its parent. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/richtext/richtextbuffer.h" line="2629" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This is the base for drawable rich text objects. </para>    </briefdescription>
    <detaileddescription>
<para><heading level="2"></heading>
</para><para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxrichtext" kindref="member">wxRichText</ref> &lt;&gt;&lt; =&apos;&apos;&gt;:&lt;/&gt;&amp;;&amp;;&lt; =&apos;&apos;&gt;\ &lt;/&gt;&lt;/&gt;</para><para><simplesect kind="see"><para><ref refid="classwx_rich_text_buffer" kindref="compound">wxRichTextBuffer</ref>, <ref refid="classwx_rich_text_ctrl" kindref="compound">wxRichTextCtrl</ref> </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="6718">
        <label>wxRichTextObject</label>
        <link refid="classwx_rich_text_object"/>
        <childnode refid="6719" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6719">
        <label>wxObject</label>
        <link refid="classwx_object"/>
      </node>
      <node id="6720">
        <label>wxRichTextCompositeObject</label>
        <link refid="classwx_rich_text_composite_object"/>
        <childnode refid="6718" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6723">
        <label>wxRichTextBox</label>
        <link refid="classwx_rich_text_box"/>
        <childnode refid="6722" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6725">
        <label>wxRichTextTable</label>
        <link refid="classwx_rich_text_table"/>
        <childnode refid="6723" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6721">
        <label>wxRichTextParagraph</label>
        <link refid="classwx_rich_text_paragraph"/>
        <childnode refid="6720" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6724">
        <label>wxRichTextCell</label>
        <link refid="classwx_rich_text_cell"/>
        <childnode refid="6723" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6728">
        <label>wxRichTextImage</label>
        <link refid="classwx_rich_text_image"/>
        <childnode refid="6718" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6727">
        <label>wxRichTextField</label>
        <link refid="classwx_rich_text_field"/>
        <childnode refid="6722" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6729">
        <label>wxRichTextPlainText</label>
        <link refid="classwx_rich_text_plain_text"/>
        <childnode refid="6718" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6726">
        <label>wxRichTextBuffer</label>
        <link refid="classwx_rich_text_buffer"/>
        <childnode refid="6722" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6722">
        <label>wxRichTextParagraphLayoutBox</label>
        <link refid="classwx_rich_text_paragraph_layout_box"/>
        <childnode refid="6720" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6741">
        <label>wxString</label>
        <link refid="classwx_string"/>
      </node>
      <node id="6730">
        <label>wxRichTextObject</label>
        <link refid="classwx_rich_text_object"/>
        <childnode refid="6731" relation="public-inheritance">
        </childnode>
        <childnode refid="6733" relation="usage">
          <edgelabel>m_size</edgelabel>
          <edgelabel>m_minSize</edgelabel>
          <edgelabel>m_maxSize</edgelabel>
        </childnode>
        <childnode refid="6734" relation="usage">
          <edgelabel>m_pos</edgelabel>
        </childnode>
        <childnode refid="6735" relation="usage">
          <edgelabel>m_attributes</edgelabel>
        </childnode>
        <childnode refid="6744" relation="usage">
          <edgelabel>m_properties</edgelabel>
        </childnode>
        <childnode refid="6730" relation="usage">
          <edgelabel>m_parent</edgelabel>
        </childnode>
        <childnode refid="6745" relation="usage">
          <edgelabel>m_ownRange</edgelabel>
          <edgelabel>m_range</edgelabel>
        </childnode>
      </node>
      <node id="6743">
        <label>wxTextAttrBorder</label>
        <link refid="classwx_text_attr_border"/>
        <childnode refid="6739" relation="usage">
          <edgelabel>m_borderWidth</edgelabel>
        </childnode>
      </node>
      <node id="6731">
        <label>wxObject</label>
        <link refid="classwx_object"/>
        <childnode refid="6732" relation="usage">
          <edgelabel>m_refData</edgelabel>
        </childnode>
      </node>
      <node id="6744">
        <label>wxRichTextProperties</label>
        <link refid="classwx_rich_text_properties"/>
        <childnode refid="6731" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6745">
        <label>wxRichTextRange</label>
        <link refid="classwx_rich_text_range"/>
      </node>
      <node id="6733">
        <label>wxSize</label>
        <link refid="classwx_size"/>
      </node>
      <node id="6736">
        <label>wxTextAttr</label>
        <link refid="classwx_text_attr"/>
      </node>
      <node id="6735">
        <label>wxRichTextAttr</label>
        <link refid="classwx_rich_text_attr"/>
        <childnode refid="6736" relation="public-inheritance">
        </childnode>
        <childnode refid="6737" relation="usage">
          <edgelabel>m_textBoxAttr</edgelabel>
        </childnode>
      </node>
      <node id="6737">
        <label>wxTextBoxAttr</label>
        <link refid="classwx_text_box_attr"/>
        <childnode refid="6738" relation="usage">
          <edgelabel>m_size</edgelabel>
          <edgelabel>m_minSize</edgelabel>
          <edgelabel>m_maxSize</edgelabel>
        </childnode>
        <childnode refid="6740" relation="usage">
          <edgelabel>m_margins</edgelabel>
          <edgelabel>m_padding</edgelabel>
          <edgelabel>m_position</edgelabel>
        </childnode>
        <childnode refid="6741" relation="usage">
          <edgelabel>m_boxStyleName</edgelabel>
        </childnode>
        <childnode refid="6742" relation="usage">
          <edgelabel>m_border</edgelabel>
          <edgelabel>m_outline</edgelabel>
        </childnode>
      </node>
      <node id="6740">
        <label>wxTextAttrDimensions</label>
        <link refid="classwx_text_attr_dimensions"/>
        <childnode refid="6739" relation="usage">
          <edgelabel>m_left</edgelabel>
          <edgelabel>m_bottom</edgelabel>
          <edgelabel>m_top</edgelabel>
          <edgelabel>m_right</edgelabel>
        </childnode>
      </node>
      <node id="6738">
        <label>wxTextAttrSize</label>
        <link refid="classwx_text_attr_size"/>
        <childnode refid="6739" relation="usage">
          <edgelabel>m_width</edgelabel>
          <edgelabel>m_height</edgelabel>
        </childnode>
      </node>
      <node id="6739">
        <label>wxTextAttrDimension</label>
        <link refid="classwx_text_attr_dimension"/>
      </node>
      <node id="6734">
        <label>wxPoint</label>
        <link refid="classwx_point"/>
      </node>
      <node id="6742">
        <label>wxTextAttrBorders</label>
        <link refid="classwx_text_attr_borders"/>
        <childnode refid="6743" relation="usage">
          <edgelabel>m_left</edgelabel>
          <edgelabel>m_bottom</edgelabel>
          <edgelabel>m_top</edgelabel>
          <edgelabel>m_right</edgelabel>
        </childnode>
      </node>
      <node id="6732">
        <label>wxObjectRefData</label>
        <link refid="classwx_object_ref_data"/>
      </node>
    </collaborationgraph>
    <location file="interface/wx/richtext/richtextbuffer.h" line="2078" column="1" bodyfile="interface/wx/richtext/richtextbuffer.h" bodystart="2077" bodyend="2654"/>
    <listofallmembers>
      <member refid="classwx_rich_text_object_1a66588efdeeb790bc6738aeeeb1f3367d" prot="public" virt="virtual"><scope>wxRichTextObject</scope><name>AcceptsFocus</name></member>
      <member refid="classwx_rich_text_object_1a591ee431cd21bbde31b102231e79d8a1" prot="public" virt="virtual"><scope>wxRichTextObject</scope><name>AdjustAttributes</name></member>
      <member refid="classwx_rich_text_object_1adc43eb3cd639c5b0934fbed69d528127" prot="public" virt="non-virtual"><scope>wxRichTextObject</scope><name>AdjustAvailableSpace</name></member>
      <member refid="classwx_object_1a60204063f3cc3aa2fa1c7ff5bda9eb13" prot="protected" virt="non-virtual"><scope>wxRichTextObject</scope><name>AllocExclusive</name></member>
      <member refid="classwx_rich_text_object_1ae92b6bee8556ffe72a67f8a9a83a6d5b" prot="public" virt="virtual"><scope>wxRichTextObject</scope><name>CalculateRange</name></member>
      <member refid="classwx_rich_text_object_1afe4a68694490ae90052a1b6614b9e897" prot="public" virt="virtual"><scope>wxRichTextObject</scope><name>CanEditProperties</name></member>
      <member refid="classwx_rich_text_object_1a388d09a56e73bc37ee322b4197551e70" prot="public" virt="virtual"><scope>wxRichTextObject</scope><name>CanMerge</name></member>
      <member refid="classwx_rich_text_object_1a1c8132e6a920eb979621f0168a0a07d5" prot="public" virt="virtual"><scope>wxRichTextObject</scope><name>CanSplit</name></member>
      <member refid="classwx_rich_text_object_1a132ab3eb9ad2cfff334abfa983befa64" prot="public" virt="virtual"><scope>wxRichTextObject</scope><name>Clone</name></member>
      <member refid="classwx_object_1a436fc8fe68cf8a31000296d9cd3d2427" prot="protected" virt="virtual"><scope>wxRichTextObject</scope><name>CloneRefData</name></member>
      <member refid="classwx_rich_text_object_1a970cf24913e4895f954def198913d3de" prot="public" virt="non-virtual"><scope>wxRichTextObject</scope><name>ConvertPixelsToTenthsMM</name></member>
      <member refid="classwx_rich_text_object_1aa582aba937334f039ab903b826787058" prot="public" virt="non-virtual"><scope>wxRichTextObject</scope><name>ConvertPixelsToTenthsMM</name></member>
      <member refid="classwx_rich_text_object_1ae2e8da5396a81d45154e79bace382f4e" prot="public" virt="non-virtual"><scope>wxRichTextObject</scope><name>ConvertTenthsMMToPixels</name></member>
      <member refid="classwx_rich_text_object_1a5bd92fad77d258b0953627c1270a1a5c" prot="public" virt="non-virtual"><scope>wxRichTextObject</scope><name>ConvertTenthsMMToPixels</name></member>
      <member refid="classwx_rich_text_object_1a0cc072c62eb1b6bacf09fd38101274cf" prot="public" virt="non-virtual"><scope>wxRichTextObject</scope><name>Copy</name></member>
      <member refid="classwx_object_1a3f4f497c65cef611e121c41f21dd5ccc" prot="protected" virt="virtual"><scope>wxRichTextObject</scope><name>CreateRefData</name></member>
      <member refid="classwx_rich_text_object_1aa4c3e145d867c539574db19d55ea60bc" prot="public" virt="virtual"><scope>wxRichTextObject</scope><name>DeleteRange</name></member>
      <member refid="classwx_rich_text_object_1a7ff137a3eea87599a9d29a34f236664e" prot="public" virt="non-virtual"><scope>wxRichTextObject</scope><name>Dereference</name></member>
      <member refid="classwx_rich_text_object_1a54f5d9610815ff94b2f579660eacc496" prot="public" virt="virtual"><scope>wxRichTextObject</scope><name>DoSplit</name></member>
      <member refid="classwx_rich_text_object_1a6b38fa20816060d1272c5b7f4678a843" prot="public" virt="pure-virtual"><scope>wxRichTextObject</scope><name>Draw</name></member>
      <member refid="classwx_rich_text_object_1a4f415917e184888f4471d752d0353031" prot="public" virt="non-virtual"><scope>wxRichTextObject</scope><name>DrawBorder</name></member>
      <member refid="classwx_rich_text_object_1a0b02aac99c7d13b89c8ba3f26229c2e2" prot="public" virt="non-virtual"><scope>wxRichTextObject</scope><name>DrawBoxAttributes</name></member>
      <member refid="classwx_rich_text_object_1aefee2fedfcaae5722d76647ff061beb8" prot="public" virt="virtual"><scope>wxRichTextObject</scope><name>Dump</name></member>
      <member refid="classwx_rich_text_object_1a988c9871f0050a661ca61a0cf44f6ed4" prot="public" virt="virtual"><scope>wxRichTextObject</scope><name>EditProperties</name></member>
      <member refid="classwx_rich_text_object_1ada23487892212de2a2ded44741ed255b" prot="public" virt="virtual"><scope>wxRichTextObject</scope><name>FindPosition</name></member>
      <member refid="classwx_rich_text_object_1a7e690b5bfea130b020c5825d3dacfb7f" prot="public" virt="virtual"><scope>wxRichTextObject</scope><name>GetAbsolutePosition</name></member>
      <member refid="classwx_rich_text_object_1a81b02d30f62800094401bf3d009ede05" prot="public" virt="non-virtual"><scope>wxRichTextObject</scope><name>GetAttributes</name></member>
      <member refid="classwx_rich_text_object_1a1c2402da5ebb3f20cdd820b615838933" prot="public" virt="non-virtual"><scope>wxRichTextObject</scope><name>GetAttributes</name></member>
      <member refid="classwx_rich_text_object_1af2064d8b876da4c2f3cc48d7cbe0de76" prot="public" virt="virtual"><scope>wxRichTextObject</scope><name>GetAvailableContentArea</name></member>
      <member refid="classwx_rich_text_object_1a8e850d1a313fde7e6cd54c8d7db27938" prot="public" virt="virtual"><scope>wxRichTextObject</scope><name>GetBestSize</name></member>
      <member refid="classwx_rich_text_object_1a09e681bc141e0e040491e89135116fc3" prot="public" virt="virtual"><scope>wxRichTextObject</scope><name>GetBottomMargin</name></member>
      <member refid="classwx_rich_text_object_1a83fbb3a582041933320491c304716c19" prot="public" virt="non-virtual"><scope>wxRichTextObject</scope><name>GetBoxRects</name></member>
      <member refid="classwx_rich_text_object_1a00f84f4d448cf61bbb5239683d4c0762" prot="public" virt="non-virtual"><scope>wxRichTextObject</scope><name>GetBuffer</name></member>
      <member refid="classwx_rich_text_object_1a2edd5915d43f0a161255d68be03395e8" prot="public" virt="virtual"><scope>wxRichTextObject</scope><name>GetCachedSize</name></member>
      <member refid="classwx_object_1ae6d365f2556b26767ced8410c5e839d0" prot="public" virt="virtual"><scope>wxRichTextObject</scope><name>GetClassInfo</name></member>
      <member refid="classwx_rich_text_object_1a168079723eec1d0675e645ff1d3de11a" prot="public" virt="virtual"><scope>wxRichTextObject</scope><name>GetContainer</name></member>
      <member refid="classwx_rich_text_object_1a6937e7da544e0a0422a8f74d8074853b" prot="public" virt="non-virtual"><scope>wxRichTextObject</scope><name>GetDescent</name></member>
      <member refid="classwx_rich_text_object_1a57f431aeb760ce0cee6933e11800c872" prot="public" virt="virtual"><scope>wxRichTextObject</scope><name>GetFloatDirection</name></member>
      <member refid="classwx_rich_text_object_1ab902753d501b0a7435e31ca59e14ab67" prot="public" virt="virtual"><scope>wxRichTextObject</scope><name>GetLeftMargin</name></member>
      <member refid="classwx_rich_text_object_1a030799ad6d7df6c75eaeed5134932faa" prot="public" virt="virtual"><scope>wxRichTextObject</scope><name>GetMaxSize</name></member>
      <member refid="classwx_rich_text_object_1a2891ae0478b440b7c847d1b8b3724c60" prot="public" virt="virtual"><scope>wxRichTextObject</scope><name>GetMinSize</name></member>
      <member refid="classwx_rich_text_object_1a3435f588eec4162a42ac0d9fd78b9155" prot="public" virt="non-virtual"><scope>wxRichTextObject</scope><name>GetName</name></member>
      <member refid="classwx_rich_text_object_1a179d44d9d9408511cf3fdad00250bd51" prot="public" virt="virtual"><scope>wxRichTextObject</scope><name>GetNaturalSize</name></member>
      <member refid="classwx_rich_text_object_1a9bc6e2f3613f167c2a21f032c165874a" prot="public" virt="non-virtual"><scope>wxRichTextObject</scope><name>GetOwnRange</name></member>
      <member refid="classwx_rich_text_object_1acfdce17b44fc3939437a58e24e669ff3" prot="public" virt="non-virtual"><scope>wxRichTextObject</scope><name>GetOwnRange</name></member>
      <member refid="classwx_rich_text_object_1aaec43225e105e2040671ebdd2cb421b8" prot="public" virt="non-virtual"><scope>wxRichTextObject</scope><name>GetOwnRangeIfTopLevel</name></member>
      <member refid="classwx_rich_text_object_1acc12683546a7cfef6ee236e6fe8b591f" prot="public" virt="virtual"><scope>wxRichTextObject</scope><name>GetParent</name></member>
      <member refid="classwx_rich_text_object_1a90738ddbb01902713f547de30773bfb5" prot="public" virt="virtual"><scope>wxRichTextObject</scope><name>GetParentContainer</name></member>
      <member refid="classwx_rich_text_object_1a5f6329dbd80870c54d62350367a64ea0" prot="public" virt="virtual"><scope>wxRichTextObject</scope><name>GetPosition</name></member>
      <member refid="classwx_rich_text_object_1ae78dcd0a4e1ded6302c1b4cce4144ad8" prot="public" virt="non-virtual"><scope>wxRichTextObject</scope><name>GetProperties</name></member>
      <member refid="classwx_rich_text_object_1a3f6db6108dc3ec6051394f1018e1e623" prot="public" virt="non-virtual"><scope>wxRichTextObject</scope><name>GetProperties</name></member>
      <member refid="classwx_rich_text_object_1a07dc6cf8d17350df5a1260d398a97177" prot="public" virt="virtual"><scope>wxRichTextObject</scope><name>GetPropertiesMenuLabel</name></member>
      <member refid="classwx_rich_text_object_1a7e47b798aa604c919850dad73ccdf9c2" prot="public" virt="non-virtual"><scope>wxRichTextObject</scope><name>GetRange</name></member>
      <member refid="classwx_rich_text_object_1a9156b00beb79c9e581612389ddd48f75" prot="public" virt="non-virtual"><scope>wxRichTextObject</scope><name>GetRange</name></member>
      <member refid="classwx_rich_text_object_1aba9a1b5ccbcf386f880e45e62d3d387f" prot="public" virt="pure-virtual"><scope>wxRichTextObject</scope><name>GetRangeSize</name></member>
      <member refid="classwx_rich_text_object_1adfc953ad9b8064746af6d3dd4e76afd3" prot="public" virt="virtual"><scope>wxRichTextObject</scope><name>GetRect</name></member>
      <member refid="classwx_object_1af3c6c76a775864832f1536d3c0de3a2b" prot="public" virt="non-virtual"><scope>wxRichTextObject</scope><name>GetRefData</name></member>
      <member refid="classwx_rich_text_object_1a3dac4d63560660438f74c7f11c9767e8" prot="public" virt="virtual"><scope>wxRichTextObject</scope><name>GetRightMargin</name></member>
      <member refid="classwx_rich_text_object_1a2f700ec707fff1956785a48d6824be77" prot="public" virt="virtual"><scope>wxRichTextObject</scope><name>GetSelection</name></member>
      <member refid="classwx_rich_text_object_1a7dec3176e3ad40bbca44ebd4aaeb229d" prot="public" virt="virtual"><scope>wxRichTextObject</scope><name>GetTextForRange</name></member>
      <member refid="classwx_rich_text_object_1a1453e5d422874d4b15fcc2c885e301bb" prot="public" virt="virtual"><scope>wxRichTextObject</scope><name>GetTopMargin</name></member>
      <member refid="classwx_rich_text_object_1a53bd3bc25232fe0147be88d480732628" prot="public" virt="non-virtual"><scope>wxRichTextObject</scope><name>GetTotalMargin</name></member>
      <member refid="classwx_rich_text_object_1adef22a86697af249d1ae3e7e34bbcaf3" prot="public" virt="virtual"><scope>wxRichTextObject</scope><name>GetXMLNodeName</name></member>
      <member refid="classwx_rich_text_object_1a88a6d9038361e944d6a0595e2cb6e3e5" prot="public" virt="virtual"><scope>wxRichTextObject</scope><name>HandlesChildSelections</name></member>
      <member refid="classwx_rich_text_object_1a89d7b260744b3b6ba2caa0ccd7cab3ce" prot="public" virt="virtual"><scope>wxRichTextObject</scope><name>HitTest</name></member>
      <member refid="classwx_rich_text_object_1aaec1b3467076b92a18a8a45bc82ac476" prot="public" virt="virtual"><scope>wxRichTextObject</scope><name>ImportFromXML</name></member>
      <member refid="classwx_rich_text_object_1ae28afefb6baa08aeb426d36d9e605ae0" prot="public" virt="virtual"><scope>wxRichTextObject</scope><name>Invalidate</name></member>
      <member refid="classwx_rich_text_object_1aa38180f12ef8072702cfddece912ed49" prot="public" virt="virtual"><scope>wxRichTextObject</scope><name>IsAtomic</name></member>
      <member refid="classwx_rich_text_object_1a96444f9f5c48828998d0dfaee41fa6d5" prot="public" virt="virtual"><scope>wxRichTextObject</scope><name>IsComposite</name></member>
      <member refid="classwx_rich_text_object_1a3d74d7ff54f98cf1538dab6e0551b742" prot="public" virt="virtual"><scope>wxRichTextObject</scope><name>IsEmpty</name></member>
      <member refid="classwx_rich_text_object_1a6375bd24f56c059c934f0ff9333b97cd" prot="public" virt="virtual"><scope>wxRichTextObject</scope><name>IsFloatable</name></member>
      <member refid="classwx_rich_text_object_1a4185a0f2f89b1af8c9319d58b97962e3" prot="public" virt="virtual"><scope>wxRichTextObject</scope><name>IsFloating</name></member>
      <member refid="classwx_object_1a3c7115ef4132dcee0c4fc34e84d7fced" prot="public" virt="non-virtual"><scope>wxRichTextObject</scope><name>IsKindOf</name></member>
      <member refid="classwx_object_1a059373c494c2369d7db2a556efef8ecf" prot="public" virt="non-virtual"><scope>wxRichTextObject</scope><name>IsSameAs</name></member>
      <member refid="classwx_rich_text_object_1abb9e9cee48e725c78e2d7a9a5c31d48e" prot="public" virt="non-virtual"><scope>wxRichTextObject</scope><name>IsShown</name></member>
      <member refid="classwx_rich_text_object_1abaca17399348b08be89f129dda6bcd1f" prot="public" virt="virtual"><scope>wxRichTextObject</scope><name>IsTopLevel</name></member>
      <member refid="classwx_rich_text_object_1a4dc323418f095b5a68c0629c77f77d9d" prot="public" virt="pure-virtual"><scope>wxRichTextObject</scope><name>Layout</name></member>
      <member refid="classwx_rich_text_object_1a207fff9a88e3bde658309d615bd29518" prot="public" virt="virtual"><scope>wxRichTextObject</scope><name>LayoutToBestSize</name></member>
      <member refid="classwx_rich_text_object_1abfda428cbcad6e98bb5c3b5e1e1fdbeb" prot="protected" virt="non-virtual"><scope>wxRichTextObject</scope><name>m_attributes</name></member>
      <member refid="classwx_rich_text_object_1a11d2eb57124f37163e3380752f29ae3b" prot="protected" virt="non-virtual"><scope>wxRichTextObject</scope><name>m_descent</name></member>
      <member refid="classwx_rich_text_object_1a1de7d6f9a0161940337499f3e2c435af" prot="protected" virt="non-virtual"><scope>wxRichTextObject</scope><name>m_maxSize</name></member>
      <member refid="classwx_rich_text_object_1a5f3c7ef5f2a4810552c9469544a425a3" prot="protected" virt="non-virtual"><scope>wxRichTextObject</scope><name>m_minSize</name></member>
      <member refid="classwx_rich_text_object_1ad5dbfa9994dc36033bd6b3ec0788c66d" prot="protected" virt="non-virtual"><scope>wxRichTextObject</scope><name>m_ownRange</name></member>
      <member refid="classwx_rich_text_object_1a95363ba559f3f9ba0cf67992391a4cd5" prot="protected" virt="non-virtual"><scope>wxRichTextObject</scope><name>m_parent</name></member>
      <member refid="classwx_rich_text_object_1a54877607aefc660eb096d597f5f571b8" prot="protected" virt="non-virtual"><scope>wxRichTextObject</scope><name>m_pos</name></member>
      <member refid="classwx_rich_text_object_1af2b36d1d5df497c7c1c795ca98b4f972" prot="protected" virt="non-virtual"><scope>wxRichTextObject</scope><name>m_properties</name></member>
      <member refid="classwx_rich_text_object_1a39f2fc10746006cca791047c5ca0dfb4" prot="protected" virt="non-virtual"><scope>wxRichTextObject</scope><name>m_range</name></member>
      <member refid="classwx_rich_text_object_1a46010f35ddb4d2104a16f4fe093dfd70" prot="protected" virt="non-virtual"><scope>wxRichTextObject</scope><name>m_refCount</name></member>
      <member refid="classwx_object_1a9e31954530a0abd54982effc443ed2b8" prot="protected" virt="non-virtual"><scope>wxRichTextObject</scope><name>m_refData</name></member>
      <member refid="classwx_rich_text_object_1a74dcf7cb3b3426d799b97fe20f696c55" prot="protected" virt="non-virtual"><scope>wxRichTextObject</scope><name>m_show</name></member>
      <member refid="classwx_rich_text_object_1a4ca6121d75119045c4b3872aaed911b8" prot="protected" virt="non-virtual"><scope>wxRichTextObject</scope><name>m_size</name></member>
      <member refid="classwx_rich_text_object_1ad70ee3cfab55a5e48fb604f915871843" prot="public" virt="virtual"><scope>wxRichTextObject</scope><name>Merge</name></member>
      <member refid="classwx_rich_text_object_1a120eeb05778458428e92c3528ccfba03" prot="public" virt="virtual"><scope>wxRichTextObject</scope><name>Move</name></member>
      <member refid="classwx_object_1a07b8f34f5afc5743195c5fed052f55d3" prot="public" virt="non-virtual"><scope>wxRichTextObject</scope><name>operator delete</name></member>
      <member refid="classwx_object_1a96fa423a1dbc212c8227a5d83825971f" prot="public" virt="non-virtual"><scope>wxRichTextObject</scope><name>operator new</name></member>
      <member refid="classwx_object_1a2f6f1aa51fe9fc2b1415ca4211a90e9e" prot="public" virt="non-virtual"><scope>wxRichTextObject</scope><name>Ref</name></member>
      <member refid="classwx_rich_text_object_1a1c380d0908d2121c6aad114ba8e19cd5" prot="public" virt="non-virtual"><scope>wxRichTextObject</scope><name>Reference</name></member>
      <member refid="classwx_rich_text_object_1a4829cfbe45213f9a8f6e66e09e517399" prot="public" virt="non-virtual"><scope>wxRichTextObject</scope><name>SetAttributes</name></member>
      <member refid="classwx_rich_text_object_1a8bd8debc46fb2621ea6b23aa73ddcb25" prot="public" virt="virtual"><scope>wxRichTextObject</scope><name>SetCachedSize</name></member>
      <member refid="classwx_rich_text_object_1aba580ffb36a1b59f70deeede41ef0b7b" prot="public" virt="non-virtual"><scope>wxRichTextObject</scope><name>SetDescent</name></member>
      <member refid="classwx_rich_text_object_1a3834dbf885e97fd8bd1e8732ddd2bf79" prot="public" virt="virtual"><scope>wxRichTextObject</scope><name>SetMargins</name></member>
      <member refid="classwx_rich_text_object_1a2e2e9f166eadacfca017d2dc33eefa13" prot="public" virt="virtual"><scope>wxRichTextObject</scope><name>SetMargins</name></member>
      <member refid="classwx_rich_text_object_1aadb78a01fffb53096c171d3c58b1adfc" prot="public" virt="virtual"><scope>wxRichTextObject</scope><name>SetMaxSize</name></member>
      <member refid="classwx_rich_text_object_1a8b31e9928b6f68dd17eed50106aaffda" prot="public" virt="virtual"><scope>wxRichTextObject</scope><name>SetMinSize</name></member>
      <member refid="classwx_rich_text_object_1a228e281da67b7c61ac4829992ff183bd" prot="public" virt="non-virtual"><scope>wxRichTextObject</scope><name>SetName</name></member>
      <member refid="classwx_rich_text_object_1a93e5f786c3f2d591df850678e1e0490f" prot="public" virt="non-virtual"><scope>wxRichTextObject</scope><name>SetOwnRange</name></member>
      <member refid="classwx_rich_text_object_1a20dfd3d8011aef58f658bf437e9ae7f2" prot="public" virt="virtual"><scope>wxRichTextObject</scope><name>SetParent</name></member>
      <member refid="classwx_rich_text_object_1ae7c9cff59495ff166cb72d4417d1f782" prot="public" virt="virtual"><scope>wxRichTextObject</scope><name>SetPosition</name></member>
      <member refid="classwx_rich_text_object_1a13c33b7e80a60b1d76b320680983aa4b" prot="public" virt="non-virtual"><scope>wxRichTextObject</scope><name>SetProperties</name></member>
      <member refid="classwx_rich_text_object_1a16b84f91b15cdd1c89df64a9c4197fad" prot="public" virt="non-virtual"><scope>wxRichTextObject</scope><name>SetRange</name></member>
      <member refid="classwx_object_1afab780710f2adc1bb33310e27590140b" prot="public" virt="non-virtual"><scope>wxRichTextObject</scope><name>SetRefData</name></member>
      <member refid="classwx_rich_text_object_1a7346bc1dc24479957ff322969094377a" prot="public" virt="virtual"><scope>wxRichTextObject</scope><name>Show</name></member>
      <member refid="classwx_rich_text_object_1a4fdd1d084816f375a467dbd555693d77" prot="public" virt="virtual"><scope>wxRichTextObject</scope><name>Split</name></member>
      <member refid="classwx_object_1af51efc6b1ae632fc7f0cd7ebbce9fa36" prot="public" virt="non-virtual"><scope>wxRichTextObject</scope><name>UnRef</name></member>
      <member refid="classwx_object_1a74b40e42d19a4b9e9bec0b57d62a5725" prot="public" virt="non-virtual"><scope>wxRichTextObject</scope><name>UnShare</name></member>
      <member refid="classwx_rich_text_object_1a7e7b5386f084a1063ef418d384844030" prot="public" virt="virtual"><scope>wxRichTextObject</scope><name>UsesParagraphAttributes</name></member>
      <member refid="classwx_object_1acaa378363a28af421ab56ad7b46eadf0" prot="public" virt="non-virtual"><scope>wxRichTextObject</scope><name>wxObject</name></member>
      <member refid="classwx_object_1a4721b4dc9b7aff0f30904ba2ea3954cf" prot="public" virt="non-virtual"><scope>wxRichTextObject</scope><name>wxObject</name></member>
      <member refid="classwx_rich_text_object_1ae4fdbd4a8097fdc7f02a3e0172b58169" prot="public" virt="non-virtual"><scope>wxRichTextObject</scope><name>wxRichTextObject</name></member>
      <member refid="classwx_object_1a2a51aa8bfbab47ca2f051bcf84b3f35b" prot="public" virt="virtual"><scope>wxRichTextObject</scope><name>~wxObject</name></member>
      <member refid="classwx_rich_text_object_1a8908daf9460edf3623fee7334301ba35" prot="public" virt="virtual"><scope>wxRichTextObject</scope><name>~wxRichTextObject</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
