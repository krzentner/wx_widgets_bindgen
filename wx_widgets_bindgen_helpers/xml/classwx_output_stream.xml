<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classwx_output_stream" kind="class" language="C++" prot="public">
    <compoundname>wxOutputStream</compoundname>
    <basecompoundref refid="classwx_stream_base" prot="public" virt="non-virtual">wxStreamBase</basecompoundref>
    <derivedcompoundref refid="classwx_counting_output_stream" prot="public" virt="non-virtual">wxCountingOutputStream</derivedcompoundref>
    <derivedcompoundref refid="classwx_f_file_output_stream" prot="public" virt="non-virtual">wxFFileOutputStream</derivedcompoundref>
    <derivedcompoundref refid="classwx_file_output_stream" prot="public" virt="non-virtual">wxFileOutputStream</derivedcompoundref>
    <derivedcompoundref refid="classwx_filter_output_stream" prot="public" virt="non-virtual">wxFilterOutputStream</derivedcompoundref>
    <derivedcompoundref refid="classwx_memory_output_stream" prot="public" virt="non-virtual">wxMemoryOutputStream</derivedcompoundref>
    <derivedcompoundref refid="classwx_socket_output_stream" prot="public" virt="non-virtual">wxSocketOutputStream</derivedcompoundref>
    <derivedcompoundref refid="classwx_string_output_stream" prot="public" virt="non-virtual">wxStringOutputStream</derivedcompoundref>
    <derivedcompoundref refid="classwx_temp_file_output_stream" prot="public" virt="non-virtual">wxTempFileOutputStream</derivedcompoundref>
    <includes local="no">wx/stream.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_output_stream_1ab2391df744df6ec2d4e4e3f561c51118" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wxOutputStream::wxOutputStream</definition>
        <argsstring>()</argsstring>
        <name>wxOutputStream</name>
        <briefdescription>
<para>Creates a dummy <ref refid="classwx_output_stream" kindref="compound">wxOutputStream</ref> object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/stream.h" line="471" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_output_stream_1aadf4d69a6ab7430e99ecb8d02feecfd3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual wxOutputStream::~wxOutputStream</definition>
        <argsstring>()</argsstring>
        <name>~wxOutputStream</name>
        <briefdescription>
<para>Destructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/stream.h" line="476" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_output_stream_1a1c306ce99990d525921f8f6ae8432083" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool wxOutputStream::Close</definition>
        <argsstring>()</argsstring>
        <name>Close</name>
        <reimplementedby refid="classwx_archive_output_stream_1a2d6ec4ddefa626a2400985c676bfbfea">Close</reimplementedby>
        <reimplementedby refid="classwx_tar_output_stream_1a28f6073ef5557fb488b1a7142d0ba882">Close</reimplementedby>
        <reimplementedby refid="classwx_zip_output_stream_1a8c1c85831fa28ddca211200fd315ad04">Close</reimplementedby>
        <briefdescription>
<para>Closes the stream, returning false if an error occurs. </para>        </briefdescription>
        <detaileddescription>
<para>The stream is closed implicitly in the destructor if <ref refid="classwx_output_stream_1a1c306ce99990d525921f8f6ae8432083" kindref="member">Close()</ref> is not called explicitly.</para><para>If this stream wraps another stream or some other resource such as a file, then the underlying resource is closed too if it is owned by this stream, or left open otherwise. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/stream.h" line="487" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_output_stream_1ac21c598e20937355e538fdf2e2926164" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>size_t</type>
        <definition>virtual size_t wxOutputStream::LastWrite</definition>
        <argsstring>() const</argsstring>
        <name>LastWrite</name>
        <briefdescription>
<para>Returns the number of bytes written during the last <ref refid="classwx_output_stream_1a22154f02408431ffe8b1590407c3b011" kindref="member">Write()</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>It may return 0 even if there is no error on the stream if it is only temporarily impossible to write to it. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/stream.h" line="494" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_output_stream_1a526dbd35592b0280659cf96c0a77e804" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wxOutputStream::PutC</definition>
        <argsstring>(char c)</argsstring>
        <name>PutC</name>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Puts the specified character in the output queue and increments the stream position. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/stream.h" line="500" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_output_stream_1ac898dd36e44e5f4785a6658f470e9752" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="group__group__funcmacro__file_1ga69d831b3febabc149c67b716c8e22de5" kindref="member">wxFileOffset</ref></type>
        <definition>virtual wxFileOffset wxOutputStream::SeekO</definition>
        <argsstring>(wxFileOffset pos, wxSeekMode mode=wxFromStart)</argsstring>
        <name>SeekO</name>
        <reimplementedby refid="classwx_buffered_output_stream_1a309319db903fbd2476dd5d7a6b800051">SeekO</reimplementedby>
        <param>
          <type><ref refid="group__group__funcmacro__file_1ga69d831b3febabc149c67b716c8e22de5" kindref="member">wxFileOffset</ref></type>
          <declname>pos</declname>
        </param>
        <param>
          <type><ref refid="group__group__funcmacro__file_1gae3981f8632f0391e5c852bf62eb982b0" kindref="member">wxSeekMode</ref></type>
          <declname>mode</declname>
          <defval><ref refid="group__group__funcmacro__file_1ggae3981f8632f0391e5c852bf62eb982b0afe95aa5f8bbda276d20a0860a2af841d" kindref="member">wxFromStart</ref></defval>
        </param>
        <briefdescription>
<para>Changes the stream current position. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>Offset to seek to. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>One of wxFromStart, wxFromEnd, wxFromCurrent.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The new stream position or <ref refid="group__group__funcmacro__file_1gab184c7199d93541d22ae42e515cbbcb7" kindref="member">wxInvalidOffset</ref> on error. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/stream.h" line="512" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_output_stream_1a468208f94273630dcbdb0c692645e42c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="group__group__funcmacro__file_1ga69d831b3febabc149c67b716c8e22de5" kindref="member">wxFileOffset</ref></type>
        <definition>virtual wxFileOffset wxOutputStream::TellO</definition>
        <argsstring>() const</argsstring>
        <name>TellO</name>
        <briefdescription>
<para>Returns the current stream position. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/stream.h" line="517" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_output_stream_1a22154f02408431ffe8b1590407c3b011" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classwx_output_stream" kindref="compound">wxOutputStream</ref> &amp;</type>
        <definition>virtual wxOutputStream&amp; wxOutputStream::Write</definition>
        <argsstring>(const void *buffer, size_t size)</argsstring>
        <name>Write</name>
        <param>
          <type>const void *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Writes up to the specified amount of bytes using the data of buffer. </para>        </briefdescription>
        <detaileddescription>
<para>Note that not all data can always be written so you must check the number of bytes really written to the stream using <ref refid="classwx_output_stream_1ac21c598e20937355e538fdf2e2926164" kindref="member">LastWrite()</ref> when this function returns.</para><para>In some cases (for example a write end of a pipe which is currently full) it is even possible that there is no errors and zero bytes have been written. This function returns a reference on the current object, so the user can test any states of the stream right away. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/stream.h" line="530" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_output_stream_1aacced095d3e9b19b4f6264d94c85cf8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_output_stream" kindref="compound">wxOutputStream</ref> &amp;</type>
        <definition>wxOutputStream&amp; wxOutputStream::Write</definition>
        <argsstring>(wxInputStream &amp;stream_in)</argsstring>
        <name>Write</name>
        <param>
          <type><ref refid="classwx_input_stream" kindref="compound">wxInputStream</ref> &amp;</type>
          <declname>stream_in</declname>
        </param>
        <briefdescription>
<para>Reads data from the specified input stream and stores them in the current stream. </para>        </briefdescription>
        <detaileddescription>
<para>The data is read until an error is raised by one of the two streams. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/stream.h" line="537" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_output_stream_1aa82aca41108fba5cebbba951c84431f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wxOutputStream::WriteAll</definition>
        <argsstring>(const void *buffer, size_t size)</argsstring>
        <name>WriteAll</name>
        <param>
          <type>const void *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Writes exactly the specified number of bytes from the buffer. </para>        </briefdescription>
        <detaileddescription>
<para>Returns true if exactly <emphasis>size</emphasis> bytes were written. Otherwise, returns false and <ref refid="classwx_output_stream_1ac21c598e20937355e538fdf2e2926164" kindref="member">LastWrite()</ref> should be used to retrieve the exact amount of the data written if necessary.</para><para>This method uses repeated calls to <ref refid="classwx_output_stream_1a22154f02408431ffe8b1590407c3b011" kindref="member">Write()</ref> (which may return writing only part of the data) if necessary.</para><para><simplesect kind="since"><para>2.9.5 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/stream.h" line="551" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classwx_output_stream_1a41773bceb97b1981cbc3d69c596df929" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t wxOutputStream::OnSysWrite</definition>
        <argsstring>(const void *buffer, size_t bufsize)</argsstring>
        <name>OnSysWrite</name>
        <param>
          <type>const void *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bufsize</declname>
        </param>
        <briefdescription>
<para>Internal function. </para>        </briefdescription>
        <detaileddescription>
<para>It is called when the stream wants to write data of the specified size <emphasis>bufsize</emphasis> into the given <emphasis>buffer</emphasis>.</para><para>It should return the size that was actually wrote (which maybe zero if <emphasis>bufsize</emphasis> is zero or if an error occurred; in this last case the internal variable <computeroutput>m_lasterror</computeroutput> should be appropriately set). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/stream.h" line="562" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classwx_output_stream" kindref="compound">wxOutputStream</ref> is an abstract base class which may not be used directly. </para>    </briefdescription>
    <detaileddescription>
<para>It is the base class of all streams which provide a <ref refid="classwx_output_stream_1a22154f02408431ffe8b1590407c3b011" kindref="member">Write()</ref> function, i.e. which can be used to output data (e.g. to a file, to a socket, etc).</para><para>If you want to create your own output stream, you&apos;ll need to derive from this class and implement the protected <ref refid="classwx_output_stream_1a41773bceb97b1981cbc3d69c596df929" kindref="member">OnSysWrite()</ref> function only.</para><para><heading level="2"></heading>
</para><para>Library:<nonbreakablespace/><nonbreakablespace/><ref refid="page_libs_1page_libs_wxbase" kindref="member">wxBase</ref> &lt;&gt;&lt; =&apos;&apos;&gt;:&lt;/&gt;&amp;;&amp;;&lt; =&apos;&apos;&gt;\ &lt;/&gt;&lt;/&gt; </para>    </detaileddescription>
    <inheritancegraph>
      <node id="5049">
        <label>wxZlibOutputStream</label>
        <link refid="classwx_zlib_output_stream"/>
        <childnode refid="5044" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5053">
        <label>wxTempFileOutputStream</label>
        <link refid="classwx_temp_file_output_stream"/>
        <childnode refid="5037" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5048">
        <label>wxBufferedOutputStream</label>
        <link refid="classwx_buffered_output_stream"/>
        <childnode refid="5044" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5040">
        <label>wxFFileOutputStream</label>
        <link refid="classwx_f_file_output_stream"/>
        <childnode refid="5037" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5047">
        <label>wxZipOutputStream</label>
        <link refid="classwx_zip_output_stream"/>
        <childnode refid="5045" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5043">
        <label>wxFileStream</label>
        <link refid="classwx_file_stream"/>
        <childnode refid="5042" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5039">
        <label>wxCountingOutputStream</label>
        <link refid="classwx_counting_output_stream"/>
        <childnode refid="5037" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5050">
        <label>wxMemoryOutputStream</label>
        <link refid="classwx_memory_output_stream"/>
        <childnode refid="5037" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5042">
        <label>wxFileOutputStream</label>
        <link refid="classwx_file_output_stream"/>
        <childnode refid="5037" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5038">
        <label>wxStreamBase</label>
        <link refid="classwx_stream_base"/>
      </node>
      <node id="5046">
        <label>wxTarOutputStream</label>
        <link refid="classwx_tar_output_stream"/>
        <childnode refid="5045" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5044">
        <label>wxFilterOutputStream</label>
        <link refid="classwx_filter_output_stream"/>
        <childnode refid="5037" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5052">
        <label>wxStringOutputStream</label>
        <link refid="classwx_string_output_stream"/>
        <childnode refid="5037" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5037">
        <label>wxOutputStream</label>
        <link refid="classwx_output_stream"/>
        <childnode refid="5038" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5045">
        <label>wxArchiveOutputStream</label>
        <link refid="classwx_archive_output_stream"/>
        <childnode refid="5044" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5041">
        <label>wxFFileStream</label>
        <link refid="classwx_f_file_stream"/>
        <childnode refid="5040" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5051">
        <label>wxSocketOutputStream</label>
        <link refid="classwx_socket_output_stream"/>
        <childnode refid="5037" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5055">
        <label>wxStreamBase</label>
        <link refid="classwx_stream_base"/>
      </node>
      <node id="5054">
        <label>wxOutputStream</label>
        <link refid="classwx_output_stream"/>
        <childnode refid="5055" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="interface/wx/stream.h" line="466" column="1" bodyfile="interface/wx/stream.h" bodystart="465" bodyend="563"/>
    <listofallmembers>
      <member refid="classwx_output_stream_1a1c306ce99990d525921f8f6ae8432083" prot="public" virt="virtual"><scope>wxOutputStream</scope><name>Close</name></member>
      <member refid="classwx_stream_base_1a33440c8ea3f8df382adecd7d188a1662" prot="public" virt="non-virtual"><scope>wxOutputStream</scope><name>GetLastError</name></member>
      <member refid="classwx_stream_base_1a052d67c85f63873fabb45ecd108ea615" prot="public" virt="virtual"><scope>wxOutputStream</scope><name>GetLength</name></member>
      <member refid="classwx_stream_base_1aae8094702c3aee35c38e3e06e052479c" prot="public" virt="virtual"><scope>wxOutputStream</scope><name>GetSize</name></member>
      <member refid="classwx_stream_base_1ad33abd694469e858fc3bbb0163a7fc4b" prot="public" virt="virtual"><scope>wxOutputStream</scope><name>IsOk</name></member>
      <member refid="classwx_stream_base_1a927368a32e940a11b96dbfb617d9afda" prot="public" virt="virtual"><scope>wxOutputStream</scope><name>IsSeekable</name></member>
      <member refid="classwx_output_stream_1ac21c598e20937355e538fdf2e2926164" prot="public" virt="virtual"><scope>wxOutputStream</scope><name>LastWrite</name></member>
      <member refid="classwx_stream_base_1ae38e82c374f82d39993909f0a5d3017e" prot="protected" virt="virtual"><scope>wxOutputStream</scope><name>OnSysSeek</name></member>
      <member refid="classwx_stream_base_1a7131a1f866ea911e90bb85bc1937d29b" prot="protected" virt="virtual"><scope>wxOutputStream</scope><name>OnSysTell</name></member>
      <member refid="classwx_output_stream_1a41773bceb97b1981cbc3d69c596df929" prot="protected" virt="non-virtual"><scope>wxOutputStream</scope><name>OnSysWrite</name></member>
      <member refid="classwx_stream_base_1a2559b4fcfc7f7173259d703b39cb0d33" prot="public" virt="non-virtual"><scope>wxOutputStream</scope><name>operator!</name></member>
      <member refid="classwx_output_stream_1a526dbd35592b0280659cf96c0a77e804" prot="public" virt="non-virtual"><scope>wxOutputStream</scope><name>PutC</name></member>
      <member refid="classwx_stream_base_1a52353ac42f72538b2022a84f416e5fe2" prot="public" virt="non-virtual"><scope>wxOutputStream</scope><name>Reset</name></member>
      <member refid="classwx_output_stream_1ac898dd36e44e5f4785a6658f470e9752" prot="public" virt="virtual"><scope>wxOutputStream</scope><name>SeekO</name></member>
      <member refid="classwx_output_stream_1a468208f94273630dcbdb0c692645e42c" prot="public" virt="virtual"><scope>wxOutputStream</scope><name>TellO</name></member>
      <member refid="classwx_output_stream_1a22154f02408431ffe8b1590407c3b011" prot="public" virt="virtual"><scope>wxOutputStream</scope><name>Write</name></member>
      <member refid="classwx_output_stream_1aacced095d3e9b19b4f6264d94c85cf8f" prot="public" virt="non-virtual"><scope>wxOutputStream</scope><name>Write</name></member>
      <member refid="classwx_output_stream_1aa82aca41108fba5cebbba951c84431f0" prot="public" virt="non-virtual"><scope>wxOutputStream</scope><name>WriteAll</name></member>
      <member refid="classwx_output_stream_1ab2391df744df6ec2d4e4e3f561c51118" prot="public" virt="non-virtual"><scope>wxOutputStream</scope><name>wxOutputStream</name></member>
      <member refid="classwx_stream_base_1a2bdb01f1ccd34d551d3cfc848054bf1e" prot="public" virt="non-virtual"><scope>wxOutputStream</scope><name>wxStreamBase</name></member>
      <member refid="classwx_output_stream_1aadf4d69a6ab7430e99ecb8d02feecfd3" prot="public" virt="virtual"><scope>wxOutputStream</scope><name>~wxOutputStream</name></member>
      <member refid="classwx_stream_base_1aebba32b4da79c60933fa997735a8bfe5" prot="public" virt="virtual"><scope>wxOutputStream</scope><name>~wxStreamBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
