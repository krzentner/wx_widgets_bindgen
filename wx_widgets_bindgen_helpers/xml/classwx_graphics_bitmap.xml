<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classwx_graphics_bitmap" kind="class" language="C++" prot="public">
    <compoundname>wxGraphicsBitmap</compoundname>
    <basecompoundref refid="classwx_graphics_object" prot="public" virt="non-virtual">wxGraphicsObject</basecompoundref>
    <includes local="no">wx/graphics.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwx_graphics_bitmap_1abd87e82aa3511ef89f6822511a8bbb45" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>wxGraphicsBitmap::wxGraphicsBitmap</definition>
        <argsstring>()</argsstring>
        <name>wxGraphicsBitmap</name>
        <briefdescription>
<para>Default constructor creates an invalid bitmap. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="283" column="1" bodyfile="interface/wx/graphics.h" bodystart="283" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="classwx_graphics_bitmap_1afe5b68d6584d416f5ef88b06a06b4242" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwx_image" kindref="compound">wxImage</ref></type>
        <definition>wxImage wxGraphicsBitmap::ConvertToImage</definition>
        <argsstring>() const</argsstring>
        <name>ConvertToImage</name>
        <briefdescription>
<para>Return the contents of this bitmap as <ref refid="classwx_image" kindref="compound">wxImage</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>Using this method is more efficient than converting <ref refid="classwx_graphics_bitmap" kindref="compound">wxGraphicsBitmap</ref> to <ref refid="classwx_bitmap" kindref="compound">wxBitmap</ref> first and then to <ref refid="classwx_image" kindref="compound">wxImage</ref> and can be useful if, for example, you want to save <ref refid="classwx_graphics_bitmap" kindref="compound">wxGraphicsBitmap</ref> as a disk file in a format not directly supported by <ref refid="classwx_bitmap" kindref="compound">wxBitmap</ref>.</para><para>Invalid image is returned if the bitmap is invalid.</para><para><simplesect kind="since"><para>2.9.3 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="297" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classwx_graphics_bitmap_1afdccd2d05a4e59aff9365aefb5390e99" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* wxGraphicsBitmap::GetNativeBitmap</definition>
        <argsstring>() const</argsstring>
        <name>GetNativeBitmap</name>
        <briefdescription>
<para>Return the pointer to the native bitmap data. </para>        </briefdescription>
        <detaileddescription>
<para>(CGImageRef for Core Graphics, cairo_surface_t for Cairo, Bitmap* for GDI+.)</para><para><simplesect kind="since"><para>2.9.4 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="interface/wx/graphics.h" line="305" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents a bitmap. </para>    </briefdescription>
    <detaileddescription>
<para>The objects of this class are not created directly but only via <ref refid="classwx_graphics_context" kindref="compound">wxGraphicsContext</ref> or <ref refid="classwx_graphics_renderer" kindref="compound">wxGraphicsRenderer</ref> CreateBitmap(), CreateBitmapFromImage() or CreateSubBitmap() methods. They can subsequently be used with <ref refid="classwx_graphics_context_1aee61e2fbc580d7f6a344daa1d1e13296" kindref="member">wxGraphicsContext::DrawBitmap()</ref>. The only other operation is testing for the bitmap validity which can be performed using <ref refid="classwx_graphics_object_1a217fe7a511a2a20f4a39089329e5b6e5" kindref="member">IsNull()</ref> method inherited from the base class. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="2803">
        <label>wxObject</label>
        <link refid="classwx_object"/>
      </node>
      <node id="2801">
        <label>wxGraphicsBitmap</label>
        <link refid="classwx_graphics_bitmap"/>
        <childnode refid="2802" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2802">
        <label>wxGraphicsObject</label>
        <link refid="classwx_graphics_object"/>
        <childnode refid="2803" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2806">
        <label>wxObject</label>
        <link refid="classwx_object"/>
        <childnode refid="2807" relation="usage">
          <edgelabel>m_refData</edgelabel>
        </childnode>
      </node>
      <node id="2804">
        <label>wxGraphicsBitmap</label>
        <link refid="classwx_graphics_bitmap"/>
        <childnode refid="2805" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2805">
        <label>wxGraphicsObject</label>
        <link refid="classwx_graphics_object"/>
        <childnode refid="2806" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2807">
        <label>wxObjectRefData</label>
        <link refid="classwx_object_ref_data"/>
      </node>
    </collaborationgraph>
    <location file="interface/wx/graphics.h" line="278" column="1" bodyfile="interface/wx/graphics.h" bodystart="277" bodyend="306"/>
    <listofallmembers>
      <member refid="classwx_object_1a60204063f3cc3aa2fa1c7ff5bda9eb13" prot="protected" virt="non-virtual"><scope>wxGraphicsBitmap</scope><name>AllocExclusive</name></member>
      <member refid="classwx_object_1a436fc8fe68cf8a31000296d9cd3d2427" prot="protected" virt="virtual"><scope>wxGraphicsBitmap</scope><name>CloneRefData</name></member>
      <member refid="classwx_graphics_bitmap_1afe5b68d6584d416f5ef88b06a06b4242" prot="public" virt="non-virtual"><scope>wxGraphicsBitmap</scope><name>ConvertToImage</name></member>
      <member refid="classwx_object_1a3f4f497c65cef611e121c41f21dd5ccc" prot="protected" virt="virtual"><scope>wxGraphicsBitmap</scope><name>CreateRefData</name></member>
      <member refid="classwx_object_1ae6d365f2556b26767ced8410c5e839d0" prot="public" virt="virtual"><scope>wxGraphicsBitmap</scope><name>GetClassInfo</name></member>
      <member refid="classwx_graphics_bitmap_1afdccd2d05a4e59aff9365aefb5390e99" prot="public" virt="non-virtual"><scope>wxGraphicsBitmap</scope><name>GetNativeBitmap</name></member>
      <member refid="classwx_object_1af3c6c76a775864832f1536d3c0de3a2b" prot="public" virt="non-virtual"><scope>wxGraphicsBitmap</scope><name>GetRefData</name></member>
      <member refid="classwx_graphics_object_1a7b43981ec6a6502c8112edb4d8020f8b" prot="public" virt="non-virtual"><scope>wxGraphicsBitmap</scope><name>GetRenderer</name></member>
      <member refid="classwx_object_1a3c7115ef4132dcee0c4fc34e84d7fced" prot="public" virt="non-virtual"><scope>wxGraphicsBitmap</scope><name>IsKindOf</name></member>
      <member refid="classwx_graphics_object_1a217fe7a511a2a20f4a39089329e5b6e5" prot="public" virt="non-virtual"><scope>wxGraphicsBitmap</scope><name>IsNull</name></member>
      <member refid="classwx_object_1a059373c494c2369d7db2a556efef8ecf" prot="public" virt="non-virtual"><scope>wxGraphicsBitmap</scope><name>IsSameAs</name></member>
      <member refid="classwx_object_1a9e31954530a0abd54982effc443ed2b8" prot="protected" virt="non-virtual"><scope>wxGraphicsBitmap</scope><name>m_refData</name></member>
      <member refid="classwx_object_1a07b8f34f5afc5743195c5fed052f55d3" prot="public" virt="non-virtual"><scope>wxGraphicsBitmap</scope><name>operator delete</name></member>
      <member refid="classwx_object_1a96fa423a1dbc212c8227a5d83825971f" prot="public" virt="non-virtual"><scope>wxGraphicsBitmap</scope><name>operator new</name></member>
      <member refid="classwx_object_1a2f6f1aa51fe9fc2b1415ca4211a90e9e" prot="public" virt="non-virtual"><scope>wxGraphicsBitmap</scope><name>Ref</name></member>
      <member refid="classwx_object_1afab780710f2adc1bb33310e27590140b" prot="public" virt="non-virtual"><scope>wxGraphicsBitmap</scope><name>SetRefData</name></member>
      <member refid="classwx_object_1af51efc6b1ae632fc7f0cd7ebbce9fa36" prot="public" virt="non-virtual"><scope>wxGraphicsBitmap</scope><name>UnRef</name></member>
      <member refid="classwx_object_1a74b40e42d19a4b9e9bec0b57d62a5725" prot="public" virt="non-virtual"><scope>wxGraphicsBitmap</scope><name>UnShare</name></member>
      <member refid="classwx_graphics_bitmap_1abd87e82aa3511ef89f6822511a8bbb45" prot="public" virt="non-virtual"><scope>wxGraphicsBitmap</scope><name>wxGraphicsBitmap</name></member>
      <member refid="classwx_object_1acaa378363a28af421ab56ad7b46eadf0" prot="public" virt="non-virtual"><scope>wxGraphicsBitmap</scope><name>wxObject</name></member>
      <member refid="classwx_object_1a4721b4dc9b7aff0f30904ba2ea3954cf" prot="public" virt="non-virtual"><scope>wxGraphicsBitmap</scope><name>wxObject</name></member>
      <member refid="classwx_object_1a2a51aa8bfbab47ca2f051bcf84b3f35b" prot="public" virt="virtual"><scope>wxGraphicsBitmap</scope><name>~wxObject</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
